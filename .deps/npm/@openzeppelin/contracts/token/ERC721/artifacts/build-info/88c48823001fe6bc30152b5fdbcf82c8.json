{
	"id": "88c48823001fe6bc30152b5fdbcf82c8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC721.sol\";\nimport \"./IERC721Receiver.sol\";\nimport \"./extensions/IERC721Metadata.sol\";\nimport \"../../utils/Address.sol\";\nimport \"../../utils/Context.sol\";\nimport \"../../utils/Strings.sol\";\nimport \"../../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\n    using Address for address;\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to owner address\n    mapping(uint256 => address) private _owners;\n\n    // Mapping owner address to token count\n    mapping(address => uint256) private _balances;\n\n    // Mapping from token ID to approved address\n    mapping(uint256 => address) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256 ans) {\n        require(owner != address(0), \"ERC721: address zero is not a valid owner\");\n             uint slot;\n             \n                    assembly\n                     {\n                         slot := _balances.slot\n                     }\n\n             bytes32 location = keccak256(abi.encode(owner, slot));\n\n                     assembly\n                      {\n                         ans := sload(location)// getvalue\n                         //sstore(location, amount) setvalue\n                      }  \n               \n       // return _balances[owner];    \n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        address owner = _ownerOf(tokenId);\n        require(owner != address(0), \"ERC721: invalid token ID\");\n        return owner;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireMinted(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual override {\n        address owner = ERC721.ownerOf(tokenId);\n        require(to != owner, \"ERC721: approval to current owner\");\n\n        require(\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\n            \"ERC721: approve caller is not token owner or approved for all\"\n        );\n\n        _approve(to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        _requireMinted(tokenId);\n\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool approvedForAll) {\n       assembly {\n            mstore(0x00, owner)\n            mstore(0x20, operator)\n            approvedForAll := sload(keccak256(0x00, 0x40)) //3130\n        }\n       // return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual override {\n        //solhint-disable-next-line max-line-length\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n\n        _transfer(from, to, tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\");\n        _safeTransfer(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\");\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address ans) {\n             uint slot;\n                    assembly\n                     {\n                         slot := _owners.slot\n                     }\n\n             bytes32 location = keccak256(abi.encode(tokenId, slot));\n\n                     assembly\n                      {\n                         ans := sload(location)// getvalue\n                         //sstore(location, amount) setvalue\n                      }  \n            \n       \n       // return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted (`_mint`),\n     * and stop existing when they are burned (`_burn`).\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\n        return _ownerOf(tokenId) != address(0);\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\n        address owner = ERC721.ownerOf(tokenId);\n        return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Safely mints `tokenId` and transfers it to `to`.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal virtual {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        require(\n            _checkOnERC721Received(address(0), to, tokenId, data),\n            \"ERC721: transfer to non ERC721Receiver implementer\"\n        );\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal virtual {\n        require(to != address(0), \"ERC721: mint to the zero address\");\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        _beforeTokenTransfer(address(0), to, tokenId, 1);\n\n        // Check that tokenId was not minted by `_beforeTokenTransfer` hook\n        require(!_exists(tokenId), \"ERC721: token already minted\");\n\n        unchecked {\n            // Will not overflow unless all 2**256 token ids are minted to the same owner.\n            // Given that tokens are minted one by one, it is impossible in practice that\n            // this ever happens. Might change if we allow batch minting.\n            // The ERC fails to describe this case.\n            _balances[to] += 1;\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(address(0), to, tokenId);\n\n        _afterTokenTransfer(address(0), to, tokenId, 1);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        address owner = ERC721.ownerOf(tokenId);\n\n        _beforeTokenTransfer(owner, address(0), tokenId, 1);\n\n        // Update ownership in case tokenId was transferred by `_beforeTokenTransfer` hook\n        owner = ERC721.ownerOf(tokenId);\n\n        // Clear approvals\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // Cannot overflow, as that would require more tokens to be burned/transferred\n            // out than the owner initially received through minting and transferring in.\n            _balances[owner] -= 1;\n        }\n        delete _owners[tokenId];\n\n        emit Transfer(owner, address(0), tokenId);\n\n        _afterTokenTransfer(owner, address(0), tokenId, 1);\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal virtual {\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n        require(to != address(0), \"ERC721: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, tokenId, 1);\n\n        // Check that tokenId was not transferred by `_beforeTokenTransfer` hook\n        require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\");\n\n        // Clear approvals from the previous owner\n        delete _tokenApprovals[tokenId];\n\n        unchecked {\n            // `_balances[from]` cannot overflow for the same reason as described in `_burn`:\n            // `from`'s balance is the number of token held, which is at least one before the current\n            // transfer.\n            // `_balances[to]` could overflow in the conditions described in `_mint`. That would require\n            // all 2**256 token ids to be minted, which in practice is impossible.\n            //_balances[from] -= 1;\n            saveWithAssemblyBalance(from, safeSub(_balances[from], 1));\n           // _balances[to] += 1;\n           saveWithAssemblyBalance(from, safeAdd(_balances[to], 1));\n        }\n       // _owners[tokenId] = to;\n            saveWithAssemblyOwner(tokenId, to);\n        emit Transfer(from, to, tokenId);\n\n        _afterTokenTransfer(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n       // _tokenApprovals[tokenId] = to;\n       saveWithAssemblyTokenApproval(tokenId,to);\n        //emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC721: approve to caller\");\n        //_operatorApprovals[owner][operator] = approved;\n        saveNestedWithOperatorApproval(owner,operator,approved);\n       // emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` has not been minted yet.\n     */\n    function _requireMinted(uint256 tokenId) internal view virtual {\n        require(_exists(tokenId), \"ERC721: invalid token ID\");\n    }\n\n    /**\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n     * The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     * @return bool whether the call correctly returned the expected magic value\n     */\n    function _checkOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) private returns (bool) {\n        if (to.isContract()) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                return retval == IERC721Receiver.onERC721Received.selector;\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert(\"ERC721: transfer to non ERC721Receiver implementer\");\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        } else {\n            return true;\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n     * - When `from` is zero, the tokens will be minted for `to`.\n     * - When `to` is zero, ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n     * used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n     * - When `from` is zero, the tokens were minted for `to`.\n     * - When `to` is zero, ``from``'s tokens were burned.\n     * - `from` and `to` are never both zero.\n     * - `batchSize` is non-zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {}\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n     * being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n     * that `ownerOf(tokenId)` is `a`.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n\n    \n    function __unsafe_increaseBalance(address account, uint256 amount) internal {\n        _balances[account] += amount;\n    }\n\n\n         function saveWithAssemblyBalance(address _user, uint _amount) private\n        {\n         assembly\n            {\n                mstore(0, _user)              // Load _user into memory at position 0\n                mstore(32, _balances.slot)       // Load storage slot of assets mapping into memory at position 32\n                let hash := keccak256(0, 64)  // Calculate the storage location using _user and assets' slot\n                sstore(hash, _amount)         // Store _amount at the calculated storage location\n            }     \n        }\n\n         function saveWithAssemblyOwner( uint _amount, address _user) private\n        {\n         assembly\n            {\n                mstore(0, _amount)              // Load _user into memory at position 0\n                mstore(32, _owners.slot)       // Load storage slot of assets mapping into memory at position 32\n                let hash := keccak256(0, 64)  // Calculate the storage location using _user and assets' slot\n                sstore(hash, _user)         // Store _amount at the calculated storage location\n            }     \n        }\n\n\n         function saveWithAssemblyTokenApproval( uint _amount, address _user) private\n        {\n         assembly\n            {\n                mstore(0, _amount)              // Load _user into memory at position 0\n                mstore(32, _owners.slot)       // Load storage slot of assets mapping into memory at position 32\n                let hash := keccak256(0, 64)  // Calculate the storage location using _user and assets' slot\n                sstore(hash, _user)         // Store _amount at the calculated storage location\n            }     \n        }\n\n    function saveNestedWithOperatorApproval(address _user1, address _user2, bool b) private\n     {\n        uint256 slot;\n        assembly {\n            slot := _operatorApprovals.slot\n        }\n\n        bytes32 locationOfParentValue = keccak256(abi.encode(_user1, slot));\n        // hashs the parent key with the nested key\n        bytes32 locationOfNestedValue = keccak256(abi.encode(_user2, locationOfParentValue));\n\n        assembly {\n            sstore(locationOfNestedValue, b)\n        }\n}\n     function safeAdd(uint a, uint b) private pure returns (uint c) \n        {\n\n            assembly{\n                c:=add(a,b)\n            }\n\n        }  \n\n     function safeSub(uint a, uint b) private pure returns (uint c) \n     {\n\n            assembly{\n                if lt(b,a)\n                {c:=sub(a,b)}\n            }\n     }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			".deps/npm/@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "ans",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "approvedForAll",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:20919  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  mstore(0x40, 0x80)\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1464:1469  name_ */\n  dup2\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1461  _name */\n  0x00\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1456:1469  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1489:1496  symbol_ */\n  dup1\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1486  _symbol */\n  0x01\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1479:1496  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1390:1503  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:20919  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n  jump(tag_9)\n    /* \"#utility.yul\":7:82   */\ntag_10:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_11:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_12:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_13:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_14:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_15:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_16:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_17:\n    /* \"#utility.yul\":957:984   */\n  tag_51\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_15\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_53\n  tag_16\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":1030:1118   */\ntag_52:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_18:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_55\n  tag_10\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_56\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_17\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_19:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_59\n  tag_16\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1434:1490   */\ntag_58:\n    /* \"#utility.yul\":1508:1537   */\n  tag_60\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_15\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_20:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_62:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_62)\ntag_64:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_21:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_66\n    /* \"#utility.yul\":1992:2041   */\n  tag_67\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_19\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1976:2042   */\n  tag_18\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_69\n  tag_14\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2117:2229   */\ntag_68:\n    /* \"#utility.yul\":2238:2290   */\n  tag_70\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_20\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_22:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_73\n  tag_13\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2399:2521   */\ntag_72:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_74\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_21\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_77\n  tag_11\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2801:2920   */\ntag_76:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_79\n  tag_12\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2996:3113   */\ntag_78:\n    /* \"#utility.yul\":3137:3211   */\n  tag_80\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_22\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_82\n  tag_12\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3298:3415   */\ntag_81:\n    /* \"#utility.yul\":3439:3513   */\n  tag_83\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_22\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_23:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_24:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_25:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_87:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_89\n  tag_24\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":4057:4141   */\ntag_88:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_26:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_27:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_28:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_29:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_94\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_28\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4772:4811   */\n  tag_95\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_28\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_30:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_31:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_32:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_99\n    /* \"#utility.yul\":5161:5195   */\n  tag_100\n    /* \"#utility.yul\":5170:5194   */\n  tag_101\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_30\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5161:5195   */\n  tag_31\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5143:5196   */\n  tag_30\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_33:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_34:\n    /* \"#utility.yul\":5399:5438   */\n  tag_104\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_32\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5460:5551   */\n  tag_105\n    /* \"#utility.yul\":5509:5550   */\n  tag_106\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_33\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_29\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_35:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_36:\n    /* \"#utility.yul\":5720:5752   */\n  tag_109\n  tag_35\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5761:5826   */\n  tag_110\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_34\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_37:\n    /* \"#utility.yul\":5898:6018   */\ntag_112:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_115\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_36\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_38:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_118\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_26\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6249:6278   */\n  tag_119\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_27\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_120:\n    /* \"#utility.yul\":6476:6556   */\n  tag_121\n    /* \"#utility.yul\":6532:6554   */\n  tag_122\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_27\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_37\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_117:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_39:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_40:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_125\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_39\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_41:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_127\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_40\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_7:\n    /* \"#utility.yul\":7293:7330   */\n  tag_129\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_23\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_131\n  tag_16\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7381:7437   */\ntag_130:\n    /* \"#utility.yul\":7461:7499   */\n  tag_132\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_25\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7546:7613   */\n  tag_133\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_38\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_136:\n    /* \"#utility.yul\":8487:8554   */\n  tag_137\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_41\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_134)\n    /* \"#utility.yul\":7708:8326   */\ntag_135:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_138\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_26\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_139:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_143\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_40\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_142:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_134:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:20919  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\ntag_9:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":628:20919  contract ERC721 is Context, ERC165, IERC721, IERC721Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2928:3026  function name() public view virtual override returns (string memory) {... */\n    tag_4:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4392:4559  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_5:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3925:4331  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_6:\n      tag_34\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5247:5543  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5609:5758  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_8:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_43:\n      tag_44\n      jump\t// in\n    tag_42:\n      stop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2647:2866  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2590  function balanceOf(address owner) public view virtual override returns (uint256 ans) {... */\n    tag_10:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3090:3192  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4626:4779  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      stop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:6100  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      stop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3258:3534  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4845:5185  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool approvedForAll) {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1672:1676  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1722:1747  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1718  interfaceId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1747  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_76\n      jumpi\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1778:1811  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1774  interfaceId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1763:1811  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1811  interfaceId == type(IERC721).interfaceId ||... */\n    tag_76:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_77\n      jumpi\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n      tag_78\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1851:1862  interfaceId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1850  super.supportsInterface */\n      tag_79\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1827:1863  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_78:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1707:1863  interfaceId == type(IERC721).interfaceId ||... */\n    tag_77:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1688:1863  return... */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1570:1870  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2928:3026  function name() public view virtual override returns (string memory) {... */\n    tag_25:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2982:2995  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3014:3019  _name */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3007:3019  return _name */\n      dup1\n      sload\n      tag_81\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_82\n      jump\t// in\n    tag_83:\n      dup1\n      iszero\n      tag_84\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_85\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_84)\n    tag_85:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_86:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_86\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_84:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2928:3026  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4392:4559  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_31:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4468:4475  address */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4487:4510  _requireMinted(tokenId) */\n      tag_88\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4502:4509  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4487:4501  _requireMinted */\n      tag_89\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4487:4510  _requireMinted(tokenId) */\n      jump\t// in\n    tag_88:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4528:4543  _tokenApprovals */\n      0x04\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4528:4552  _tokenApprovals[tokenId] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4544:4551  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4528:4552  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4521:4552  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4392:4559  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3925:4331  function approve(address to, uint256 tokenId) public virtual override {... */\n    tag_37:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4005:4018  address owner */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4021:4044  ERC721.ownerOf(tokenId) */\n      tag_91\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4036:4043  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4021:4035  ERC721.ownerOf */\n      tag_47\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4021:4044  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_91:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4005:4044  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4068:4073  owner */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4062:4073  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4062:4064  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4062:4073  to != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4054:4111  require(to != owner, \"ERC721: approval to current owner\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_92:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4159:4164  owner */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4164  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4155  _msgSender() */\n      tag_95\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4153  _msgSender */\n      tag_96\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4155  _msgSender() */\n      jump\t// in\n    tag_95:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4164  _msgSender() == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4205  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n      dup1\n      tag_97\n      jumpi\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4168:4205  isApprovedForAll(owner, _msgSender()) */\n      tag_98\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4185:4190  owner */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4192:4204  _msgSender() */\n      tag_99\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4192:4202  _msgSender */\n      tag_96\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4192:4204  _msgSender() */\n      jump\t// in\n    tag_99:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4168:4184  isApprovedForAll */\n      tag_73\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4168:4205  isApprovedForAll(owner, _msgSender()) */\n      jump\t// in\n    tag_98:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4205  _msgSender() == owner || isApprovedForAll(owner, _msgSender()) */\n    tag_97:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4122:4292  require(... */\n      tag_100\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_101\n      swap1\n      tag_102\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4303:4324  _approve(to, tokenId) */\n      tag_103\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4312:4314  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4316:4323  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4303:4311  _approve */\n      tag_104\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4303:4324  _approve(to, tokenId) */\n      jump\t// in\n    tag_103:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3995:4331  {... */\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3925:4331  function approve(address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5247:5543  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_41:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5406:5447  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_106\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5425:5437  _msgSender() */\n      tag_107\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5425:5435  _msgSender */\n      tag_96\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5425:5437  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5439:5446  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5406:5424  _isApprovedOrOwner */\n      tag_108\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5406:5447  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_106:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5398:5497  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_109:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5508:5536  _transfer(from, to, tokenId) */\n      tag_112\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5518:5522  from */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5524:5526  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5528:5535  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5508:5517  _transfer */\n      tag_113\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5508:5536  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_112:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5247:5543  function transferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5609:5758  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n    tag_44:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5712:5751  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_115\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5729:5733  from */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5735:5737  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5739:5746  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5712:5751  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5712:5728  safeTransferFrom */\n      tag_65\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5712:5751  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_115:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5609:5758  function safeTransferFrom(address from, address to, uint256 tokenId) public virtual override {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2647:2866  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_47:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2719:2726  address */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2738:2751  address owner */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2754:2771  _ownerOf(tokenId) */\n      tag_117\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2763:2770  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2754:2762  _ownerOf */\n      tag_118\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2754:2771  _ownerOf(tokenId) */\n      jump\t// in\n    tag_117:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2738:2771  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2806:2807  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2789:2808  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2789:2794  owner */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2789:2808  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2781:2837  require(owner != address(0), \"ERC721: invalid token ID\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_120\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_119:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2854:2859  owner */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2847:2859  return owner */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2647:2866  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2590  function balanceOf(address owner) public view virtual override returns (uint256 ans) {... */\n    tag_52:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2001:2012  uint256 ans */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2049:2050  0 */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2032:2051  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2032:2037  owner */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2032:2051  owner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2024:2097  require(owner != address(0), \"ERC721: address zero is not a valid owner\") */\n      tag_123\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_124\n      swap1\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_123:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2112:2121  uint slot */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2222:2236  _balances.slot */\n      0x03\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2214:2236  slot := _balances.slot */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2290  bytes32 location */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2314:2319  owner */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2321:2325  slot */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2303:2326  abi.encode(owner, slot) */\n      add(0x20, mload(0x40))\n      tag_126\n      swap3\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2293:2327  keccak256(abi.encode(owner, slot)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2327  bytes32 location = keccak256(abi.encode(owner, slot)) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2422:2430  location */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2416:2431  sload(location) */\n      sload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2409:2431  ans := sload(location) */\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":2382:2527  {... */\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":1929:2590  function balanceOf(address owner) public view virtual override returns (uint256 ans) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3090:3192  function symbol() public view virtual override returns (string memory) {... */\n    tag_56:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3146:3159  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3178:3185  _symbol */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3171:3185  return _symbol */\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_82\n      jump\t// in\n    tag_129:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_130\n      swap1\n      tag_82\n      jump\t// in\n    tag_130:\n      dup1\n      iszero\n      tag_131\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_132\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_131)\n    tag_132:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_133:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_133\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3090:3192  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4626:4779  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_61:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4720:4772  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_135\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4739:4751  _msgSender() */\n      tag_136\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4739:4749  _msgSender */\n      tag_96\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4739:4751  _msgSender() */\n      jump\t// in\n    tag_136:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4753:4761  operator */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4763:4771  approved */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4720:4738  _setApprovalForAll */\n      tag_137\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4720:4772  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_135:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4626:4779  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:6100  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n    tag_65:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5954:5995  _isApprovedOrOwner(_msgSender(), tokenId) */\n      tag_139\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5973:5985  _msgSender() */\n      tag_140\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5973:5983  _msgSender */\n      tag_96\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5973:5985  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5987:5994  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5954:5972  _isApprovedOrOwner */\n      tag_108\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5954:5995  _isApprovedOrOwner(_msgSender(), tokenId) */\n      jump\t// in\n    tag_139:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5946:6045  require(_isApprovedOrOwner(_msgSender(), tokenId), \"ERC721: caller is not token owner or approved\") */\n      tag_141\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_142\n      swap1\n      tag_111\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_141:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6055:6093  _safeTransfer(from, to, tokenId, data) */\n      tag_143\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6069:6073  from */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6075:6077  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6079:6086  tokenId */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6088:6092  data */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6055:6068  _safeTransfer */\n      tag_144\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6055:6093  _safeTransfer(from, to, tokenId, data) */\n      jump\t// in\n    tag_143:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5824:6100  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual override {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3258:3534  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_68:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3331:3344  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3356:3379  _requireMinted(tokenId) */\n      tag_146\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3371:3378  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3356:3370  _requireMinted */\n      tag_89\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3356:3379  _requireMinted(tokenId) */\n      jump\t// in\n    tag_146:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3390:3411  string memory baseURI */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3414:3424  _baseURI() */\n      tag_147\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3414:3422  _baseURI */\n      tag_148\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3414:3424  _baseURI() */\n      jump\t// in\n    tag_147:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3390:3424  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3465:3466  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3447:3454  baseURI */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3441:3462  bytes(baseURI).length */\n      mload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3441:3466  bytes(baseURI).length > 0 */\n      gt\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3441:3527  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      tag_149\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_150)\n    tag_149:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3493:3500  baseURI */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3502:3520  tokenId.toString() */\n      tag_151\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3502:3509  tokenId */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3502:3518  tokenId.toString */\n      tag_152\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3502:3520  tokenId.toString() */\n      jump\t// in\n    tag_151:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3476:3521  abi.encodePacked(baseURI, tokenId.toString()) */\n      add(0x20, mload(0x40))\n      tag_153\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3441:3527  bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n    tag_150:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3434:3527  return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \"\" */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3258:3534  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4845:5185  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool approvedForAll) {... */\n    tag_73:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4942:4961  bool approvedForAll */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5008:5013  owner */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5002:5006  0x00 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4995:5014  mstore(0x00, owner) */\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5040:5048  operator */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5034:5038  0x20 */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5027:5049  mstore(0x20, operator) */\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5102:5106  0x40 */\n      0x40\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5096:5100  0x00 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5086:5107  keccak256(0x00, 0x40) */\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5080:5108  sload(keccak256(0x00, 0x40)) */\n      sload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":5062:5108  approvedForAll := sload(keccak256(0x00, 0x40)) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":4845:5185  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool approvedForAll) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_79:\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14636:14769  function _requireMinted(uint256 tokenId) internal view virtual {... */\n    tag_89:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14717:14733  _exists(tokenId) */\n      tag_158\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14725:14732  tokenId */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14717:14724  _exists */\n      tag_159\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14717:14733  _exists(tokenId) */\n      jump\t// in\n    tag_158:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14709:14762  require(_exists(tokenId), \"ERC721: invalid token ID\") */\n      tag_160\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap1\n      tag_121\n      jump\t// in\n    tag_161:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_160:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14636:14769  function _requireMinted(uint256 tokenId) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_96:\n        /* \".deps/npm/@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \".deps/npm/@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13845:14070  function _approve(address to, uint256 tokenId) internal virtual {... */\n    tag_104:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13959:14000  saveWithAssemblyTokenApproval(tokenId,to) */\n      tag_164\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13989:13996  tokenId */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13997:13999  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13959:13988  saveWithAssemblyTokenApproval */\n      tag_165\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13959:14000  saveWithAssemblyTokenApproval(tokenId,to) */\n      jump\t// in\n    tag_164:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13845:14070  function _approve(address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8483:8744  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_108:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8576:8580  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8592:8605  address owner */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8608:8631  ERC721.ownerOf(tokenId) */\n      tag_167\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8623:8630  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8608:8622  ERC721.ownerOf */\n      tag_47\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8608:8631  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_167:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8592:8631  address owner = ERC721.ownerOf(tokenId) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8660:8665  owner */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8649:8665  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8649:8656  spender */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8649:8665  spender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8649:8701  spender == owner || isApprovedForAll(owner, spender) */\n      dup1\n      tag_168\n      jumpi\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8669:8701  isApprovedForAll(owner, spender) */\n      tag_169\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8686:8691  owner */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8693:8700  spender */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8669:8685  isApprovedForAll */\n      tag_73\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8669:8701  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_169:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8649:8701  spender == owner || isApprovedForAll(owner, spender) */\n    tag_168:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8649:8736  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n      dup1\n      tag_170\n      jumpi\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8729:8736  spender */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8705:8736  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8705:8725  getApproved(tokenId) */\n      tag_171\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8717:8724  tokenId */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8705:8716  getApproved */\n      tag_31\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8705:8725  getApproved(tokenId) */\n      jump\t// in\n    tag_171:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8705:8736  getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8649:8736  spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender */\n    tag_170:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8641:8737  return (spender == owner || isApprovedForAll(owner, spender) || getApproved(tokenId) == spender) */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8483:8744  function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12336:13733  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n    tag_113:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12460:12464  from */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12433:12464  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12433:12456  ERC721.ownerOf(tokenId) */\n      tag_173\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12448:12455  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12433:12447  ERC721.ownerOf */\n      tag_47\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12433:12456  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_173:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12433:12464  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12425:12506  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12538:12539  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12524:12540  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12524:12526  to */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12524:12540  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12516:12581  require(to != address(0), \"ERC721: transfer to the zero address\") */\n      tag_177\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_177:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12592:12634  _beforeTokenTransfer(from, to, tokenId, 1) */\n      tag_180\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12613:12617  from */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12619:12621  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12623:12630  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12632:12633  1 */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12592:12612  _beforeTokenTransfer */\n      tag_181\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12592:12634  _beforeTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_180:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12761:12765  from */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12734:12765  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12734:12757  ERC721.ownerOf(tokenId) */\n      tag_182\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12749:12756  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12734:12748  ERC721.ownerOf */\n      tag_47\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12734:12757  ERC721.ownerOf(tokenId) */\n      jump\t// in\n    tag_182:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12734:12765  ERC721.ownerOf(tokenId) == from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12726:12807  require(ERC721.ownerOf(tokenId) == from, \"ERC721: transfer from incorrect owner\") */\n      tag_183\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap1\n      tag_176\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_183:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12876:12891  _tokenApprovals */\n      0x04\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12876:12900  _tokenApprovals[tokenId] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12892:12899  tokenId */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12876:12900  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12869:12900  delete _tokenApprovals[tokenId] */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13380:13438  saveWithAssemblyBalance(from, safeSub(_balances[from], 1)) */\n      tag_185\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13404:13408  from */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13410:13437  safeSub(_balances[from], 1) */\n      tag_186\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13418:13427  _balances */\n      0x03\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13418:13433  _balances[from] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13428:13432  from */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13418:13433  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13435:13436  1 */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13410:13417  safeSub */\n      tag_187\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13410:13437  safeSub(_balances[from], 1) */\n      jump\t// in\n    tag_186:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13380:13403  saveWithAssemblyBalance */\n      tag_188\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13380:13438  saveWithAssemblyBalance(from, safeSub(_balances[from], 1)) */\n      jump\t// in\n    tag_185:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13485:13541  saveWithAssemblyBalance(from, safeAdd(_balances[to], 1)) */\n      tag_189\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13509:13513  from */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13515:13540  safeAdd(_balances[to], 1) */\n      tag_190\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13523:13532  _balances */\n      0x03\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13523:13536  _balances[to] */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13533:13535  to */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13523:13536  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13538:13539  1 */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13515:13522  safeAdd */\n      tag_191\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13515:13540  safeAdd(_balances[to], 1) */\n      jump\t// in\n    tag_190:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13485:13508  saveWithAssemblyBalance */\n      tag_188\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13485:13541  saveWithAssemblyBalance(from, safeAdd(_balances[to], 1)) */\n      jump\t// in\n    tag_189:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13598:13632  saveWithAssemblyOwner(tokenId, to) */\n      tag_192\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13620:13627  tokenId */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13629:13631  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13598:13619  saveWithAssemblyOwner */\n      tag_193\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13598:13632  saveWithAssemblyOwner(tokenId, to) */\n      jump\t// in\n    tag_192:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13666:13673  tokenId */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13662:13664  to */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13647:13674  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13656:13660  from */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13647:13674  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13685:13726  _afterTokenTransfer(from, to, tokenId, 1) */\n      tag_194\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13705:13709  from */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13711:13713  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13715:13722  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13724:13725  1 */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13685:13704  _afterTokenTransfer */\n      tag_195\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":13685:13726  _afterTokenTransfer(from, to, tokenId, 1) */\n      jump\t// in\n    tag_194:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":12336:13733  function _transfer(address from, address to, uint256 tokenId) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7337:7896  function _ownerOf(uint256 tokenId) internal view virtual returns (address ans) {... */\n    tag_118:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7403:7414  address ans */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7431:7440  uint slot */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7527:7539  _owners.slot */\n      0x02\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7519:7539  slot := _owners.slot */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7577:7593  bytes32 location */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7617:7624  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7626:7630  slot */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7606:7631  abi.encode(tokenId, slot) */\n      add(0x20, mload(0x40))\n      tag_197\n      swap3\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7596:7632  keccak256(abi.encode(tokenId, slot)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7577:7632  bytes32 location = keccak256(abi.encode(tokenId, slot)) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7727:7735  location */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7721:7736  sload(location) */\n      sload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7714:7736  ans := sload(location) */\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7687:7832  {... */\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7337:7896  function _ownerOf(uint256 tokenId) internal view virtual returns (address ans) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14206:14552  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_137:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14326:14334  operator */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14317:14334  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14317:14322  owner */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14317:14334  owner != operator */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14309:14364  require(owner != operator, \"ERC721: approve to caller\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14432:14487  saveNestedWithOperatorApproval(owner,operator,approved) */\n      tag_203\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14463:14468  owner */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14469:14477  operator */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14478:14486  approved */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14432:14462  saveNestedWithOperatorApproval */\n      tag_204\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14432:14487  saveNestedWithOperatorApproval(owner,operator,approved) */\n      jump\t// in\n    tag_203:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":14206:14552  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6961:7228  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n    tag_144:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7073:7101  _transfer(from, to, tokenId) */\n      tag_206\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7083:7087  from */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7089:7091  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7093:7100  tokenId */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7073:7082  _transfer */\n      tag_113\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7073:7101  _transfer(from, to, tokenId) */\n      jump\t// in\n    tag_206:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7119:7166  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_207\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7142:7146  from */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7148:7150  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7152:7159  tokenId */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7161:7165  data */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7119:7141  _checkOnERC721Received */\n      tag_208\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7119:7166  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_207:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":7111:7221  require(_checkOnERC721Received(from, to, tokenId, data), \"ERC721: transfer to non ERC721Receiver implementer\") */\n      tag_209\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_209:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":6961:7228  function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3776:3868  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_148:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3827:3840  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3852:3861  return \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":3776:3868  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n    tag_152:\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":503:516  string memory */\n      0x60\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":552:566  uint256 length */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":589:590  1 */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      tag_214\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":580:585  value */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":569:579  Math.log10 */\n      tag_215\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":569:586  Math.log10(value) */\n      jump\t// in\n    tag_214:\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":569:590  Math.log10(value) + 1 */\n      add\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":552:590  uint256 length = Math.log10(value) + 1 */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":604:624  string memory buffer */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":638:644  length */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":627:645  new string(length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_216\n      jumpi\n      tag_217\n      tag_218\n      jump\t// in\n    tag_217:\n    tag_216:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_219\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_219:\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":604:645  string memory buffer = new string(length) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":659:670  uint256 ptr */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":785:791  length */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":781:783  32 */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":777:792  add(32, length) */\n      add\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":769:775  buffer */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":765:793  add(buffer, add(32, length)) */\n      add\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":758:793  ptr := add(buffer, add(32, length)) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_220:\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":827:831  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      iszero\n      tag_221\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":851:856  ptr-- */\n      dup1\n      dup1\n      0x01\n      swap1\n      sub\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":990:998  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":985:987  10 */\n      0x0a\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":978:983  value */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":974:988  mod(value, 10) */\n      mod\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":969:999  byte(mod(value, 10), _SYMBOLS) */\n      byte\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":964:967  ptr */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":956:1000  mstore8(ptr, byte(mod(value, 10), _SYMBOLS)) */\n      mstore8\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":1044:1046  10 */\n      0x0a\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":1035:1046  value /= 10 */\n      dup6\n      dup2\n      tag_222\n      jumpi\n      tag_223\n      tag_224\n      jump\t// in\n    tag_223:\n    tag_222:\n      div\n      swap5\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":1077:1078  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":1068:1073  value */\n      dup6\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":1068:1078  value == 0 */\n      sub\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n      tag_220\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":1064:1085  if (value == 0) break */\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":820:1100  while (true) {... */\n    tag_221:\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":1120:1126  buffer */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":1113:1126  return buffer */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":447:1143  function toString(uint256 value) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8199:8325  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_159:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8264:8268  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8316:8317  0 */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8287:8318  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8287:8304  _ownerOf(tokenId) */\n      tag_227\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8296:8303  tokenId */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8287:8295  _ownerOf */\n      tag_118\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8287:8304  _ownerOf(tokenId) */\n      jump\t// in\n    tag_227:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8287:8318  _ownerOf(tokenId) != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8280:8318  return _ownerOf(tokenId) != address(0) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":8199:8325  function _exists(uint256 tokenId) internal view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19533:20086  function saveWithAssemblyTokenApproval( uint _amount, address _user) private... */\n    tag_165:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19678:19685  _amount */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19675:19676  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19668:19686  mstore(0, _amount) */\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19767:19779  _owners.slot */\n      0x02\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19763:19765  32 */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19756:19780  mstore(32, _owners.slot) */\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19894:19896  64 */\n      0x40\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19891:19892  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19881:19897  keccak256(0, 64) */\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19991:19996  _user */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19985:19989  hash */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19978:19997  sstore(hash, _user) */\n      sstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19650:20071  {... */\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19533:20086  function saveWithAssemblyTokenApproval( uint _amount, address _user) private... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16868:16984  function _beforeTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {} */\n    tag_181:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20746:20917  function safeSub(uint a, uint b) private pure returns (uint c) ... */\n    tag_187:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20801:20807  uint c */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20864:20865  a */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20862:20863  b */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20859:20866  lt(b,a) */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20856:20896  if lt(b,a)... */\n      iszero\n      tag_231\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20893:20894  b */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20891:20892  a */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20887:20895  sub(a,b) */\n      sub\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20884:20895  c:=sub(a,b) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20856:20896  if lt(b,a)... */\n    tag_231:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20746:20917  function safeSub(uint a, uint b) private pure returns (uint c) ... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18417:18965  function saveWithAssemblyBalance(address _user, uint _amount) private... */\n    tag_188:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18555:18560  _user */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18552:18553  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18545:18561  mstore(0, _user) */\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18642:18656  _balances.slot */\n      0x03\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18638:18640  32 */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18631:18657  mstore(32, _balances.slot) */\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18771:18773  64 */\n      0x40\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18768:18769  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18758:18774  keccak256(0, 64) */\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18868:18875  _amount */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18862:18866  hash */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18855:18876  sstore(hash, _amount) */\n      sstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18527:18950  {... */\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18417:18965  function saveWithAssemblyBalance(address _user, uint _amount) private... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20588:20737  function safeAdd(uint a, uint b) private pure returns (uint c) ... */\n    tag_191:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20643:20649  uint c */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20710:20711  b */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20708:20709  a */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20704:20712  add(a,b) */\n      add\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20701:20712  c:=add(a,b) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20588:20737  function safeAdd(uint a, uint b) private pure returns (uint c) ... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18976:19521  function saveWithAssemblyOwner( uint _amount, address _user) private... */\n    tag_193:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19113:19120  _amount */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19110:19111  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19103:19121  mstore(0, _amount) */\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19202:19214  _owners.slot */\n      0x02\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19198:19200  32 */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19191:19215  mstore(32, _owners.slot) */\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19329:19331  64 */\n      0x40\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19326:19327  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19316:19332  keccak256(0, 64) */\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19426:19431  _user */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19420:19424  hash */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19413:19432  sstore(hash, _user) */\n      sstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":19085:19506  {... */\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":18976:19521  function saveWithAssemblyOwner( uint _amount, address _user) private... */\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":17690:17805  function _afterTokenTransfer(address from, address to, uint256 firstTokenId, uint256 batchSize) internal virtual {} */\n    tag_195:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20092:20582  function saveNestedWithOperatorApproval(address _user1, address _user2, bool b) private... */\n    tag_204:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20195:20207  uint256 slot */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20248:20271  _operatorApprovals.slot */\n      0x05\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20240:20271  slot := _operatorApprovals.slot */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20291:20320  bytes32 locationOfParentValue */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20344:20350  _user1 */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20352:20356  slot */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20333:20357  abi.encode(_user1, slot) */\n      add(0x20, mload(0x40))\n      tag_237\n      swap3\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n    tag_237:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20323:20358  keccak256(abi.encode(_user1, slot)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20291:20358  bytes32 locationOfParentValue = keccak256(abi.encode(_user1, slot)) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20420:20449  bytes32 locationOfNestedValue */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20473:20479  _user2 */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20481:20502  locationOfParentValue */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20462:20503  abi.encode(_user2, locationOfParentValue) */\n      add(0x20, mload(0x40))\n      tag_238\n      swap3\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20452:20504  keccak256(abi.encode(_user2, locationOfParentValue)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20420:20504  bytes32 locationOfNestedValue = keccak256(abi.encode(_user2, locationOfParentValue)) */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20568:20569  b */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20545:20566  locationOfNestedValue */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20538:20570  sstore(locationOfNestedValue, b) */\n      sstore\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20524:20580  {... */\n      pop\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":20092:20582  function saveNestedWithOperatorApproval(address _user1, address _user2, bool b) private... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15321:16152  function _checkOnERC721Received(... */\n    tag_208:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15470:15474  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15490:15505  to.isContract() */\n      tag_241\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15490:15492  to */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15490:15503  to.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_242\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15490:15505  to.isContract() */\n      jump\t// in\n    tag_241:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15486:16146  if (to.isContract()) {... */\n      iszero\n      tag_243\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15541:15543  to */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15525:15561  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15562:15574  _msgSender() */\n      tag_244\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15562:15572  _msgSender */\n      tag_96\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15562:15574  _msgSender() */\n      jump\t// in\n    tag_244:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15576:15580  from */\n      dup8\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15582:15589  tokenId */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15595  data */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15525:15596  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_245\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_247\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_248\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      0x01\n    tag_247:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15521:16094  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_250\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_255\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_254)\n    tag_255:\n      0x60\n      swap2\n      pop\n    tag_254:\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15780:15781  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15763:15769  reason */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15763:15776  reason.length */\n      mload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15763:15781  reason.length == 0 */\n      sub\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15759:16080  if (reason.length == 0) {... */\n      tag_256\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15805:15865  revert(\"ERC721: transfer to non ERC721Receiver implementer\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_257\n      swap1\n      tag_211\n      jump\t// in\n    tag_257:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15759:16080  if (reason.length == 0) {... */\n    tag_256:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16032:16038  reason */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16026:16039  mload(reason) */\n      mload\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16017:16023  reason */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16013:16015  32 */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16009:16024  add(32, reason) */\n      add\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16002:16040  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15521:16094  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_250:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15656:15697  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15646:15697  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15646:15652  retval */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15646:15697  retval == IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15639:15697  return retval == IERC721Receiver.onERC721Received.selector */\n      swap2\n      pop\n      pop\n      jump(tag_240)\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15486:16146  if (to.isContract()) {... */\n    tag_243:\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16131:16135  true */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":16124:16135  return true */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":15321:16152  function _checkOnERC721Received(... */\n    tag_240:\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n    tag_215:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10192:10199  uint256 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10211:10225  uint256 result */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10228:10229  0 */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10211:10229  uint256 result = 0 */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10276:10284  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10267:10272  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10267:10284  value >= 10 ** 64 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n      tag_262\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10313:10321  10 ** 64 */\n      0x184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10304:10321  value /= 10 ** 64 */\n      dup4\n      dup2\n      tag_263\n      jumpi\n      tag_264\n      tag_224\n      jump\t// in\n    tag_264:\n    tag_263:\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10349:10351  64 */\n      0x40\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10339:10351  result += 64 */\n      dup2\n      add\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10263:10366  if (value >= 10 ** 64) {... */\n    tag_262:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10392:10400  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10383:10388  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10383:10400  value >= 10 ** 32 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n      tag_265\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10429:10437  10 ** 32 */\n      0x04ee2d6d415b85acef8100000000\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10420:10437  value /= 10 ** 32 */\n      dup4\n      dup2\n      tag_266\n      jumpi\n      tag_267\n      tag_224\n      jump\t// in\n    tag_267:\n    tag_266:\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10465:10467  32 */\n      0x20\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10455:10467  result += 32 */\n      dup2\n      add\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10379:10482  if (value >= 10 ** 32) {... */\n    tag_265:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10508:10516  10 ** 16 */\n      0x2386f26fc10000\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10499:10504  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10499:10516  value >= 10 ** 16 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n      tag_268\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10545:10553  10 ** 16 */\n      0x2386f26fc10000\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10536:10553  value /= 10 ** 16 */\n      dup4\n      dup2\n      tag_269\n      jumpi\n      tag_270\n      tag_224\n      jump\t// in\n    tag_270:\n    tag_269:\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10581:10583  16 */\n      0x10\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10571:10583  result += 16 */\n      dup2\n      add\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10495:10598  if (value >= 10 ** 16) {... */\n    tag_268:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10624:10631  10 ** 8 */\n      0x05f5e100\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10615:10620  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10615:10631  value >= 10 ** 8 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n      tag_271\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10660:10667  10 ** 8 */\n      0x05f5e100\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10651:10667  value /= 10 ** 8 */\n      dup4\n      dup2\n      tag_272\n      jumpi\n      tag_273\n      tag_224\n      jump\t// in\n    tag_273:\n    tag_272:\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10695:10696  8 */\n      0x08\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10685:10696  result += 8 */\n      dup2\n      add\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10611:10711  if (value >= 10 ** 8) {... */\n    tag_271:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10737:10744  10 ** 4 */\n      0x2710\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10728:10733  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10728:10744  value >= 10 ** 4 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n      tag_274\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10773:10780  10 ** 4 */\n      0x2710\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10764:10780  value /= 10 ** 4 */\n      dup4\n      dup2\n      tag_275\n      jumpi\n      tag_276\n      tag_224\n      jump\t// in\n    tag_276:\n    tag_275:\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10808:10809  4 */\n      0x04\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10798:10809  result += 4 */\n      dup2\n      add\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10724:10824  if (value >= 10 ** 4) {... */\n    tag_274:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10850:10857  10 ** 2 */\n      0x64\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10841:10846  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10841:10857  value >= 10 ** 2 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n      tag_277\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10886:10893  10 ** 2 */\n      0x64\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10877:10893  value /= 10 ** 2 */\n      dup4\n      dup2\n      tag_278\n      jumpi\n      tag_279\n      tag_224\n      jump\t// in\n    tag_279:\n    tag_278:\n      div\n      swap3\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10921:10922  2 */\n      0x02\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10911:10922  result += 2 */\n      dup2\n      add\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10837:10937  if (value >= 10 ** 2) {... */\n    tag_277:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10963:10970  10 ** 1 */\n      0x0a\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10954:10959  value */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10954:10970  value >= 10 ** 1 */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n      tag_280\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":11000:11001  1 */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10990:11001  result += 1 */\n      dup2\n      add\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10950:11016  if (value >= 10 ** 1) {... */\n    tag_280:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":11042:11048  result */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":11035:11048  return result */\n      swap2\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":10139:11055  function log10(uint256 value) internal pure returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n    tag_242:\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1472:1476  bool */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1724:1725  0 */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1702:1709  account */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1702:1721  account.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1702:1725  account.code.length > 0 */\n      gt\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1695:1725  return account.code.length > 0 */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":1412:1732  function isContract(address account) internal view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_282:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_283:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_284:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_285:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_286:\n        /* \"#utility.yul\":561:584   */\n      tag_347\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_285\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_348\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_348:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_287:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_350\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_286\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_20:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_353\n      tag_283\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":833:952   */\n    tag_352:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_354\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_287\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_288:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_289:\n        /* \"#utility.yul\":1268:1289   */\n      tag_357\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_288\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_23:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_359\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_289\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_290:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_291:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:2044   */\n    tag_292:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1889:2002   */\n    tag_363:\n        /* \"#utility.yul\":1903:1909   */\n      dup4\n        /* \"#utility.yul\":1900:1901   */\n      dup2\n        /* \"#utility.yul\":1897:1910   */\n      lt\n        /* \"#utility.yul\":1889:2002   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":1988:1989   */\n      dup1\n        /* \"#utility.yul\":1983:1986   */\n      dup3\n        /* \"#utility.yul\":1979:1990   */\n      add\n        /* \"#utility.yul\":1973:1991   */\n      mload\n        /* \"#utility.yul\":1969:1970   */\n      dup2\n        /* \"#utility.yul\":1964:1967   */\n      dup5\n        /* \"#utility.yul\":1960:1971   */\n      add\n        /* \"#utility.yul\":1953:1992   */\n      mstore\n        /* \"#utility.yul\":1925:1927   */\n      0x20\n        /* \"#utility.yul\":1922:1923   */\n      dup2\n        /* \"#utility.yul\":1918:1928   */\n      add\n        /* \"#utility.yul\":1913:1928   */\n      swap1\n      pop\n        /* \"#utility.yul\":1889:2002   */\n      jump(tag_363)\n    tag_365:\n        /* \"#utility.yul\":2036:2037   */\n      0x00\n        /* \"#utility.yul\":2027:2033   */\n      dup5\n        /* \"#utility.yul\":2022:2025   */\n      dup5\n        /* \"#utility.yul\":2018:2034   */\n      add\n        /* \"#utility.yul\":2011:2038   */\n      mstore\n        /* \"#utility.yul\":1860:2044   */\n      pop\n        /* \"#utility.yul\":1798:2044   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2050:2152   */\n    tag_293:\n        /* \"#utility.yul\":2091:2097   */\n      0x00\n        /* \"#utility.yul\":2142:2144   */\n      0x1f\n        /* \"#utility.yul\":2138:2145   */\n      not\n        /* \"#utility.yul\":2133:2135   */\n      0x1f\n        /* \"#utility.yul\":2126:2131   */\n      dup4\n        /* \"#utility.yul\":2122:2136   */\n      add\n        /* \"#utility.yul\":2118:2146   */\n      and\n        /* \"#utility.yul\":2108:2146   */\n      swap1\n      pop\n        /* \"#utility.yul\":2050:2152   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2535   */\n    tag_294:\n        /* \"#utility.yul\":2246:2249   */\n      0x00\n        /* \"#utility.yul\":2274:2313   */\n      tag_368\n        /* \"#utility.yul\":2307:2312   */\n      dup3\n        /* \"#utility.yul\":2274:2313   */\n      tag_290\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":2329:2400   */\n      tag_369\n        /* \"#utility.yul\":2393:2399   */\n      dup2\n        /* \"#utility.yul\":2388:2391   */\n      dup6\n        /* \"#utility.yul\":2329:2400   */\n      tag_291\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":2322:2400   */\n      swap4\n      pop\n        /* \"#utility.yul\":2409:2474   */\n      tag_370\n        /* \"#utility.yul\":2467:2473   */\n      dup2\n        /* \"#utility.yul\":2462:2465   */\n      dup6\n        /* \"#utility.yul\":2455:2459   */\n      0x20\n        /* \"#utility.yul\":2448:2453   */\n      dup7\n        /* \"#utility.yul\":2444:2460   */\n      add\n        /* \"#utility.yul\":2409:2474   */\n      tag_292\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":2499:2528   */\n      tag_371\n        /* \"#utility.yul\":2521:2527   */\n      dup2\n        /* \"#utility.yul\":2499:2528   */\n      tag_293\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":2494:2497   */\n      dup5\n        /* \"#utility.yul\":2490:2529   */\n      add\n        /* \"#utility.yul\":2483:2529   */\n      swap2\n      pop\n        /* \"#utility.yul\":2250:2535   */\n      pop\n        /* \"#utility.yul\":2158:2535   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2541:2854   */\n    tag_27:\n        /* \"#utility.yul\":2654:2658   */\n      0x00\n        /* \"#utility.yul\":2692:2694   */\n      0x20\n        /* \"#utility.yul\":2681:2690   */\n      dup3\n        /* \"#utility.yul\":2677:2695   */\n      add\n        /* \"#utility.yul\":2669:2695   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2750   */\n      dup2\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2731:2751   */\n      sub\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2716:2725   */\n      dup4\n        /* \"#utility.yul\":2712:2729   */\n      add\n        /* \"#utility.yul\":2705:2752   */\n      mstore\n        /* \"#utility.yul\":2769:2847   */\n      tag_373\n        /* \"#utility.yul\":2842:2846   */\n      dup2\n        /* \"#utility.yul\":2833:2839   */\n      dup5\n        /* \"#utility.yul\":2769:2847   */\n      tag_294\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":2761:2847   */\n      swap1\n      pop\n        /* \"#utility.yul\":2541:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2937   */\n    tag_295:\n        /* \"#utility.yul\":2897:2904   */\n      0x00\n        /* \"#utility.yul\":2926:2931   */\n      dup2\n        /* \"#utility.yul\":2915:2931   */\n      swap1\n      pop\n        /* \"#utility.yul\":2860:2937   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2943:3065   */\n    tag_296:\n        /* \"#utility.yul\":3016:3040   */\n      tag_376\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3016:3040   */\n      tag_295\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":3009:3014   */\n      dup2\n        /* \"#utility.yul\":3006:3041   */\n      eq\n        /* \"#utility.yul\":2996:3059   */\n      tag_377\n      jumpi\n        /* \"#utility.yul\":3055:3056   */\n      0x00\n        /* \"#utility.yul\":3052:3053   */\n      dup1\n        /* \"#utility.yul\":3045:3057   */\n      revert\n        /* \"#utility.yul\":2996:3059   */\n    tag_377:\n        /* \"#utility.yul\":2943:3065   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3071:3210   */\n    tag_297:\n        /* \"#utility.yul\":3117:3122   */\n      0x00\n        /* \"#utility.yul\":3155:3161   */\n      dup2\n        /* \"#utility.yul\":3142:3162   */\n      calldataload\n        /* \"#utility.yul\":3133:3162   */\n      swap1\n      pop\n        /* \"#utility.yul\":3171:3204   */\n      tag_379\n        /* \"#utility.yul\":3198:3203   */\n      dup2\n        /* \"#utility.yul\":3171:3204   */\n      tag_296\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":3071:3210   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3216:3545   */\n    tag_30:\n        /* \"#utility.yul\":3275:3281   */\n      0x00\n        /* \"#utility.yul\":3324:3326   */\n      0x20\n        /* \"#utility.yul\":3312:3321   */\n      dup3\n        /* \"#utility.yul\":3303:3310   */\n      dup5\n        /* \"#utility.yul\":3299:3322   */\n      sub\n        /* \"#utility.yul\":3295:3327   */\n      slt\n        /* \"#utility.yul\":3292:3411   */\n      iszero\n      tag_381\n      jumpi\n        /* \"#utility.yul\":3330:3409   */\n      tag_382\n      tag_283\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":3292:3411   */\n    tag_381:\n        /* \"#utility.yul\":3450:3451   */\n      0x00\n        /* \"#utility.yul\":3475:3528   */\n      tag_383\n        /* \"#utility.yul\":3520:3527   */\n      dup5\n        /* \"#utility.yul\":3511:3517   */\n      dup3\n        /* \"#utility.yul\":3500:3509   */\n      dup6\n        /* \"#utility.yul\":3496:3518   */\n      add\n        /* \"#utility.yul\":3475:3528   */\n      tag_297\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":3465:3528   */\n      swap2\n      pop\n        /* \"#utility.yul\":3421:3538   */\n      pop\n        /* \"#utility.yul\":3216:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_298:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_299:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_386\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_298\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_300:\n        /* \"#utility.yul\":3872:3896   */\n      tag_388\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_299\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_33:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_390\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_300\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_301:\n        /* \"#utility.yul\":4210:4234   */\n      tag_392\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_299\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_393\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_393:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_302:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_395\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_301\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_36:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_398\n      tag_283\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":4503:4622   */\n    tag_397:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_399\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_302\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_400\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_297\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5509   */\n    tag_40:\n        /* \"#utility.yul\":4967:4973   */\n      0x00\n        /* \"#utility.yul\":4975:4981   */\n      dup1\n        /* \"#utility.yul\":4983:4989   */\n      0x00\n        /* \"#utility.yul\":5032:5034   */\n      0x60\n        /* \"#utility.yul\":5020:5029   */\n      dup5\n        /* \"#utility.yul\":5011:5018   */\n      dup7\n        /* \"#utility.yul\":5007:5030   */\n      sub\n        /* \"#utility.yul\":5003:5035   */\n      slt\n        /* \"#utility.yul\":5000:5119   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":5038:5117   */\n      tag_403\n      tag_283\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":5000:5119   */\n    tag_402:\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5183:5236   */\n      tag_404\n        /* \"#utility.yul\":5228:5235   */\n      dup7\n        /* \"#utility.yul\":5219:5225   */\n      dup3\n        /* \"#utility.yul\":5208:5217   */\n      dup8\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5183:5236   */\n      tag_302\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":5173:5236   */\n      swap4\n      pop\n        /* \"#utility.yul\":5129:5246   */\n      pop\n        /* \"#utility.yul\":5285:5287   */\n      0x20\n        /* \"#utility.yul\":5311:5364   */\n      tag_405\n        /* \"#utility.yul\":5356:5363   */\n      dup7\n        /* \"#utility.yul\":5347:5353   */\n      dup3\n        /* \"#utility.yul\":5336:5345   */\n      dup8\n        /* \"#utility.yul\":5332:5354   */\n      add\n        /* \"#utility.yul\":5311:5364   */\n      tag_302\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":5301:5364   */\n      swap3\n      pop\n        /* \"#utility.yul\":5256:5374   */\n      pop\n        /* \"#utility.yul\":5413:5415   */\n      0x40\n        /* \"#utility.yul\":5439:5492   */\n      tag_406\n        /* \"#utility.yul\":5484:5491   */\n      dup7\n        /* \"#utility.yul\":5475:5481   */\n      dup3\n        /* \"#utility.yul\":5464:5473   */\n      dup8\n        /* \"#utility.yul\":5460:5482   */\n      add\n        /* \"#utility.yul\":5439:5492   */\n      tag_297\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":5429:5492   */\n      swap2\n      pop\n        /* \"#utility.yul\":5384:5502   */\n      pop\n        /* \"#utility.yul\":4890:5509   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5515:5844   */\n    tag_51:\n        /* \"#utility.yul\":5574:5580   */\n      0x00\n        /* \"#utility.yul\":5623:5625   */\n      0x20\n        /* \"#utility.yul\":5611:5620   */\n      dup3\n        /* \"#utility.yul\":5602:5609   */\n      dup5\n        /* \"#utility.yul\":5598:5621   */\n      sub\n        /* \"#utility.yul\":5594:5626   */\n      slt\n        /* \"#utility.yul\":5591:5710   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":5629:5708   */\n      tag_409\n      tag_283\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":5591:5710   */\n    tag_408:\n        /* \"#utility.yul\":5749:5750   */\n      0x00\n        /* \"#utility.yul\":5774:5827   */\n      tag_410\n        /* \"#utility.yul\":5819:5826   */\n      dup5\n        /* \"#utility.yul\":5810:5816   */\n      dup3\n        /* \"#utility.yul\":5799:5808   */\n      dup6\n        /* \"#utility.yul\":5795:5817   */\n      add\n        /* \"#utility.yul\":5774:5827   */\n      tag_302\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":5764:5827   */\n      swap2\n      pop\n        /* \"#utility.yul\":5720:5837   */\n      pop\n        /* \"#utility.yul\":5515:5844   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5850:5968   */\n    tag_303:\n        /* \"#utility.yul\":5937:5961   */\n      tag_412\n        /* \"#utility.yul\":5955:5960   */\n      dup2\n        /* \"#utility.yul\":5937:5961   */\n      tag_295\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":5932:5935   */\n      dup3\n        /* \"#utility.yul\":5925:5962   */\n      mstore\n        /* \"#utility.yul\":5850:5968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5974:6196   */\n    tag_54:\n        /* \"#utility.yul\":6067:6071   */\n      0x00\n        /* \"#utility.yul\":6105:6107   */\n      0x20\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6090:6108   */\n      add\n        /* \"#utility.yul\":6082:6108   */\n      swap1\n      pop\n        /* \"#utility.yul\":6118:6189   */\n      tag_414\n        /* \"#utility.yul\":6186:6187   */\n      0x00\n        /* \"#utility.yul\":6175:6184   */\n      dup4\n        /* \"#utility.yul\":6171:6188   */\n      add\n        /* \"#utility.yul\":6162:6168   */\n      dup5\n        /* \"#utility.yul\":6118:6189   */\n      tag_303\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":5974:6196   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6202:6318   */\n    tag_304:\n        /* \"#utility.yul\":6272:6293   */\n      tag_416\n        /* \"#utility.yul\":6287:6292   */\n      dup2\n        /* \"#utility.yul\":6272:6293   */\n      tag_288\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":6265:6270   */\n      dup2\n        /* \"#utility.yul\":6262:6294   */\n      eq\n        /* \"#utility.yul\":6252:6312   */\n      tag_417\n      jumpi\n        /* \"#utility.yul\":6308:6309   */\n      0x00\n        /* \"#utility.yul\":6305:6306   */\n      dup1\n        /* \"#utility.yul\":6298:6310   */\n      revert\n        /* \"#utility.yul\":6252:6312   */\n    tag_417:\n        /* \"#utility.yul\":6202:6318   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6324:6457   */\n    tag_305:\n        /* \"#utility.yul\":6367:6372   */\n      0x00\n        /* \"#utility.yul\":6405:6411   */\n      dup2\n        /* \"#utility.yul\":6392:6412   */\n      calldataload\n        /* \"#utility.yul\":6383:6412   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6451   */\n      tag_419\n        /* \"#utility.yul\":6445:6450   */\n      dup2\n        /* \"#utility.yul\":6421:6451   */\n      tag_304\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":6324:6457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6463:6931   */\n    tag_60:\n        /* \"#utility.yul\":6528:6534   */\n      0x00\n        /* \"#utility.yul\":6536:6542   */\n      dup1\n        /* \"#utility.yul\":6585:6587   */\n      0x40\n        /* \"#utility.yul\":6573:6582   */\n      dup4\n        /* \"#utility.yul\":6564:6571   */\n      dup6\n        /* \"#utility.yul\":6560:6583   */\n      sub\n        /* \"#utility.yul\":6556:6588   */\n      slt\n        /* \"#utility.yul\":6553:6672   */\n      iszero\n      tag_421\n      jumpi\n        /* \"#utility.yul\":6591:6670   */\n      tag_422\n      tag_283\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":6553:6672   */\n    tag_421:\n        /* \"#utility.yul\":6711:6712   */\n      0x00\n        /* \"#utility.yul\":6736:6789   */\n      tag_423\n        /* \"#utility.yul\":6781:6788   */\n      dup6\n        /* \"#utility.yul\":6772:6778   */\n      dup3\n        /* \"#utility.yul\":6761:6770   */\n      dup7\n        /* \"#utility.yul\":6757:6779   */\n      add\n        /* \"#utility.yul\":6736:6789   */\n      tag_302\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":6726:6789   */\n      swap3\n      pop\n        /* \"#utility.yul\":6682:6799   */\n      pop\n        /* \"#utility.yul\":6838:6840   */\n      0x20\n        /* \"#utility.yul\":6864:6914   */\n      tag_424\n        /* \"#utility.yul\":6906:6913   */\n      dup6\n        /* \"#utility.yul\":6897:6903   */\n      dup3\n        /* \"#utility.yul\":6886:6895   */\n      dup7\n        /* \"#utility.yul\":6882:6904   */\n      add\n        /* \"#utility.yul\":6864:6914   */\n      tag_305\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":6854:6914   */\n      swap2\n      pop\n        /* \"#utility.yul\":6809:6924   */\n      pop\n        /* \"#utility.yul\":6463:6931   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6937:7054   */\n    tag_306:\n        /* \"#utility.yul\":7046:7047   */\n      0x00\n        /* \"#utility.yul\":7043:7044   */\n      dup1\n        /* \"#utility.yul\":7036:7048   */\n      revert\n        /* \"#utility.yul\":7060:7177   */\n    tag_307:\n        /* \"#utility.yul\":7169:7170   */\n      0x00\n        /* \"#utility.yul\":7166:7167   */\n      dup1\n        /* \"#utility.yul\":7159:7171   */\n      revert\n        /* \"#utility.yul\":7183:7363   */\n    tag_218:\n        /* \"#utility.yul\":7231:7308   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7228:7229   */\n      0x00\n        /* \"#utility.yul\":7221:7309   */\n      mstore\n        /* \"#utility.yul\":7328:7332   */\n      0x41\n        /* \"#utility.yul\":7325:7326   */\n      0x04\n        /* \"#utility.yul\":7318:7333   */\n      mstore\n        /* \"#utility.yul\":7352:7356   */\n      0x24\n        /* \"#utility.yul\":7349:7350   */\n      0x00\n        /* \"#utility.yul\":7342:7357   */\n      revert\n        /* \"#utility.yul\":7369:7650   */\n    tag_308:\n        /* \"#utility.yul\":7452:7479   */\n      tag_429\n        /* \"#utility.yul\":7474:7478   */\n      dup3\n        /* \"#utility.yul\":7452:7479   */\n      tag_293\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":7444:7450   */\n      dup2\n        /* \"#utility.yul\":7440:7480   */\n      add\n        /* \"#utility.yul\":7582:7588   */\n      dup2\n        /* \"#utility.yul\":7570:7580   */\n      dup2\n        /* \"#utility.yul\":7567:7589   */\n      lt\n        /* \"#utility.yul\":7546:7564   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7534:7544   */\n      dup3\n        /* \"#utility.yul\":7531:7565   */\n      gt\n        /* \"#utility.yul\":7528:7590   */\n      or\n        /* \"#utility.yul\":7525:7613   */\n      iszero\n      tag_430\n      jumpi\n        /* \"#utility.yul\":7593:7611   */\n      tag_431\n      tag_218\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":7525:7613   */\n    tag_430:\n        /* \"#utility.yul\":7633:7643   */\n      dup1\n        /* \"#utility.yul\":7629:7631   */\n      0x40\n        /* \"#utility.yul\":7622:7644   */\n      mstore\n        /* \"#utility.yul\":7412:7650   */\n      pop\n        /* \"#utility.yul\":7369:7650   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7785   */\n    tag_309:\n        /* \"#utility.yul\":7690:7696   */\n      0x00\n        /* \"#utility.yul\":7717:7737   */\n      tag_433\n      tag_282\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":7707:7737   */\n      swap1\n      pop\n        /* \"#utility.yul\":7746:7779   */\n      tag_434\n        /* \"#utility.yul\":7774:7778   */\n      dup3\n        /* \"#utility.yul\":7766:7772   */\n      dup3\n        /* \"#utility.yul\":7746:7779   */\n      tag_308\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":7656:7785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7791:8098   */\n    tag_310:\n        /* \"#utility.yul\":7852:7856   */\n      0x00\n        /* \"#utility.yul\":7942:7960   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7934:7940   */\n      dup3\n        /* \"#utility.yul\":7931:7961   */\n      gt\n        /* \"#utility.yul\":7928:7984   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":7964:7982   */\n      tag_437\n      tag_218\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":7928:7984   */\n    tag_436:\n        /* \"#utility.yul\":8002:8031   */\n      tag_438\n        /* \"#utility.yul\":8024:8030   */\n      dup3\n        /* \"#utility.yul\":8002:8031   */\n      tag_293\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":7994:8031   */\n      swap1\n      pop\n        /* \"#utility.yul\":8086:8090   */\n      0x20\n        /* \"#utility.yul\":8080:8084   */\n      dup2\n        /* \"#utility.yul\":8076:8091   */\n      add\n        /* \"#utility.yul\":8068:8091   */\n      swap1\n      pop\n        /* \"#utility.yul\":7791:8098   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8104:8250   */\n    tag_311:\n        /* \"#utility.yul\":8201:8207   */\n      dup3\n        /* \"#utility.yul\":8196:8199   */\n      dup2\n        /* \"#utility.yul\":8191:8194   */\n      dup4\n        /* \"#utility.yul\":8178:8208   */\n      calldatacopy\n        /* \"#utility.yul\":8242:8243   */\n      0x00\n        /* \"#utility.yul\":8233:8239   */\n      dup4\n        /* \"#utility.yul\":8228:8231   */\n      dup4\n        /* \"#utility.yul\":8224:8240   */\n      add\n        /* \"#utility.yul\":8217:8244   */\n      mstore\n        /* \"#utility.yul\":8104:8250   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8256:8679   */\n    tag_312:\n        /* \"#utility.yul\":8333:8338   */\n      0x00\n        /* \"#utility.yul\":8358:8423   */\n      tag_441\n        /* \"#utility.yul\":8374:8422   */\n      tag_442\n        /* \"#utility.yul\":8415:8421   */\n      dup5\n        /* \"#utility.yul\":8374:8422   */\n      tag_310\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":8358:8423   */\n      tag_309\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":8349:8423   */\n      swap1\n      pop\n        /* \"#utility.yul\":8446:8452   */\n      dup3\n        /* \"#utility.yul\":8439:8444   */\n      dup2\n        /* \"#utility.yul\":8432:8453   */\n      mstore\n        /* \"#utility.yul\":8484:8488   */\n      0x20\n        /* \"#utility.yul\":8477:8482   */\n      dup2\n        /* \"#utility.yul\":8473:8489   */\n      add\n        /* \"#utility.yul\":8522:8525   */\n      dup5\n        /* \"#utility.yul\":8513:8519   */\n      dup5\n        /* \"#utility.yul\":8508:8511   */\n      dup5\n        /* \"#utility.yul\":8504:8520   */\n      add\n        /* \"#utility.yul\":8501:8526   */\n      gt\n        /* \"#utility.yul\":8498:8610   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":8529:8608   */\n      tag_444\n      tag_307\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":8498:8610   */\n    tag_443:\n        /* \"#utility.yul\":8619:8673   */\n      tag_445\n        /* \"#utility.yul\":8666:8672   */\n      dup5\n        /* \"#utility.yul\":8661:8664   */\n      dup3\n        /* \"#utility.yul\":8656:8659   */\n      dup6\n        /* \"#utility.yul\":8619:8673   */\n      tag_311\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":8339:8679   */\n      pop\n        /* \"#utility.yul\":8256:8679   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8698:9036   */\n    tag_313:\n        /* \"#utility.yul\":8753:8758   */\n      0x00\n        /* \"#utility.yul\":8802:8805   */\n      dup3\n        /* \"#utility.yul\":8795:8799   */\n      0x1f\n        /* \"#utility.yul\":8787:8793   */\n      dup4\n        /* \"#utility.yul\":8783:8800   */\n      add\n        /* \"#utility.yul\":8779:8806   */\n      slt\n        /* \"#utility.yul\":8769:8891   */\n      tag_447\n      jumpi\n        /* \"#utility.yul\":8810:8889   */\n      tag_448\n      tag_306\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":8769:8891   */\n    tag_447:\n        /* \"#utility.yul\":8927:8933   */\n      dup2\n        /* \"#utility.yul\":8914:8934   */\n      calldataload\n        /* \"#utility.yul\":8952:9030   */\n      tag_449\n        /* \"#utility.yul\":9026:9029   */\n      dup5\n        /* \"#utility.yul\":9018:9024   */\n      dup3\n        /* \"#utility.yul\":9011:9015   */\n      0x20\n        /* \"#utility.yul\":9003:9009   */\n      dup7\n        /* \"#utility.yul\":8999:9016   */\n      add\n        /* \"#utility.yul\":8952:9030   */\n      tag_312\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":8943:9030   */\n      swap2\n      pop\n        /* \"#utility.yul\":8759:9036   */\n      pop\n        /* \"#utility.yul\":8698:9036   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9042:9985   */\n    tag_64:\n        /* \"#utility.yul\":9137:9143   */\n      0x00\n        /* \"#utility.yul\":9145:9151   */\n      dup1\n        /* \"#utility.yul\":9153:9159   */\n      0x00\n        /* \"#utility.yul\":9161:9167   */\n      dup1\n        /* \"#utility.yul\":9210:9213   */\n      0x80\n        /* \"#utility.yul\":9198:9207   */\n      dup6\n        /* \"#utility.yul\":9189:9196   */\n      dup8\n        /* \"#utility.yul\":9185:9208   */\n      sub\n        /* \"#utility.yul\":9181:9214   */\n      slt\n        /* \"#utility.yul\":9178:9298   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":9217:9296   */\n      tag_452\n      tag_283\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":9178:9298   */\n    tag_451:\n        /* \"#utility.yul\":9337:9338   */\n      0x00\n        /* \"#utility.yul\":9362:9415   */\n      tag_453\n        /* \"#utility.yul\":9407:9414   */\n      dup8\n        /* \"#utility.yul\":9398:9404   */\n      dup3\n        /* \"#utility.yul\":9387:9396   */\n      dup9\n        /* \"#utility.yul\":9383:9405   */\n      add\n        /* \"#utility.yul\":9362:9415   */\n      tag_302\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":9352:9415   */\n      swap5\n      pop\n        /* \"#utility.yul\":9308:9425   */\n      pop\n        /* \"#utility.yul\":9464:9466   */\n      0x20\n        /* \"#utility.yul\":9490:9543   */\n      tag_454\n        /* \"#utility.yul\":9535:9542   */\n      dup8\n        /* \"#utility.yul\":9526:9532   */\n      dup3\n        /* \"#utility.yul\":9515:9524   */\n      dup9\n        /* \"#utility.yul\":9511:9533   */\n      add\n        /* \"#utility.yul\":9490:9543   */\n      tag_302\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":9480:9543   */\n      swap4\n      pop\n        /* \"#utility.yul\":9435:9553   */\n      pop\n        /* \"#utility.yul\":9592:9594   */\n      0x40\n        /* \"#utility.yul\":9618:9671   */\n      tag_455\n        /* \"#utility.yul\":9663:9670   */\n      dup8\n        /* \"#utility.yul\":9654:9660   */\n      dup3\n        /* \"#utility.yul\":9643:9652   */\n      dup9\n        /* \"#utility.yul\":9639:9661   */\n      add\n        /* \"#utility.yul\":9618:9671   */\n      tag_297\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":9608:9671   */\n      swap3\n      pop\n        /* \"#utility.yul\":9563:9681   */\n      pop\n        /* \"#utility.yul\":9748:9750   */\n      0x60\n        /* \"#utility.yul\":9737:9746   */\n      dup6\n        /* \"#utility.yul\":9733:9751   */\n      add\n        /* \"#utility.yul\":9720:9752   */\n      calldataload\n        /* \"#utility.yul\":9779:9797   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9771:9777   */\n      dup2\n        /* \"#utility.yul\":9768:9798   */\n      gt\n        /* \"#utility.yul\":9765:9882   */\n      iszero\n      tag_456\n      jumpi\n        /* \"#utility.yul\":9801:9880   */\n      tag_457\n      tag_284\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":9765:9882   */\n    tag_456:\n        /* \"#utility.yul\":9906:9968   */\n      tag_458\n        /* \"#utility.yul\":9960:9967   */\n      dup8\n        /* \"#utility.yul\":9951:9957   */\n      dup3\n        /* \"#utility.yul\":9940:9949   */\n      dup9\n        /* \"#utility.yul\":9936:9958   */\n      add\n        /* \"#utility.yul\":9906:9968   */\n      tag_313\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":9896:9968   */\n      swap2\n      pop\n        /* \"#utility.yul\":9691:9978   */\n      pop\n        /* \"#utility.yul\":9042:9985   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9991:10465   */\n    tag_72:\n        /* \"#utility.yul\":10059:10065   */\n      0x00\n        /* \"#utility.yul\":10067:10073   */\n      dup1\n        /* \"#utility.yul\":10116:10118   */\n      0x40\n        /* \"#utility.yul\":10104:10113   */\n      dup4\n        /* \"#utility.yul\":10095:10102   */\n      dup6\n        /* \"#utility.yul\":10091:10114   */\n      sub\n        /* \"#utility.yul\":10087:10119   */\n      slt\n        /* \"#utility.yul\":10084:10203   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":10122:10201   */\n      tag_461\n      tag_283\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":10084:10203   */\n    tag_460:\n        /* \"#utility.yul\":10242:10243   */\n      0x00\n        /* \"#utility.yul\":10267:10320   */\n      tag_462\n        /* \"#utility.yul\":10312:10319   */\n      dup6\n        /* \"#utility.yul\":10303:10309   */\n      dup3\n        /* \"#utility.yul\":10292:10301   */\n      dup7\n        /* \"#utility.yul\":10288:10310   */\n      add\n        /* \"#utility.yul\":10267:10320   */\n      tag_302\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":10257:10320   */\n      swap3\n      pop\n        /* \"#utility.yul\":10213:10330   */\n      pop\n        /* \"#utility.yul\":10369:10371   */\n      0x20\n        /* \"#utility.yul\":10395:10448   */\n      tag_463\n        /* \"#utility.yul\":10440:10447   */\n      dup6\n        /* \"#utility.yul\":10431:10437   */\n      dup3\n        /* \"#utility.yul\":10420:10429   */\n      dup7\n        /* \"#utility.yul\":10416:10438   */\n      add\n        /* \"#utility.yul\":10395:10448   */\n      tag_302\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":10385:10448   */\n      swap2\n      pop\n        /* \"#utility.yul\":10340:10458   */\n      pop\n        /* \"#utility.yul\":9991:10465   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10471:10651   */\n    tag_314:\n        /* \"#utility.yul\":10519:10596   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10516:10517   */\n      0x00\n        /* \"#utility.yul\":10509:10597   */\n      mstore\n        /* \"#utility.yul\":10616:10620   */\n      0x22\n        /* \"#utility.yul\":10613:10614   */\n      0x04\n        /* \"#utility.yul\":10606:10621   */\n      mstore\n        /* \"#utility.yul\":10640:10644   */\n      0x24\n        /* \"#utility.yul\":10637:10638   */\n      0x00\n        /* \"#utility.yul\":10630:10645   */\n      revert\n        /* \"#utility.yul\":10657:10977   */\n    tag_82:\n        /* \"#utility.yul\":10701:10707   */\n      0x00\n        /* \"#utility.yul\":10738:10739   */\n      0x02\n        /* \"#utility.yul\":10732:10736   */\n      dup3\n        /* \"#utility.yul\":10728:10740   */\n      div\n        /* \"#utility.yul\":10718:10740   */\n      swap1\n      pop\n        /* \"#utility.yul\":10785:10786   */\n      0x01\n        /* \"#utility.yul\":10779:10783   */\n      dup3\n        /* \"#utility.yul\":10775:10787   */\n      and\n        /* \"#utility.yul\":10806:10824   */\n      dup1\n        /* \"#utility.yul\":10796:10877   */\n      tag_466\n      jumpi\n        /* \"#utility.yul\":10862:10866   */\n      0x7f\n        /* \"#utility.yul\":10854:10860   */\n      dup3\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10840:10867   */\n      swap2\n      pop\n        /* \"#utility.yul\":10796:10877   */\n    tag_466:\n        /* \"#utility.yul\":10924:10926   */\n      0x20\n        /* \"#utility.yul\":10916:10922   */\n      dup3\n        /* \"#utility.yul\":10913:10927   */\n      lt\n        /* \"#utility.yul\":10893:10911   */\n      dup2\n        /* \"#utility.yul\":10890:10928   */\n      sub\n        /* \"#utility.yul\":10887:10971   */\n      tag_467\n      jumpi\n        /* \"#utility.yul\":10943:10961   */\n      tag_468\n      tag_314\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":10887:10971   */\n    tag_467:\n        /* \"#utility.yul\":10708:10977   */\n      pop\n        /* \"#utility.yul\":10657:10977   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10983:11203   */\n    tag_315:\n        /* \"#utility.yul\":11123:11157   */\n      0x4552433732313a20617070726f76616c20746f2063757272656e74206f776e65\n        /* \"#utility.yul\":11119:11120   */\n      0x00\n        /* \"#utility.yul\":11111:11117   */\n      dup3\n        /* \"#utility.yul\":11107:11121   */\n      add\n        /* \"#utility.yul\":11100:11158   */\n      mstore\n        /* \"#utility.yul\":11192:11195   */\n      0x7200000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11187:11189   */\n      0x20\n        /* \"#utility.yul\":11179:11185   */\n      dup3\n        /* \"#utility.yul\":11175:11190   */\n      add\n        /* \"#utility.yul\":11168:11196   */\n      mstore\n        /* \"#utility.yul\":10983:11203   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11209:11575   */\n    tag_316:\n        /* \"#utility.yul\":11351:11354   */\n      0x00\n        /* \"#utility.yul\":11372:11439   */\n      tag_471\n        /* \"#utility.yul\":11436:11438   */\n      0x21\n        /* \"#utility.yul\":11431:11434   */\n      dup4\n        /* \"#utility.yul\":11372:11439   */\n      tag_291\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":11365:11439   */\n      swap2\n      pop\n        /* \"#utility.yul\":11448:11541   */\n      tag_472\n        /* \"#utility.yul\":11537:11540   */\n      dup3\n        /* \"#utility.yul\":11448:11541   */\n      tag_315\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":11566:11568   */\n      0x40\n        /* \"#utility.yul\":11561:11564   */\n      dup3\n        /* \"#utility.yul\":11557:11569   */\n      add\n        /* \"#utility.yul\":11550:11569   */\n      swap1\n      pop\n        /* \"#utility.yul\":11209:11575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11581:12000   */\n    tag_94:\n        /* \"#utility.yul\":11747:11751   */\n      0x00\n        /* \"#utility.yul\":11785:11787   */\n      0x20\n        /* \"#utility.yul\":11774:11783   */\n      dup3\n        /* \"#utility.yul\":11770:11788   */\n      add\n        /* \"#utility.yul\":11762:11788   */\n      swap1\n      pop\n        /* \"#utility.yul\":11834:11843   */\n      dup2\n        /* \"#utility.yul\":11828:11832   */\n      dup2\n        /* \"#utility.yul\":11824:11844   */\n      sub\n        /* \"#utility.yul\":11820:11821   */\n      0x00\n        /* \"#utility.yul\":11809:11818   */\n      dup4\n        /* \"#utility.yul\":11805:11822   */\n      add\n        /* \"#utility.yul\":11798:11845   */\n      mstore\n        /* \"#utility.yul\":11862:11993   */\n      tag_474\n        /* \"#utility.yul\":11988:11992   */\n      dup2\n        /* \"#utility.yul\":11862:11993   */\n      tag_316\n      jump\t// in\n    tag_474:\n        /* \"#utility.yul\":11854:11993   */\n      swap1\n      pop\n        /* \"#utility.yul\":11581:12000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12006:12254   */\n    tag_317:\n        /* \"#utility.yul\":12146:12180   */\n      0x4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f\n        /* \"#utility.yul\":12142:12143   */\n      0x00\n        /* \"#utility.yul\":12134:12140   */\n      dup3\n        /* \"#utility.yul\":12130:12144   */\n      add\n        /* \"#utility.yul\":12123:12181   */\n      mstore\n        /* \"#utility.yul\":12215:12246   */\n      0x6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000\n        /* \"#utility.yul\":12210:12212   */\n      0x20\n        /* \"#utility.yul\":12202:12208   */\n      dup3\n        /* \"#utility.yul\":12198:12213   */\n      add\n        /* \"#utility.yul\":12191:12247   */\n      mstore\n        /* \"#utility.yul\":12006:12254   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12260:12626   */\n    tag_318:\n        /* \"#utility.yul\":12402:12405   */\n      0x00\n        /* \"#utility.yul\":12423:12490   */\n      tag_477\n        /* \"#utility.yul\":12487:12489   */\n      0x3d\n        /* \"#utility.yul\":12482:12485   */\n      dup4\n        /* \"#utility.yul\":12423:12490   */\n      tag_291\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":12416:12490   */\n      swap2\n      pop\n        /* \"#utility.yul\":12499:12592   */\n      tag_478\n        /* \"#utility.yul\":12588:12591   */\n      dup3\n        /* \"#utility.yul\":12499:12592   */\n      tag_317\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":12617:12619   */\n      0x40\n        /* \"#utility.yul\":12612:12615   */\n      dup3\n        /* \"#utility.yul\":12608:12620   */\n      add\n        /* \"#utility.yul\":12601:12620   */\n      swap1\n      pop\n        /* \"#utility.yul\":12260:12626   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12632:13051   */\n    tag_102:\n        /* \"#utility.yul\":12798:12802   */\n      0x00\n        /* \"#utility.yul\":12836:12838   */\n      0x20\n        /* \"#utility.yul\":12825:12834   */\n      dup3\n        /* \"#utility.yul\":12821:12839   */\n      add\n        /* \"#utility.yul\":12813:12839   */\n      swap1\n      pop\n        /* \"#utility.yul\":12885:12894   */\n      dup2\n        /* \"#utility.yul\":12879:12883   */\n      dup2\n        /* \"#utility.yul\":12875:12895   */\n      sub\n        /* \"#utility.yul\":12871:12872   */\n      0x00\n        /* \"#utility.yul\":12860:12869   */\n      dup4\n        /* \"#utility.yul\":12856:12873   */\n      add\n        /* \"#utility.yul\":12849:12896   */\n      mstore\n        /* \"#utility.yul\":12913:13044   */\n      tag_480\n        /* \"#utility.yul\":13039:13043   */\n      dup2\n        /* \"#utility.yul\":12913:13044   */\n      tag_318\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":12905:13044   */\n      swap1\n      pop\n        /* \"#utility.yul\":12632:13051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13057:13289   */\n    tag_319:\n        /* \"#utility.yul\":13197:13231   */\n      0x4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65\n        /* \"#utility.yul\":13193:13194   */\n      0x00\n        /* \"#utility.yul\":13185:13191   */\n      dup3\n        /* \"#utility.yul\":13181:13195   */\n      add\n        /* \"#utility.yul\":13174:13232   */\n      mstore\n        /* \"#utility.yul\":13266:13281   */\n      0x72206f7220617070726f76656400000000000000000000000000000000000000\n        /* \"#utility.yul\":13261:13263   */\n      0x20\n        /* \"#utility.yul\":13253:13259   */\n      dup3\n        /* \"#utility.yul\":13249:13264   */\n      add\n        /* \"#utility.yul\":13242:13282   */\n      mstore\n        /* \"#utility.yul\":13057:13289   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13295:13661   */\n    tag_320:\n        /* \"#utility.yul\":13437:13440   */\n      0x00\n        /* \"#utility.yul\":13458:13525   */\n      tag_483\n        /* \"#utility.yul\":13522:13524   */\n      0x2d\n        /* \"#utility.yul\":13517:13520   */\n      dup4\n        /* \"#utility.yul\":13458:13525   */\n      tag_291\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":13451:13525   */\n      swap2\n      pop\n        /* \"#utility.yul\":13534:13627   */\n      tag_484\n        /* \"#utility.yul\":13623:13626   */\n      dup3\n        /* \"#utility.yul\":13534:13627   */\n      tag_319\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":13652:13654   */\n      0x40\n        /* \"#utility.yul\":13647:13650   */\n      dup3\n        /* \"#utility.yul\":13643:13655   */\n      add\n        /* \"#utility.yul\":13636:13655   */\n      swap1\n      pop\n        /* \"#utility.yul\":13295:13661   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13667:14086   */\n    tag_111:\n        /* \"#utility.yul\":13833:13837   */\n      0x00\n        /* \"#utility.yul\":13871:13873   */\n      0x20\n        /* \"#utility.yul\":13860:13869   */\n      dup3\n        /* \"#utility.yul\":13856:13874   */\n      add\n        /* \"#utility.yul\":13848:13874   */\n      swap1\n      pop\n        /* \"#utility.yul\":13920:13929   */\n      dup2\n        /* \"#utility.yul\":13914:13918   */\n      dup2\n        /* \"#utility.yul\":13910:13930   */\n      sub\n        /* \"#utility.yul\":13906:13907   */\n      0x00\n        /* \"#utility.yul\":13895:13904   */\n      dup4\n        /* \"#utility.yul\":13891:13908   */\n      add\n        /* \"#utility.yul\":13884:13931   */\n      mstore\n        /* \"#utility.yul\":13948:14079   */\n      tag_486\n        /* \"#utility.yul\":14074:14078   */\n      dup2\n        /* \"#utility.yul\":13948:14079   */\n      tag_320\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":13940:14079   */\n      swap1\n      pop\n        /* \"#utility.yul\":13667:14086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14092:14266   */\n    tag_321:\n        /* \"#utility.yul\":14232:14258   */\n      0x4552433732313a20696e76616c696420746f6b656e2049440000000000000000\n        /* \"#utility.yul\":14228:14229   */\n      0x00\n        /* \"#utility.yul\":14220:14226   */\n      dup3\n        /* \"#utility.yul\":14216:14230   */\n      add\n        /* \"#utility.yul\":14209:14259   */\n      mstore\n        /* \"#utility.yul\":14092:14266   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14272:14638   */\n    tag_322:\n        /* \"#utility.yul\":14414:14417   */\n      0x00\n        /* \"#utility.yul\":14435:14502   */\n      tag_489\n        /* \"#utility.yul\":14499:14501   */\n      0x18\n        /* \"#utility.yul\":14494:14497   */\n      dup4\n        /* \"#utility.yul\":14435:14502   */\n      tag_291\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":14428:14502   */\n      swap2\n      pop\n        /* \"#utility.yul\":14511:14604   */\n      tag_490\n        /* \"#utility.yul\":14600:14603   */\n      dup3\n        /* \"#utility.yul\":14511:14604   */\n      tag_321\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":14629:14631   */\n      0x20\n        /* \"#utility.yul\":14624:14627   */\n      dup3\n        /* \"#utility.yul\":14620:14632   */\n      add\n        /* \"#utility.yul\":14613:14632   */\n      swap1\n      pop\n        /* \"#utility.yul\":14272:14638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14644:15063   */\n    tag_121:\n        /* \"#utility.yul\":14810:14814   */\n      0x00\n        /* \"#utility.yul\":14848:14850   */\n      0x20\n        /* \"#utility.yul\":14837:14846   */\n      dup3\n        /* \"#utility.yul\":14833:14851   */\n      add\n        /* \"#utility.yul\":14825:14851   */\n      swap1\n      pop\n        /* \"#utility.yul\":14897:14906   */\n      dup2\n        /* \"#utility.yul\":14891:14895   */\n      dup2\n        /* \"#utility.yul\":14887:14907   */\n      sub\n        /* \"#utility.yul\":14883:14884   */\n      0x00\n        /* \"#utility.yul\":14872:14881   */\n      dup4\n        /* \"#utility.yul\":14868:14885   */\n      add\n        /* \"#utility.yul\":14861:14908   */\n      mstore\n        /* \"#utility.yul\":14925:15056   */\n      tag_492\n        /* \"#utility.yul\":15051:15055   */\n      dup2\n        /* \"#utility.yul\":14925:15056   */\n      tag_322\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":14917:15056   */\n      swap1\n      pop\n        /* \"#utility.yul\":14644:15063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15069:15297   */\n    tag_323:\n        /* \"#utility.yul\":15209:15243   */\n      0x4552433732313a2061646472657373207a65726f206973206e6f742061207661\n        /* \"#utility.yul\":15205:15206   */\n      0x00\n        /* \"#utility.yul\":15197:15203   */\n      dup3\n        /* \"#utility.yul\":15193:15207   */\n      add\n        /* \"#utility.yul\":15186:15244   */\n      mstore\n        /* \"#utility.yul\":15278:15289   */\n      0x6c6964206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15273:15275   */\n      0x20\n        /* \"#utility.yul\":15265:15271   */\n      dup3\n        /* \"#utility.yul\":15261:15276   */\n      add\n        /* \"#utility.yul\":15254:15290   */\n      mstore\n        /* \"#utility.yul\":15069:15297   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15303:15669   */\n    tag_324:\n        /* \"#utility.yul\":15445:15448   */\n      0x00\n        /* \"#utility.yul\":15466:15533   */\n      tag_495\n        /* \"#utility.yul\":15530:15532   */\n      0x29\n        /* \"#utility.yul\":15525:15528   */\n      dup4\n        /* \"#utility.yul\":15466:15533   */\n      tag_291\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":15459:15533   */\n      swap2\n      pop\n        /* \"#utility.yul\":15542:15635   */\n      tag_496\n        /* \"#utility.yul\":15631:15634   */\n      dup3\n        /* \"#utility.yul\":15542:15635   */\n      tag_323\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":15660:15662   */\n      0x40\n        /* \"#utility.yul\":15655:15658   */\n      dup3\n        /* \"#utility.yul\":15651:15663   */\n      add\n        /* \"#utility.yul\":15644:15663   */\n      swap1\n      pop\n        /* \"#utility.yul\":15303:15669   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15675:16094   */\n    tag_125:\n        /* \"#utility.yul\":15841:15845   */\n      0x00\n        /* \"#utility.yul\":15879:15881   */\n      0x20\n        /* \"#utility.yul\":15868:15877   */\n      dup3\n        /* \"#utility.yul\":15864:15882   */\n      add\n        /* \"#utility.yul\":15856:15882   */\n      swap1\n      pop\n        /* \"#utility.yul\":15928:15937   */\n      dup2\n        /* \"#utility.yul\":15922:15926   */\n      dup2\n        /* \"#utility.yul\":15918:15938   */\n      sub\n        /* \"#utility.yul\":15914:15915   */\n      0x00\n        /* \"#utility.yul\":15903:15912   */\n      dup4\n        /* \"#utility.yul\":15899:15916   */\n      add\n        /* \"#utility.yul\":15892:15939   */\n      mstore\n        /* \"#utility.yul\":15956:16087   */\n      tag_498\n        /* \"#utility.yul\":16082:16086   */\n      dup2\n        /* \"#utility.yul\":15956:16087   */\n      tag_324\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":15948:16087   */\n      swap1\n      pop\n        /* \"#utility.yul\":15675:16094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16100:16432   */\n    tag_127:\n        /* \"#utility.yul\":16221:16225   */\n      0x00\n        /* \"#utility.yul\":16259:16261   */\n      0x40\n        /* \"#utility.yul\":16248:16257   */\n      dup3\n        /* \"#utility.yul\":16244:16262   */\n      add\n        /* \"#utility.yul\":16236:16262   */\n      swap1\n      pop\n        /* \"#utility.yul\":16272:16343   */\n      tag_500\n        /* \"#utility.yul\":16340:16341   */\n      0x00\n        /* \"#utility.yul\":16329:16338   */\n      dup4\n        /* \"#utility.yul\":16325:16342   */\n      add\n        /* \"#utility.yul\":16316:16322   */\n      dup6\n        /* \"#utility.yul\":16272:16343   */\n      tag_300\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":16353:16425   */\n      tag_501\n        /* \"#utility.yul\":16421:16423   */\n      0x20\n        /* \"#utility.yul\":16410:16419   */\n      dup4\n        /* \"#utility.yul\":16406:16424   */\n      add\n        /* \"#utility.yul\":16397:16403   */\n      dup5\n        /* \"#utility.yul\":16353:16425   */\n      tag_303\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":16100:16432   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16438:16586   */\n    tag_325:\n        /* \"#utility.yul\":16540:16551   */\n      0x00\n        /* \"#utility.yul\":16577:16580   */\n      dup2\n        /* \"#utility.yul\":16562:16580   */\n      swap1\n      pop\n        /* \"#utility.yul\":16438:16586   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16592:16982   */\n    tag_326:\n        /* \"#utility.yul\":16698:16701   */\n      0x00\n        /* \"#utility.yul\":16726:16765   */\n      tag_504\n        /* \"#utility.yul\":16759:16764   */\n      dup3\n        /* \"#utility.yul\":16726:16765   */\n      tag_290\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":16781:16870   */\n      tag_505\n        /* \"#utility.yul\":16863:16869   */\n      dup2\n        /* \"#utility.yul\":16858:16861   */\n      dup6\n        /* \"#utility.yul\":16781:16870   */\n      tag_325\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":16774:16870   */\n      swap4\n      pop\n        /* \"#utility.yul\":16879:16944   */\n      tag_506\n        /* \"#utility.yul\":16937:16943   */\n      dup2\n        /* \"#utility.yul\":16932:16935   */\n      dup6\n        /* \"#utility.yul\":16925:16929   */\n      0x20\n        /* \"#utility.yul\":16918:16923   */\n      dup7\n        /* \"#utility.yul\":16914:16930   */\n      add\n        /* \"#utility.yul\":16879:16944   */\n      tag_292\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":16969:16975   */\n      dup1\n        /* \"#utility.yul\":16964:16967   */\n      dup5\n        /* \"#utility.yul\":16960:16976   */\n      add\n        /* \"#utility.yul\":16953:16976   */\n      swap2\n      pop\n        /* \"#utility.yul\":16702:16982   */\n      pop\n        /* \"#utility.yul\":16592:16982   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16988:17423   */\n    tag_154:\n        /* \"#utility.yul\":17168:17171   */\n      0x00\n        /* \"#utility.yul\":17190:17285   */\n      tag_508\n        /* \"#utility.yul\":17281:17284   */\n      dup3\n        /* \"#utility.yul\":17272:17278   */\n      dup6\n        /* \"#utility.yul\":17190:17285   */\n      tag_326\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":17183:17285   */\n      swap2\n      pop\n        /* \"#utility.yul\":17302:17397   */\n      tag_509\n        /* \"#utility.yul\":17393:17396   */\n      dup3\n        /* \"#utility.yul\":17384:17390   */\n      dup5\n        /* \"#utility.yul\":17302:17397   */\n      tag_326\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":17295:17397   */\n      swap2\n      pop\n        /* \"#utility.yul\":17414:17417   */\n      dup2\n        /* \"#utility.yul\":17407:17417   */\n      swap1\n      pop\n        /* \"#utility.yul\":16988:17423   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17429:17653   */\n    tag_327:\n        /* \"#utility.yul\":17569:17603   */\n      0x4552433732313a207472616e736665722066726f6d20696e636f727265637420\n        /* \"#utility.yul\":17565:17566   */\n      0x00\n        /* \"#utility.yul\":17557:17563   */\n      dup3\n        /* \"#utility.yul\":17553:17567   */\n      add\n        /* \"#utility.yul\":17546:17604   */\n      mstore\n        /* \"#utility.yul\":17638:17645   */\n      0x6f776e6572000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17633:17635   */\n      0x20\n        /* \"#utility.yul\":17625:17631   */\n      dup3\n        /* \"#utility.yul\":17621:17636   */\n      add\n        /* \"#utility.yul\":17614:17646   */\n      mstore\n        /* \"#utility.yul\":17429:17653   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17659:18025   */\n    tag_328:\n        /* \"#utility.yul\":17801:17804   */\n      0x00\n        /* \"#utility.yul\":17822:17889   */\n      tag_512\n        /* \"#utility.yul\":17886:17888   */\n      0x25\n        /* \"#utility.yul\":17881:17884   */\n      dup4\n        /* \"#utility.yul\":17822:17889   */\n      tag_291\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":17815:17889   */\n      swap2\n      pop\n        /* \"#utility.yul\":17898:17991   */\n      tag_513\n        /* \"#utility.yul\":17987:17990   */\n      dup3\n        /* \"#utility.yul\":17898:17991   */\n      tag_327\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":18016:18018   */\n      0x40\n        /* \"#utility.yul\":18011:18014   */\n      dup3\n        /* \"#utility.yul\":18007:18019   */\n      add\n        /* \"#utility.yul\":18000:18019   */\n      swap1\n      pop\n        /* \"#utility.yul\":17659:18025   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18031:18450   */\n    tag_176:\n        /* \"#utility.yul\":18197:18201   */\n      0x00\n        /* \"#utility.yul\":18235:18237   */\n      0x20\n        /* \"#utility.yul\":18224:18233   */\n      dup3\n        /* \"#utility.yul\":18220:18238   */\n      add\n        /* \"#utility.yul\":18212:18238   */\n      swap1\n      pop\n        /* \"#utility.yul\":18284:18293   */\n      dup2\n        /* \"#utility.yul\":18278:18282   */\n      dup2\n        /* \"#utility.yul\":18274:18294   */\n      sub\n        /* \"#utility.yul\":18270:18271   */\n      0x00\n        /* \"#utility.yul\":18259:18268   */\n      dup4\n        /* \"#utility.yul\":18255:18272   */\n      add\n        /* \"#utility.yul\":18248:18295   */\n      mstore\n        /* \"#utility.yul\":18312:18443   */\n      tag_515\n        /* \"#utility.yul\":18438:18442   */\n      dup2\n        /* \"#utility.yul\":18312:18443   */\n      tag_328\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":18304:18443   */\n      swap1\n      pop\n        /* \"#utility.yul\":18031:18450   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18456:18679   */\n    tag_329:\n        /* \"#utility.yul\":18596:18630   */\n      0x4552433732313a207472616e7366657220746f20746865207a65726f20616464\n        /* \"#utility.yul\":18592:18593   */\n      0x00\n        /* \"#utility.yul\":18584:18590   */\n      dup3\n        /* \"#utility.yul\":18580:18594   */\n      add\n        /* \"#utility.yul\":18573:18631   */\n      mstore\n        /* \"#utility.yul\":18665:18671   */\n      0x7265737300000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18660:18662   */\n      0x20\n        /* \"#utility.yul\":18652:18658   */\n      dup3\n        /* \"#utility.yul\":18648:18663   */\n      add\n        /* \"#utility.yul\":18641:18672   */\n      mstore\n        /* \"#utility.yul\":18456:18679   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18685:19051   */\n    tag_330:\n        /* \"#utility.yul\":18827:18830   */\n      0x00\n        /* \"#utility.yul\":18848:18915   */\n      tag_518\n        /* \"#utility.yul\":18912:18914   */\n      0x24\n        /* \"#utility.yul\":18907:18910   */\n      dup4\n        /* \"#utility.yul\":18848:18915   */\n      tag_291\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":18841:18915   */\n      swap2\n      pop\n        /* \"#utility.yul\":18924:19017   */\n      tag_519\n        /* \"#utility.yul\":19013:19016   */\n      dup3\n        /* \"#utility.yul\":18924:19017   */\n      tag_329\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":19042:19044   */\n      0x40\n        /* \"#utility.yul\":19037:19040   */\n      dup3\n        /* \"#utility.yul\":19033:19045   */\n      add\n        /* \"#utility.yul\":19026:19045   */\n      swap1\n      pop\n        /* \"#utility.yul\":18685:19051   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19057:19476   */\n    tag_179:\n        /* \"#utility.yul\":19223:19227   */\n      0x00\n        /* \"#utility.yul\":19261:19263   */\n      0x20\n        /* \"#utility.yul\":19250:19259   */\n      dup3\n        /* \"#utility.yul\":19246:19264   */\n      add\n        /* \"#utility.yul\":19238:19264   */\n      swap1\n      pop\n        /* \"#utility.yul\":19310:19319   */\n      dup2\n        /* \"#utility.yul\":19304:19308   */\n      dup2\n        /* \"#utility.yul\":19300:19320   */\n      sub\n        /* \"#utility.yul\":19296:19297   */\n      0x00\n        /* \"#utility.yul\":19285:19294   */\n      dup4\n        /* \"#utility.yul\":19281:19298   */\n      add\n        /* \"#utility.yul\":19274:19321   */\n      mstore\n        /* \"#utility.yul\":19338:19469   */\n      tag_521\n        /* \"#utility.yul\":19464:19468   */\n      dup2\n        /* \"#utility.yul\":19338:19469   */\n      tag_330\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":19330:19469   */\n      swap1\n      pop\n        /* \"#utility.yul\":19057:19476   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19482:19814   */\n    tag_198:\n        /* \"#utility.yul\":19603:19607   */\n      0x00\n        /* \"#utility.yul\":19641:19643   */\n      0x40\n        /* \"#utility.yul\":19630:19639   */\n      dup3\n        /* \"#utility.yul\":19626:19644   */\n      add\n        /* \"#utility.yul\":19618:19644   */\n      swap1\n      pop\n        /* \"#utility.yul\":19654:19725   */\n      tag_523\n        /* \"#utility.yul\":19722:19723   */\n      0x00\n        /* \"#utility.yul\":19711:19720   */\n      dup4\n        /* \"#utility.yul\":19707:19724   */\n      add\n        /* \"#utility.yul\":19698:19704   */\n      dup6\n        /* \"#utility.yul\":19654:19725   */\n      tag_303\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":19735:19807   */\n      tag_524\n        /* \"#utility.yul\":19803:19805   */\n      0x20\n        /* \"#utility.yul\":19792:19801   */\n      dup4\n        /* \"#utility.yul\":19788:19806   */\n      add\n        /* \"#utility.yul\":19779:19785   */\n      dup5\n        /* \"#utility.yul\":19735:19807   */\n      tag_303\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":19482:19814   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19820:19995   */\n    tag_331:\n        /* \"#utility.yul\":19960:19987   */\n      0x4552433732313a20617070726f766520746f2063616c6c657200000000000000\n        /* \"#utility.yul\":19956:19957   */\n      0x00\n        /* \"#utility.yul\":19948:19954   */\n      dup3\n        /* \"#utility.yul\":19944:19958   */\n      add\n        /* \"#utility.yul\":19937:19988   */\n      mstore\n        /* \"#utility.yul\":19820:19995   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20001:20367   */\n    tag_332:\n        /* \"#utility.yul\":20143:20146   */\n      0x00\n        /* \"#utility.yul\":20164:20231   */\n      tag_527\n        /* \"#utility.yul\":20228:20230   */\n      0x19\n        /* \"#utility.yul\":20223:20226   */\n      dup4\n        /* \"#utility.yul\":20164:20231   */\n      tag_291\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":20157:20231   */\n      swap2\n      pop\n        /* \"#utility.yul\":20240:20333   */\n      tag_528\n        /* \"#utility.yul\":20329:20332   */\n      dup3\n        /* \"#utility.yul\":20240:20333   */\n      tag_331\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":20358:20360   */\n      0x20\n        /* \"#utility.yul\":20353:20356   */\n      dup3\n        /* \"#utility.yul\":20349:20361   */\n      add\n        /* \"#utility.yul\":20342:20361   */\n      swap1\n      pop\n        /* \"#utility.yul\":20001:20367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20373:20792   */\n    tag_202:\n        /* \"#utility.yul\":20539:20543   */\n      0x00\n        /* \"#utility.yul\":20577:20579   */\n      0x20\n        /* \"#utility.yul\":20566:20575   */\n      dup3\n        /* \"#utility.yul\":20562:20580   */\n      add\n        /* \"#utility.yul\":20554:20580   */\n      swap1\n      pop\n        /* \"#utility.yul\":20626:20635   */\n      dup2\n        /* \"#utility.yul\":20620:20624   */\n      dup2\n        /* \"#utility.yul\":20616:20636   */\n      sub\n        /* \"#utility.yul\":20612:20613   */\n      0x00\n        /* \"#utility.yul\":20601:20610   */\n      dup4\n        /* \"#utility.yul\":20597:20614   */\n      add\n        /* \"#utility.yul\":20590:20637   */\n      mstore\n        /* \"#utility.yul\":20654:20785   */\n      tag_530\n        /* \"#utility.yul\":20780:20784   */\n      dup2\n        /* \"#utility.yul\":20654:20785   */\n      tag_332\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":20646:20785   */\n      swap1\n      pop\n        /* \"#utility.yul\":20373:20792   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20798:21035   */\n    tag_333:\n        /* \"#utility.yul\":20938:20972   */\n      0x4552433732313a207472616e7366657220746f206e6f6e204552433732315265\n        /* \"#utility.yul\":20934:20935   */\n      0x00\n        /* \"#utility.yul\":20926:20932   */\n      dup3\n        /* \"#utility.yul\":20922:20936   */\n      add\n        /* \"#utility.yul\":20915:20973   */\n      mstore\n        /* \"#utility.yul\":21007:21027   */\n      0x63656976657220696d706c656d656e7465720000000000000000000000000000\n        /* \"#utility.yul\":21002:21004   */\n      0x20\n        /* \"#utility.yul\":20994:21000   */\n      dup3\n        /* \"#utility.yul\":20990:21005   */\n      add\n        /* \"#utility.yul\":20983:21028   */\n      mstore\n        /* \"#utility.yul\":20798:21035   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21041:21407   */\n    tag_334:\n        /* \"#utility.yul\":21183:21186   */\n      0x00\n        /* \"#utility.yul\":21204:21271   */\n      tag_533\n        /* \"#utility.yul\":21268:21270   */\n      0x32\n        /* \"#utility.yul\":21263:21266   */\n      dup4\n        /* \"#utility.yul\":21204:21271   */\n      tag_291\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":21197:21271   */\n      swap2\n      pop\n        /* \"#utility.yul\":21280:21373   */\n      tag_534\n        /* \"#utility.yul\":21369:21372   */\n      dup3\n        /* \"#utility.yul\":21280:21373   */\n      tag_333\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":21398:21400   */\n      0x40\n        /* \"#utility.yul\":21393:21396   */\n      dup3\n        /* \"#utility.yul\":21389:21401   */\n      add\n        /* \"#utility.yul\":21382:21401   */\n      swap1\n      pop\n        /* \"#utility.yul\":21041:21407   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21413:21832   */\n    tag_211:\n        /* \"#utility.yul\":21579:21583   */\n      0x00\n        /* \"#utility.yul\":21617:21619   */\n      0x20\n        /* \"#utility.yul\":21606:21615   */\n      dup3\n        /* \"#utility.yul\":21602:21620   */\n      add\n        /* \"#utility.yul\":21594:21620   */\n      swap1\n      pop\n        /* \"#utility.yul\":21666:21675   */\n      dup2\n        /* \"#utility.yul\":21660:21664   */\n      dup2\n        /* \"#utility.yul\":21656:21676   */\n      sub\n        /* \"#utility.yul\":21652:21653   */\n      0x00\n        /* \"#utility.yul\":21641:21650   */\n      dup4\n        /* \"#utility.yul\":21637:21654   */\n      add\n        /* \"#utility.yul\":21630:21677   */\n      mstore\n        /* \"#utility.yul\":21694:21825   */\n      tag_536\n        /* \"#utility.yul\":21820:21824   */\n      dup2\n        /* \"#utility.yul\":21694:21825   */\n      tag_334\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":21686:21825   */\n      swap1\n      pop\n        /* \"#utility.yul\":21413:21832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21838:22018   */\n    tag_224:\n        /* \"#utility.yul\":21886:21963   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21883:21884   */\n      0x00\n        /* \"#utility.yul\":21876:21964   */\n      mstore\n        /* \"#utility.yul\":21983:21987   */\n      0x12\n        /* \"#utility.yul\":21980:21981   */\n      0x04\n        /* \"#utility.yul\":21973:21988   */\n      mstore\n        /* \"#utility.yul\":22007:22011   */\n      0x24\n        /* \"#utility.yul\":22004:22005   */\n      0x00\n        /* \"#utility.yul\":21997:22012   */\n      revert\n        /* \"#utility.yul\":22024:22101   */\n    tag_335:\n        /* \"#utility.yul\":22061:22068   */\n      0x00\n        /* \"#utility.yul\":22090:22095   */\n      dup2\n        /* \"#utility.yul\":22079:22095   */\n      swap1\n      pop\n        /* \"#utility.yul\":22024:22101   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22107:22225   */\n    tag_336:\n        /* \"#utility.yul\":22194:22218   */\n      tag_540\n        /* \"#utility.yul\":22212:22217   */\n      dup2\n        /* \"#utility.yul\":22194:22218   */\n      tag_335\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":22189:22192   */\n      dup3\n        /* \"#utility.yul\":22182:22219   */\n      mstore\n        /* \"#utility.yul\":22107:22225   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22231:22563   */\n    tag_239:\n        /* \"#utility.yul\":22352:22356   */\n      0x00\n        /* \"#utility.yul\":22390:22392   */\n      0x40\n        /* \"#utility.yul\":22379:22388   */\n      dup3\n        /* \"#utility.yul\":22375:22393   */\n      add\n        /* \"#utility.yul\":22367:22393   */\n      swap1\n      pop\n        /* \"#utility.yul\":22403:22474   */\n      tag_542\n        /* \"#utility.yul\":22471:22472   */\n      0x00\n        /* \"#utility.yul\":22460:22469   */\n      dup4\n        /* \"#utility.yul\":22456:22473   */\n      add\n        /* \"#utility.yul\":22447:22453   */\n      dup6\n        /* \"#utility.yul\":22403:22474   */\n      tag_300\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":22484:22556   */\n      tag_543\n        /* \"#utility.yul\":22552:22554   */\n      0x20\n        /* \"#utility.yul\":22541:22550   */\n      dup4\n        /* \"#utility.yul\":22537:22555   */\n      add\n        /* \"#utility.yul\":22528:22534   */\n      dup5\n        /* \"#utility.yul\":22484:22556   */\n      tag_336\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":22231:22563   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22569:22667   */\n    tag_337:\n        /* \"#utility.yul\":22620:22626   */\n      0x00\n        /* \"#utility.yul\":22654:22659   */\n      dup2\n        /* \"#utility.yul\":22648:22660   */\n      mload\n        /* \"#utility.yul\":22638:22660   */\n      swap1\n      pop\n        /* \"#utility.yul\":22569:22667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22673:22841   */\n    tag_338:\n        /* \"#utility.yul\":22756:22767   */\n      0x00\n        /* \"#utility.yul\":22790:22796   */\n      dup3\n        /* \"#utility.yul\":22785:22788   */\n      dup3\n        /* \"#utility.yul\":22778:22797   */\n      mstore\n        /* \"#utility.yul\":22830:22834   */\n      0x20\n        /* \"#utility.yul\":22825:22828   */\n      dup3\n        /* \"#utility.yul\":22821:22835   */\n      add\n        /* \"#utility.yul\":22806:22835   */\n      swap1\n      pop\n        /* \"#utility.yul\":22673:22841   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22847:23220   */\n    tag_339:\n        /* \"#utility.yul\":22933:22936   */\n      0x00\n        /* \"#utility.yul\":22961:22999   */\n      tag_547\n        /* \"#utility.yul\":22993:22998   */\n      dup3\n        /* \"#utility.yul\":22961:22999   */\n      tag_337\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":23015:23085   */\n      tag_548\n        /* \"#utility.yul\":23078:23084   */\n      dup2\n        /* \"#utility.yul\":23073:23076   */\n      dup6\n        /* \"#utility.yul\":23015:23085   */\n      tag_338\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":23008:23085   */\n      swap4\n      pop\n        /* \"#utility.yul\":23094:23159   */\n      tag_549\n        /* \"#utility.yul\":23152:23158   */\n      dup2\n        /* \"#utility.yul\":23147:23150   */\n      dup6\n        /* \"#utility.yul\":23140:23144   */\n      0x20\n        /* \"#utility.yul\":23133:23138   */\n      dup7\n        /* \"#utility.yul\":23129:23145   */\n      add\n        /* \"#utility.yul\":23094:23159   */\n      tag_292\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":23184:23213   */\n      tag_550\n        /* \"#utility.yul\":23206:23212   */\n      dup2\n        /* \"#utility.yul\":23184:23213   */\n      tag_293\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":23179:23182   */\n      dup5\n        /* \"#utility.yul\":23175:23214   */\n      add\n        /* \"#utility.yul\":23168:23214   */\n      swap2\n      pop\n        /* \"#utility.yul\":22937:23220   */\n      pop\n        /* \"#utility.yul\":22847:23220   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23226:23866   */\n    tag_246:\n        /* \"#utility.yul\":23421:23425   */\n      0x00\n        /* \"#utility.yul\":23459:23462   */\n      0x80\n        /* \"#utility.yul\":23448:23457   */\n      dup3\n        /* \"#utility.yul\":23444:23463   */\n      add\n        /* \"#utility.yul\":23436:23463   */\n      swap1\n      pop\n        /* \"#utility.yul\":23473:23544   */\n      tag_552\n        /* \"#utility.yul\":23541:23542   */\n      0x00\n        /* \"#utility.yul\":23530:23539   */\n      dup4\n        /* \"#utility.yul\":23526:23543   */\n      add\n        /* \"#utility.yul\":23517:23523   */\n      dup8\n        /* \"#utility.yul\":23473:23544   */\n      tag_300\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":23554:23626   */\n      tag_553\n        /* \"#utility.yul\":23622:23624   */\n      0x20\n        /* \"#utility.yul\":23611:23620   */\n      dup4\n        /* \"#utility.yul\":23607:23625   */\n      add\n        /* \"#utility.yul\":23598:23604   */\n      dup7\n        /* \"#utility.yul\":23554:23626   */\n      tag_300\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":23636:23708   */\n      tag_554\n        /* \"#utility.yul\":23704:23706   */\n      0x40\n        /* \"#utility.yul\":23693:23702   */\n      dup4\n        /* \"#utility.yul\":23689:23707   */\n      add\n        /* \"#utility.yul\":23680:23686   */\n      dup6\n        /* \"#utility.yul\":23636:23708   */\n      tag_303\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":23755:23764   */\n      dup2\n        /* \"#utility.yul\":23749:23753   */\n      dup2\n        /* \"#utility.yul\":23745:23765   */\n      sub\n        /* \"#utility.yul\":23740:23742   */\n      0x60\n        /* \"#utility.yul\":23729:23738   */\n      dup4\n        /* \"#utility.yul\":23725:23743   */\n      add\n        /* \"#utility.yul\":23718:23766   */\n      mstore\n        /* \"#utility.yul\":23783:23859   */\n      tag_555\n        /* \"#utility.yul\":23854:23858   */\n      dup2\n        /* \"#utility.yul\":23845:23851   */\n      dup5\n        /* \"#utility.yul\":23783:23859   */\n      tag_339\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":23775:23859   */\n      swap1\n      pop\n        /* \"#utility.yul\":23226:23866   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23872:24013   */\n    tag_340:\n        /* \"#utility.yul\":23928:23933   */\n      0x00\n        /* \"#utility.yul\":23959:23965   */\n      dup2\n        /* \"#utility.yul\":23953:23966   */\n      mload\n        /* \"#utility.yul\":23944:23966   */\n      swap1\n      pop\n        /* \"#utility.yul\":23975:24007   */\n      tag_557\n        /* \"#utility.yul\":24001:24006   */\n      dup2\n        /* \"#utility.yul\":23975:24007   */\n      tag_286\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":23872:24013   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24019:24368   */\n    tag_249:\n        /* \"#utility.yul\":24088:24094   */\n      0x00\n        /* \"#utility.yul\":24137:24139   */\n      0x20\n        /* \"#utility.yul\":24125:24134   */\n      dup3\n        /* \"#utility.yul\":24116:24123   */\n      dup5\n        /* \"#utility.yul\":24112:24135   */\n      sub\n        /* \"#utility.yul\":24108:24140   */\n      slt\n        /* \"#utility.yul\":24105:24224   */\n      iszero\n      tag_559\n      jumpi\n        /* \"#utility.yul\":24143:24222   */\n      tag_560\n      tag_283\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":24105:24224   */\n    tag_559:\n        /* \"#utility.yul\":24263:24264   */\n      0x00\n        /* \"#utility.yul\":24288:24351   */\n      tag_561\n        /* \"#utility.yul\":24343:24350   */\n      dup5\n        /* \"#utility.yul\":24334:24340   */\n      dup3\n        /* \"#utility.yul\":24323:24332   */\n      dup6\n        /* \"#utility.yul\":24319:24341   */\n      add\n        /* \"#utility.yul\":24288:24351   */\n      tag_340\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":24278:24351   */\n      swap2\n      pop\n        /* \"#utility.yul\":24234:24361   */\n      pop\n        /* \"#utility.yul\":24019:24368   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f87ba3a52aca5651cfc567e42277dceeb6017fd27104a71cf6f7c4ca66f1f19864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_62": {
									"entryPoint": null,
									"id": 62,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 502,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1067,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 332,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1192,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 646,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 146,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 942,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 119,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 109,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 129,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1147,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 796,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 952,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8574:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "423:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "440:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "443:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "433:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "546:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "563:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "566:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "556:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "556:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "628:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "638:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "663:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "672:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "648:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "621:6:11",
														"type": ""
													}
												],
												"src": "580:102:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "716:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "733:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "736:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "726:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "726:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "830:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "833:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "823:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "823:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "854:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "847:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "917:238:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "945:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "931:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1096:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1033:62:11"
															},
															"nodeType": "YulIf",
															"src": "1030:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "903:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "911:4:11",
														"type": ""
													}
												],
												"src": "874:281:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1202:88:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1212:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1222:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:11"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1251:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1186:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1195:6:11",
														"type": ""
													}
												],
												"src": "1161:129:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1363:241:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1468:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:30:11"
															},
															"nodeType": "YulIf",
															"src": "1434:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1500:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1508:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1574:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1347:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "1358:4:11",
														"type": ""
													}
												],
												"src": "1296:308:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1672:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1691:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1751:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1723:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1725:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1705:3:11",
																"statements": []
															},
															"src": "1701:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1823:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1654:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1659:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1664:6:11",
														"type": ""
													}
												],
												"src": "1610:246:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1957:339:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1967:75:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1976:66:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2051:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2092:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2146:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2120:25:11"
															},
															"nodeType": "YulIf",
															"src": "2117:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:11"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2238:52:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1930:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1935:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1943:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1951:5:11",
														"type": ""
													}
												],
												"src": "1862:434:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2389:282:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2438:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:35:11"
															},
															"nodeType": "YulIf",
															"src": "2399:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2544:13:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2566:99:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:90:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2367:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2375:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2383:5:11",
														"type": ""
													}
												],
												"src": "2316:355:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2791:739:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2837:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2804:32:11"
															},
															"nodeType": "YulIf",
															"src": "2801:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "2930:291:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3030:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "2996:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3127:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3231:292:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:11",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:11"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3332:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "3298:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3429:84:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2753:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2764:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2776:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2784:6:11",
														"type": ""
													}
												],
												"src": "2677:853:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3595:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3616:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3588:6:11",
														"type": ""
													}
												],
												"src": "3536:99:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3669:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3679:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3776:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3800:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3878:269:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3888:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3898:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3945:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3996:51:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4010:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3969:26:11"
															},
															"nodeType": "YulIf",
															"src": "3966:81:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4099:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4060:38:11"
															},
															"nodeType": "YulIf",
															"src": "4057:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "3862:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3871:6:11",
														"type": ""
													}
												],
												"src": "3827:320:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4207:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4217:11:11",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4225:3:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4238:14:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4261:26:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4269:18:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:11"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4194:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4202:4:11",
														"type": ""
													}
												],
												"src": "4153:141:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4344:49:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4354:33:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4364:23:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:11"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4327:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4337:6:11",
														"type": ""
													}
												],
												"src": "4300:93:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4452:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4462:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:11"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:11"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4483:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:11"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "4427:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4433:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "4443:8:11",
														"type": ""
													}
												],
												"src": "4399:107:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4588:317:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:11",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4615:18:11"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4654:97:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4760:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:11"
																	},
																	{
																		"name": "toInsert",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:11"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4772:39:11"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4820:30:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:11"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4829:21:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4859:40:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:11"
																			},
																			{
																				"name": "mask",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:11"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:30:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:11"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4549:5:11",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nodeType": "YulTypedName",
														"src": "4556:10:11",
														"type": ""
													},
													{
														"name": "toInsert",
														"nodeType": "YulTypedName",
														"src": "4568:8:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "4581:6:11",
														"type": ""
													}
												],
												"src": "4512:393:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4956:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4966:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4977:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4938:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4948:7:11",
														"type": ""
													}
												],
												"src": "4911:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5026:28:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5036:12:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5043:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5012:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5022:3:11",
														"type": ""
													}
												],
												"src": "4994:60:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5120:82:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5130:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5143:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5100:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5110:9:11",
														"type": ""
													}
												],
												"src": "5060:142:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5255:28:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5265:12:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5272:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:11"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5241:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5251:3:11",
														"type": ""
													}
												],
												"src": "5208:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5365:193:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:11",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5399:39:11"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:11"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:11"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:11"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:11"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:11"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5447:105:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:11"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5342:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5348:6:11",
														"type": ""
													},
													{
														"name": "value_0",
														"nodeType": "YulTypedName",
														"src": "5356:7:11",
														"type": ""
													}
												],
												"src": "5289:269:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5613:24:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5623:8:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5630:1:11",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:11"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "5609:3:11",
														"type": ""
													}
												],
												"src": "5564:73:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5696:136:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:32:11"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:11"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:11"
																	},
																	{
																		"name": "zero_0",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:11"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5761:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:11"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "5682:4:11",
														"type": ""
													},
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "5688:6:11",
														"type": ""
													}
												],
												"src": "5643:189:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5888:136:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5955:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5905:14:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5920:26:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5922:22:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:11",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:11"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5902:2:11",
																"statements": []
															},
															"src": "5898:120:11"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nodeType": "YulTypedName",
														"src": "5876:5:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5883:3:11",
														"type": ""
													}
												],
												"src": "5838:186:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6109:464:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6135:431:11",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:11"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:11"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:11"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:11"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:11"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:11",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "6436:27:11",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "6438:23:11",
																					"value": {
																						"name": "dataArea",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:11"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:11"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:11"
																		},
																		"nodeType": "YulIf",
																		"src": "6414:49:11"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:11"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:11"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:11:11"
															},
															"nodeType": "YulIf",
															"src": "6120:446:11"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "6085:5:11",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6092:3:11",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "6097:10:11",
														"type": ""
													}
												],
												"src": "6030:543:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6642:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6652:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:11"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:11"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6673:16:11"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:11"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nodeType": "YulTypedName",
														"src": "6617:4:11",
														"type": ""
													},
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6623:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nodeType": "YulTypedName",
														"src": "6633:8:11",
														"type": ""
													}
												],
												"src": "6579:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6753:118:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:11",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:11"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:11"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:11",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:11"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:11"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:56:11"
															},
															"variables": [
																{
																	"name": "mask",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6840:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:11"
																	},
																	{
																		"name": "mask",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6850:15:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:11"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6730:4:11",
														"type": ""
													},
													{
														"name": "bytes",
														"nodeType": "YulTypedName",
														"src": "6736:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "6746:6:11",
														"type": ""
													}
												],
												"src": "6702:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6957:214:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7090:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:11"
																	},
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:11"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7098:29:11"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7136:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:11",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:11"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:21:11"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:11"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "6938:4:11",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "6944:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "6952:4:11",
														"type": ""
													}
												],
												"src": "6876:295:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7268:1303:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:11",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7293:37:11"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7415:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7384:30:11"
															},
															"nodeType": "YulIf",
															"src": "7381:56:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:11"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:11"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7461:38:11"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:11",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:11"
																	},
																	{
																		"name": "oldLen",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:11"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:11"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:67:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7640:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7651:17:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7664:4:11",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:11"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "7715:611:11",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:11"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:11",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:11"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:11"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:11",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:11"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:11"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:11",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "7912:163:11",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:11"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:11"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:11"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:11"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:11"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:11"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "7989:24:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:11",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:11"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:11"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "8030:31:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:11",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:11"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:11"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:11"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "7890:21:11",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "7892:17:11",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:11"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:11",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:11"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:11"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "7871:3:11",
																					"statements": []
																				},
																				"src": "7867:208:11"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8111:156:11",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:11"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:11",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:11"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:11"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:11"
																													},
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:11",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:11"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:11"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:11"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:11"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:11"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:11"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:11"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:11"
																				},
																				"nodeType": "YulIf",
																				"src": "8088:179:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:11"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:11",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:11"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:11"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:11",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:11"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "7708:618:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:11",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "8343:222:11",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:11",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:11",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:11",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "8394:67:11",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "8412:35:11",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:11"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:11"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:11"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:11"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:11"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:11"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:11"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:11"
																				},
																				"nodeType": "YulIf",
																				"src": "8384:77:11"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:11"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:11"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:11"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:11"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:11"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "8335:230:11",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7685:14:11"
															},
															"nodeType": "YulSwitch",
															"src": "7678:887:11"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "7257:4:11",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "7263:3:11",
														"type": ""
													}
												],
												"src": "7176:1395:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604051620025e7380380620025e78339818101604052810190620000379190620001f6565b8160009081620000489190620004c6565b5080600190816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61202a80620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e9919061136a565b6102bc565b6040516100fb91906113b2565b60405180910390f35b61010c61039e565b604051610119919061145d565b60405180910390f35b61013c600480360381019061013791906114b5565b610430565b6040516101499190611523565b60405180910390f35b61016c6004803603810190610167919061156a565b610476565b005b610188600480360381019061018391906115aa565b61058d565b005b6101a4600480360381019061019f91906115aa565b6105ed565b005b6101c060048036038101906101bb91906114b5565b61060d565b6040516101cd9190611523565b60405180910390f35b6101f060048036038101906101eb91906115fd565b610693565b6040516101fd9190611639565b60405180910390f35b61020e610741565b60405161021b919061145d565b60405180910390f35b61023e60048036038101906102399190611680565b6107d3565b005b61025a600480360381019061025591906117f5565b6107e9565b005b610276600480360381019061027191906114b5565b61084b565b604051610283919061145d565b60405180910390f35b6102a660048036038101906102a19190611878565b6108b3565b6040516102b391906113b2565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103975750610396826108cb565b5b9050919050565b6060600080546103ad906118e7565b80601f01602080910402602001604051908101604052809291908181526020018280546103d9906118e7565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b82610935565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e89061198a565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610510610980565b73ffffffffffffffffffffffffffffffffffffffff16148061053f575061053e81610539610980565b6108b3565b5b61057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611a1c565b60405180910390fd5b6105888383610988565b505050565b61059e610598610980565b82610996565b6105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490611aae565b60405180910390fd5b6105e8838383610a2b565b505050565b610608838383604051806020016040528060008152506107e9565b505050565b60008061061983610ce6565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068190611b1a565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90611bac565b60405180910390fd5b6000600390506000838260405160200161071e929190611bcc565b604051602081830303815290604052805190602001209050805492505050919050565b606060018054610750906118e7565b80601f016020809104026020016040519081016040528092919081815260200182805461077c906118e7565b80156107c95780601f1061079e576101008083540402835291602001916107c9565b820191906000526020600020905b8154815290600101906020018083116107ac57829003601f168201915b5050505050905090565b6107e56107de610980565b8383610d25565b5050565b6107fa6107f4610980565b83610996565b610839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083090611aae565b60405180910390fd5b61084584848484610da3565b50505050565b606061085682610935565b6000610860610dff565b9050600081511161088057604051806020016040528060008152506108ab565b8061088a84610e16565b60405160200161089b929190611c31565b6040516020818303038152906040525b915050919050565b60008260005281602052604060002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61093e81610ee4565b61097d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097490611b1a565b60405180910390fd5b50565b600033905090565b6109928183610f25565b5050565b6000806109a28361060d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806109e457506109e381856108b3565b5b80610a2257508373ffffffffffffffffffffffffffffffffffffffff16610a0a84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610a4b8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610aa1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9890611cc7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0790611d59565b60405180910390fd5b610b1d8383836001610f3b565b8273ffffffffffffffffffffffffffffffffffffffff16610b3d8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610b93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8a90611cc7565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055610c1c83610c17600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546001610f41565b610f57565b610c6f83610c6a600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546001610f6d565b610f57565b610c798183610f7a565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610ce18383836001610f90565b505050565b6000806002905060008382604051602001610d02929190611d79565b604051602081830303815290604052805190602001209050805492505050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8a90611dee565b60405180910390fd5b610d9e838383610f96565b505050565b610dae848484610a2b565b610dba84848484611001565b610df9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df090611e80565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606060006001610e2584611188565b01905060008167ffffffffffffffff811115610e4457610e436116ca565b5b6040519080825280601f01601f191660200182016040528015610e765781602001600182028036833780820191505090505b509050600082602001820190505b600115610ed9578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610ecd57610ecc611ea0565b5b04945060008503610e84575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16610f0683610ce6565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b8160005260026020526040600020818155505050565b50505050565b600082821015610f515781830390505b92915050565b8160005260036020526040600020818155505050565b6000818301905092915050565b8160005260026020526040600020818155505050565b50505050565b60006005905060008482604051602001610fb1929190611bcc565b60405160208183030381529060405280519060200120905060008482604051602001610fde929190611ee8565b604051602081830303815290604052805190602001209050838155505050505050565b60006110228473ffffffffffffffffffffffffffffffffffffffff166112db565b1561117b578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261104b610980565b8786866040518563ffffffff1660e01b815260040161106d9493929190611f66565b6020604051808303816000875af19250505080156110a957506040513d601f19601f820116820180604052508101906110a69190611fc7565b60015b61112b573d80600081146110d9576040519150601f19603f3d011682016040523d82523d6000602084013e6110de565b606091505b506000815103611123576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111a90611e80565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611180565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106111e6577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816111dc576111db611ea0565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611223576d04ee2d6d415b85acef8100000000838161121957611218611ea0565b5b0492506020810190505b662386f26fc10000831061125257662386f26fc10000838161124857611247611ea0565b5b0492506010810190505b6305f5e100831061127b576305f5e100838161127157611270611ea0565b5b0492506008810190505b61271083106112a057612710838161129657611295611ea0565b5b0492506004810190505b606483106112c357606483816112b9576112b8611ea0565b5b0492506002810190505b600a83106112d2576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61134781611312565b811461135257600080fd5b50565b6000813590506113648161133e565b92915050565b6000602082840312156113805761137f611308565b5b600061138e84828501611355565b91505092915050565b60008115159050919050565b6113ac81611397565b82525050565b60006020820190506113c760008301846113a3565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114075780820151818401526020810190506113ec565b60008484015250505050565b6000601f19601f8301169050919050565b600061142f826113cd565b61143981856113d8565b93506114498185602086016113e9565b61145281611413565b840191505092915050565b600060208201905081810360008301526114778184611424565b905092915050565b6000819050919050565b6114928161147f565b811461149d57600080fd5b50565b6000813590506114af81611489565b92915050565b6000602082840312156114cb576114ca611308565b5b60006114d9848285016114a0565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061150d826114e2565b9050919050565b61151d81611502565b82525050565b60006020820190506115386000830184611514565b92915050565b61154781611502565b811461155257600080fd5b50565b6000813590506115648161153e565b92915050565b6000806040838503121561158157611580611308565b5b600061158f85828601611555565b92505060206115a0858286016114a0565b9150509250929050565b6000806000606084860312156115c3576115c2611308565b5b60006115d186828701611555565b93505060206115e286828701611555565b92505060406115f3868287016114a0565b9150509250925092565b60006020828403121561161357611612611308565b5b600061162184828501611555565b91505092915050565b6116338161147f565b82525050565b600060208201905061164e600083018461162a565b92915050565b61165d81611397565b811461166857600080fd5b50565b60008135905061167a81611654565b92915050565b6000806040838503121561169757611696611308565b5b60006116a585828601611555565b92505060206116b68582860161166b565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61170282611413565b810181811067ffffffffffffffff82111715611721576117206116ca565b5b80604052505050565b60006117346112fe565b905061174082826116f9565b919050565b600067ffffffffffffffff8211156117605761175f6116ca565b5b61176982611413565b9050602081019050919050565b82818337600083830152505050565b600061179861179384611745565b61172a565b9050828152602081018484840111156117b4576117b36116c5565b5b6117bf848285611776565b509392505050565b600082601f8301126117dc576117db6116c0565b5b81356117ec848260208601611785565b91505092915050565b6000806000806080858703121561180f5761180e611308565b5b600061181d87828801611555565b945050602061182e87828801611555565b935050604061183f878288016114a0565b925050606085013567ffffffffffffffff8111156118605761185f61130d565b5b61186c878288016117c7565b91505092959194509250565b6000806040838503121561188f5761188e611308565b5b600061189d85828601611555565b92505060206118ae85828601611555565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118ff57607f821691505b602082108103611912576119116118b8565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006119746021836113d8565b915061197f82611918565b604082019050919050565b600060208201905081810360008301526119a381611967565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611a06603d836113d8565b9150611a11826119aa565b604082019050919050565b60006020820190508181036000830152611a35816119f9565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611a98602d836113d8565b9150611aa382611a3c565b604082019050919050565b60006020820190508181036000830152611ac781611a8b565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611b046018836113d8565b9150611b0f82611ace565b602082019050919050565b60006020820190508181036000830152611b3381611af7565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611b966029836113d8565b9150611ba182611b3a565b604082019050919050565b60006020820190508181036000830152611bc581611b89565b9050919050565b6000604082019050611be16000830185611514565b611bee602083018461162a565b9392505050565b600081905092915050565b6000611c0b826113cd565b611c158185611bf5565b9350611c258185602086016113e9565b80840191505092915050565b6000611c3d8285611c00565b9150611c498284611c00565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611cb16025836113d8565b9150611cbc82611c55565b604082019050919050565b60006020820190508181036000830152611ce081611ca4565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611d436024836113d8565b9150611d4e82611ce7565b604082019050919050565b60006020820190508181036000830152611d7281611d36565b9050919050565b6000604082019050611d8e600083018561162a565b611d9b602083018461162a565b9392505050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611dd86019836113d8565b9150611de382611da2565b602082019050919050565b60006020820190508181036000830152611e0781611dcb565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611e6a6032836113d8565b9150611e7582611e0e565b604082019050919050565b60006020820190508181036000830152611e9981611e5d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000819050919050565b611ee281611ecf565b82525050565b6000604082019050611efd6000830185611514565b611f0a6020830184611ed9565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000611f3882611f11565b611f428185611f1c565b9350611f528185602086016113e9565b611f5b81611413565b840191505092915050565b6000608082019050611f7b6000830187611514565b611f886020830186611514565b611f95604083018561162a565b8181036060830152611fa78184611f2d565b905095945050505050565b600081519050611fc18161133e565b92915050565b600060208284031215611fdd57611fdc611308565b5b6000611feb84828501611fb2565b9150509291505056fea2646970667358221220f87ba3a52aca5651cfc567e42277dceeb6017fd27104a71cf6f7c4ca66f1f19864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x25E7 CODESIZE SUB DUP1 PUSH3 0x25E7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x1F6 JUMP JUMPDEST DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4C6 JUMP JUMPDEST POP POP POP PUSH3 0x5AD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0xCC DUP3 PUSH3 0x81 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xEE JUMPI PUSH3 0xED PUSH3 0x92 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x103 PUSH3 0x63 JUMP JUMPDEST SWAP1 POP PUSH3 0x111 DUP3 DUP3 PUSH3 0xC1 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x134 JUMPI PUSH3 0x133 PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x13F DUP3 PUSH3 0x81 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16C JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x14F JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18F PUSH3 0x189 DUP5 PUSH3 0x116 JUMP JUMPDEST PUSH3 0xF7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1AE JUMPI PUSH3 0x1AD PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH3 0x1BB DUP5 DUP3 DUP6 PUSH3 0x14C JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1DB JUMPI PUSH3 0x1DA PUSH3 0x77 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x210 JUMPI PUSH3 0x20F PUSH3 0x6D JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x231 JUMPI PUSH3 0x230 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x23F DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x263 JUMPI PUSH3 0x262 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x271 DUP6 DUP3 DUP7 ADD PUSH3 0x1C3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2CE JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2E4 JUMPI PUSH3 0x2E3 PUSH3 0x286 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x34E PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x30F JUMP JUMPDEST PUSH3 0x35A DUP7 DUP4 PUSH3 0x30F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3A7 PUSH3 0x3A1 PUSH3 0x39B DUP5 PUSH3 0x372 JUMP JUMPDEST PUSH3 0x37C JUMP JUMPDEST PUSH3 0x372 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3C3 DUP4 PUSH3 0x386 JUMP JUMPDEST PUSH3 0x3DB PUSH3 0x3D2 DUP3 PUSH3 0x3AE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x31C JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3F2 PUSH3 0x3E3 JUMP JUMPDEST PUSH3 0x3FF DUP2 DUP5 DUP5 PUSH3 0x3B8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x427 JUMPI PUSH3 0x41B PUSH1 0x0 DUP3 PUSH3 0x3E8 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x405 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x476 JUMPI PUSH3 0x440 DUP2 PUSH3 0x2EA JUMP JUMPDEST PUSH3 0x44B DUP5 PUSH3 0x2FF JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x45B JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x473 PUSH3 0x46A DUP6 PUSH3 0x2FF JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x404 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x49B PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x47B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4B6 DUP4 DUP4 PUSH3 0x488 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4D1 DUP3 PUSH3 0x27B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4ED JUMPI PUSH3 0x4EC PUSH3 0x92 JUMP JUMPDEST JUMPDEST PUSH3 0x4F9 DUP3 SLOAD PUSH3 0x2B5 JUMP JUMPDEST PUSH3 0x506 DUP3 DUP3 DUP6 PUSH3 0x42B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x53E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x529 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x535 DUP6 DUP3 PUSH3 0x4A8 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x5A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x54E DUP7 PUSH3 0x2EA JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x578 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x551 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x598 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x594 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x488 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x202A DUP1 PUSH3 0x5BD PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x136A JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x13B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x145D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x145D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x145D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1878 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x13B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x8CB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x18E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP1 PUSH2 0x198A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 PUSH2 0x980 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x53F JUMPI POP PUSH2 0x53E DUP2 PUSH2 0x539 PUSH2 0x980 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST JUMPDEST PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1A1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP4 DUP4 PUSH2 0x988 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x598 PUSH2 0x980 JUMP JUMPDEST DUP3 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH2 0xA2B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x608 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7E9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x619 DUP4 PUSH2 0xCE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP1 PUSH2 0x1B1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP PUSH1 0x0 DUP4 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x71E SWAP3 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 SLOAD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x750 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x77C SWAP1 PUSH2 0x18E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x79E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E5 PUSH2 0x7DE PUSH2 0x980 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7FA PUSH2 0x7F4 PUSH2 0x980 JUMP JUMPDEST DUP4 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x830 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x845 DUP5 DUP5 DUP5 DUP5 PUSH2 0xDA3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x856 DUP3 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x860 PUSH2 0xDFF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x880 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8AB JUMP JUMPDEST DUP1 PUSH2 0x88A DUP5 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x89B SWAP3 SWAP2 SWAP1 PUSH2 0x1C31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x93E DUP2 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0x97D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x974 SWAP1 PUSH2 0x1B1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x992 DUP2 DUP4 PUSH2 0xF25 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9A2 DUP4 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x9E4 JUMPI POP PUSH2 0x9E3 DUP2 DUP6 PUSH2 0x8B3 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xA22 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA0A DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA4B DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA98 SWAP1 PUSH2 0x1CC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB07 SWAP1 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF3B JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8A SWAP1 PUSH2 0x1CC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0xC1C DUP4 PUSH2 0xC17 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH2 0xF41 JUMP JUMPDEST PUSH2 0xF57 JUMP JUMPDEST PUSH2 0xC6F DUP4 PUSH2 0xC6A PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0xF57 JUMP JUMPDEST PUSH2 0xC79 DUP2 DUP4 PUSH2 0xF7A JUMP JUMPDEST DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xCE1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF90 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SWAP1 POP PUSH1 0x0 DUP4 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD02 SWAP3 SWAP2 SWAP1 PUSH2 0x1D79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 SLOAD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8A SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD9E DUP4 DUP4 DUP4 PUSH2 0xF96 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDAE DUP5 DUP5 DUP5 PUSH2 0xA2B JUMP JUMPDEST PUSH2 0xDBA DUP5 DUP5 DUP5 DUP5 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF0 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xE25 DUP5 PUSH2 0x1188 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE44 JUMPI PUSH2 0xE43 PUSH2 0x16CA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE76 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xED9 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xECD JUMPI PUSH2 0xECC PUSH2 0x1EA0 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0xE84 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF06 DUP4 PUSH2 0xCE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SSTORE POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF51 JUMPI DUP2 DUP4 SUB SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SSTORE POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP PUSH1 0x0 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFB1 SWAP3 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFDE SWAP3 SWAP2 SWAP1 PUSH2 0x1EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP4 DUP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1022 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12DB JUMP JUMPDEST ISZERO PUSH2 0x117B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x104B PUSH2 0x980 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F66 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10A9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A6 SWAP2 SWAP1 PUSH2 0x1FC7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x112B JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10D9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1123 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111A SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1180 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x11E6 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x11DC JUMPI PUSH2 0x11DB PUSH2 0x1EA0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1223 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1219 JUMPI PUSH2 0x1218 PUSH2 0x1EA0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1252 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1248 JUMPI PUSH2 0x1247 PUSH2 0x1EA0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x127B JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1271 JUMPI PUSH2 0x1270 PUSH2 0x1EA0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x12A0 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1296 JUMPI PUSH2 0x1295 PUSH2 0x1EA0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x12C3 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x12B9 JUMPI PUSH2 0x12B8 PUSH2 0x1EA0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x12D2 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1347 DUP2 PUSH2 0x1312 JUMP JUMPDEST DUP2 EQ PUSH2 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1364 DUP2 PUSH2 0x133E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1380 JUMPI PUSH2 0x137F PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x138E DUP5 DUP3 DUP6 ADD PUSH2 0x1355 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13AC DUP2 PUSH2 0x1397 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1407 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13EC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142F DUP3 PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x1439 DUP2 DUP6 PUSH2 0x13D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1449 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13E9 JUMP JUMPDEST PUSH2 0x1452 DUP2 PUSH2 0x1413 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1477 DUP2 DUP5 PUSH2 0x1424 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1492 DUP2 PUSH2 0x147F JUMP JUMPDEST DUP2 EQ PUSH2 0x149D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14AF DUP2 PUSH2 0x1489 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14CB JUMPI PUSH2 0x14CA PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14D9 DUP5 DUP3 DUP6 ADD PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150D DUP3 PUSH2 0x14E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151D DUP2 PUSH2 0x1502 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1538 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1514 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1547 DUP2 PUSH2 0x1502 JUMP JUMPDEST DUP2 EQ PUSH2 0x1552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1564 DUP2 PUSH2 0x153E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1581 JUMPI PUSH2 0x1580 PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x158F DUP6 DUP3 DUP7 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15A0 DUP6 DUP3 DUP7 ADD PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15C3 JUMPI PUSH2 0x15C2 PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15D1 DUP7 DUP3 DUP8 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15E2 DUP7 DUP3 DUP8 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x15F3 DUP7 DUP3 DUP8 ADD PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1613 JUMPI PUSH2 0x1612 PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1621 DUP5 DUP3 DUP6 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1633 DUP2 PUSH2 0x147F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x164E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x162A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x165D DUP2 PUSH2 0x1397 JUMP JUMPDEST DUP2 EQ PUSH2 0x1668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x167A DUP2 PUSH2 0x1654 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1697 JUMPI PUSH2 0x1696 PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16A5 DUP6 DUP3 DUP7 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16B6 DUP6 DUP3 DUP7 ADD PUSH2 0x166B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1702 DUP3 PUSH2 0x1413 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1721 JUMPI PUSH2 0x1720 PUSH2 0x16CA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1734 PUSH2 0x12FE JUMP JUMPDEST SWAP1 POP PUSH2 0x1740 DUP3 DUP3 PUSH2 0x16F9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1760 JUMPI PUSH2 0x175F PUSH2 0x16CA JUMP JUMPDEST JUMPDEST PUSH2 0x1769 DUP3 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1798 PUSH2 0x1793 DUP5 PUSH2 0x1745 JUMP JUMPDEST PUSH2 0x172A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17B4 JUMPI PUSH2 0x17B3 PUSH2 0x16C5 JUMP JUMPDEST JUMPDEST PUSH2 0x17BF DUP5 DUP3 DUP6 PUSH2 0x1776 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17DC JUMPI PUSH2 0x17DB PUSH2 0x16C0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17EC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1785 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x180F JUMPI PUSH2 0x180E PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x181D DUP8 DUP3 DUP9 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x182E DUP8 DUP3 DUP9 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x183F DUP8 DUP3 DUP9 ADD PUSH2 0x14A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1860 JUMPI PUSH2 0x185F PUSH2 0x130D JUMP JUMPDEST JUMPDEST PUSH2 0x186C DUP8 DUP3 DUP9 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x188F JUMPI PUSH2 0x188E PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x189D DUP6 DUP3 DUP7 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18AE DUP6 DUP3 DUP7 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x18FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1912 JUMPI PUSH2 0x1911 PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1974 PUSH1 0x21 DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x197F DUP3 PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19A3 DUP2 PUSH2 0x1967 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A06 PUSH1 0x3D DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A11 DUP3 PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A35 DUP2 PUSH2 0x19F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A98 PUSH1 0x2D DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA3 DUP3 PUSH2 0x1A3C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AC7 DUP2 PUSH2 0x1A8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B04 PUSH1 0x18 DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0F DUP3 PUSH2 0x1ACE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B33 DUP2 PUSH2 0x1AF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B96 PUSH1 0x29 DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BA1 DUP3 PUSH2 0x1B3A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BC5 DUP2 PUSH2 0x1B89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BE1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x1BEE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x162A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0B DUP3 PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x1C15 DUP2 DUP6 PUSH2 0x1BF5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C25 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13E9 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3D DUP3 DUP6 PUSH2 0x1C00 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C49 DUP3 DUP5 PUSH2 0x1C00 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB1 PUSH1 0x25 DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CBC DUP3 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CE0 DUP2 PUSH2 0x1CA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D43 PUSH1 0x24 DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D4E DUP3 PUSH2 0x1CE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D72 DUP2 PUSH2 0x1D36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D8E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x162A JUMP JUMPDEST PUSH2 0x1D9B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x162A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD8 PUSH1 0x19 DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE3 DUP3 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E07 DUP2 PUSH2 0x1DCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6A PUSH1 0x32 DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E75 DUP3 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E99 DUP2 PUSH2 0x1E5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EE2 DUP2 PUSH2 0x1ECF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EFD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x1F0A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1ED9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F38 DUP3 PUSH2 0x1F11 JUMP JUMPDEST PUSH2 0x1F42 DUP2 DUP6 PUSH2 0x1F1C JUMP JUMPDEST SWAP4 POP PUSH2 0x1F52 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13E9 JUMP JUMPDEST PUSH2 0x1F5B DUP2 PUSH2 0x1413 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1F7B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x1F88 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x1F95 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x162A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1FA7 DUP2 DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FC1 DUP2 PUSH2 0x133E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FDD JUMPI PUSH2 0x1FDC PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FEB DUP5 DUP3 DUP6 ADD PUSH2 0x1FB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 PUSH28 0xA3A52ACA5651CFC567E42277DCEEB6017FD27104A71CF6F7C4CA66F1 CALL SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "628:20291:0:-:0;;;1390:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1464:5;1456;:13;;;;;;:::i;:::-;;1489:7;1479;:17;;;;;;:::i;:::-;;1390:113;;628:20291;;7:75:11;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;628:20291:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_916": {
									"entryPoint": 3984,
									"id": 916,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_790": {
									"entryPoint": 2440,
									"id": 790,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_baseURI_224": {
									"entryPoint": 3583,
									"id": 224,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_903": {
									"entryPoint": 3899,
									"id": 903,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_890": {
									"entryPoint": 4097,
									"id": 890,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_462": {
									"entryPoint": 3812,
									"id": 462,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isApprovedOrOwner_496": {
									"entryPoint": 2454,
									"id": 496,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_msgSender_1519": {
									"entryPoint": 2432,
									"id": 1519,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_444": {
									"entryPoint": 3302,
									"id": 444,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireMinted_828": {
									"entryPoint": 2357,
									"id": 828,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_safeTransfer_420": {
									"entryPoint": 3491,
									"id": 420,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_setApprovalForAll_814": {
									"entryPoint": 3365,
									"id": 814,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_776": {
									"entryPoint": 2603,
									"id": 776,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@approve_267": {
									"entryPoint": 1142,
									"id": 267,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_128": {
									"entryPoint": 1683,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_285": {
									"entryPoint": 1072,
									"id": 285,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_315": {
									"entryPoint": 2227,
									"id": 315,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_1195": {
									"entryPoint": 4827,
									"id": 1195,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@log10_2497": {
									"entryPoint": 4488,
									"id": 2497,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@name_166": {
									"entryPoint": 926,
									"id": 166,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_156": {
									"entryPoint": 1549,
									"id": 156,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeAdd_1004": {
									"entryPoint": 3949,
									"id": 1004,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safeSub_1015": {
									"entryPoint": 3905,
									"id": 1015,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@safeTransferFrom_361": {
									"entryPoint": 1517,
									"id": 361,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_391": {
									"entryPoint": 2025,
									"id": 391,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@saveNestedWithOperatorApproval_993": {
									"entryPoint": 3990,
									"id": 993,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@saveWithAssemblyBalance_940": {
									"entryPoint": 3927,
									"id": 940,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@saveWithAssemblyOwner_949": {
									"entryPoint": 3962,
									"id": 949,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@saveWithAssemblyTokenApproval_958": {
									"entryPoint": 3877,
									"id": 958,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setApprovalForAll_302": {
									"entryPoint": 2003,
									"id": 302,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1781": {
									"entryPoint": 2251,
									"id": 1781,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_93": {
									"entryPoint": 700,
									"id": 93,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_176": {
									"entryPoint": 1857,
									"id": 176,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@toString_1588": {
									"entryPoint": 3606,
									"id": 1588,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@tokenURI_215": {
									"entryPoint": 2123,
									"id": 215,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_342": {
									"entryPoint": 1421,
									"id": 342,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 6021,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 5461,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 5739,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4949,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 8114,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 6087,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5280,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 6133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4970,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 8135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5027,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 7897,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5156,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7627,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7049,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5674,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7217,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5411,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8038,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": 7912,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7116,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5042,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7808,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7367,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7084,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6538,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5689,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7545,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5930,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4862,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 7953,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 5069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 7964,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 7157,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5378,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 7887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5346,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5247,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 6006,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 5097,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 6375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 7840,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 6328,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5834,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5824,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5829,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4877,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4872,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 5139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af": {
									"entryPoint": 6716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e": {
									"entryPoint": 7694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48": {
									"entryPoint": 7253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4": {
									"entryPoint": 7399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05": {
									"entryPoint": 7586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159": {
									"entryPoint": 6970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f": {
									"entryPoint": 6862,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942": {
									"entryPoint": 6424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83": {
									"entryPoint": 6570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5438,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5716,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:24371:11",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:11",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:11",
														"type": ""
													}
												],
												"src": "334:149:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:11"
															},
															"nodeType": "YulIf",
															"src": "541:62:11"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:11",
														"type": ""
													}
												],
												"src": "489:120:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:11",
														"type": ""
													}
												],
												"src": "615:137:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:11"
															},
															"nodeType": "YulIf",
															"src": "833:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:11",
														"type": ""
													}
												],
												"src": "758:327:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:11",
														"type": ""
													}
												],
												"src": "1091:90:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:11",
														"type": ""
													}
												],
												"src": "1187:109:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:11",
														"type": ""
													}
												],
												"src": "1302:210:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1577:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1588:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1598:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1560:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1570:6:11",
														"type": ""
													}
												],
												"src": "1518:99:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1719:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1729:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1757:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1772:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1691:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1696:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "1707:11:11",
														"type": ""
													}
												],
												"src": "1623:169:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1860:184:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1870:10:11",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1879:1:11",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1874:1:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1939:63:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "1964:3:11"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1969:1:11"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1960:3:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1960:11:11"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "1983:3:11"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1988:1:11"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1979:3:11"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1979:11:11"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1973:5:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1973:18:11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1953:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1953:39:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1953:39:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1900:1:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1903:6:11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1897:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "1897:13:11"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1911:19:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1913:15:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1922:1:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1925:2:11",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1918:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1918:10:11"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1913:1:11"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1893:3:11",
																"statements": []
															},
															"src": "1889:113:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "2022:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2027:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2018:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2018:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2036:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2011:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2011:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2011:27:11"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1842:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "1847:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1852:6:11",
														"type": ""
													}
												],
												"src": "1798:246:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2098:54:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2108:38:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2126:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2133:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2122:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2122:14:11"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2142:2:11",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "2138:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2138:7:11"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2118:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2118:28:11"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "2108:6:11"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2081:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "2091:6:11",
														"type": ""
													}
												],
												"src": "2050:102:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2250:285:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2260:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "2274:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2274:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2264:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2322:78:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2388:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2393:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2329:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2329:71:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2322:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2448:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2455:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2444:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2444:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2462:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2467:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "2409:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2409:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2409:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2483:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2494:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2521:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "2499:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2499:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2490:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2490:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2483:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2231:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2238:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2246:3:11",
														"type": ""
													}
												],
												"src": "2158:377:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2659:195:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2669:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2692:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2677:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2669:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2716:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2727:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2712:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2712:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "2735:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2741:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2731:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2731:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2705:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2705:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2705:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:86:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2833:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "2842:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2769:63:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2769:78:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2761:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2631:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2643:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2654:4:11",
														"type": ""
													}
												],
												"src": "2541:313:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2905:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2915:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2926:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2915:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2887:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2897:7:11",
														"type": ""
													}
												],
												"src": "2860:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2986:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3043:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3052:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3055:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3045:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3045:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3045:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3009:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3034:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3016:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3016:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3006:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3006:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2999:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "2999:43:11"
															},
															"nodeType": "YulIf",
															"src": "2996:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2979:5:11",
														"type": ""
													}
												],
												"src": "2943:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3123:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3133:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3142:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3142:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3133:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3198:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3171:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3171:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3171:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3101:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3109:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3117:5:11",
														"type": ""
													}
												],
												"src": "3071:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3282:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3328:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3330:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3330:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3330:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3303:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3299:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3299:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3324:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3295:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3295:32:11"
															},
															"nodeType": "YulIf",
															"src": "3292:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "3421:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3436:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3450:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3440:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3465:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3500:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3511:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3496:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3496:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3520:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3475:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3475:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3465:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3252:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3263:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3275:6:11",
														"type": ""
													}
												],
												"src": "3216:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3596:81:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3606:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3617:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3578:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3588:7:11",
														"type": ""
													}
												],
												"src": "3551:126:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3728:51:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3738:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3749:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3710:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "3720:7:11",
														"type": ""
													}
												],
												"src": "3683:96:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3850:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "3860:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3838:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3845:3:11",
														"type": ""
													}
												],
												"src": "3785:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4007:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4017:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4025:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4053:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3979:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3991:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4002:4:11",
														"type": ""
													}
												],
												"src": "3909:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4180:79:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4237:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:43:11"
															},
															"nodeType": "YulIf",
															"src": "4190:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4173:5:11",
														"type": ""
													}
												],
												"src": "4137:122:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4317:87:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4327:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4336:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4365:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "4295:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4303:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4311:5:11",
														"type": ""
													}
												],
												"src": "4265:139:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4493:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4539:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "4506:32:11"
															},
															"nodeType": "YulIf",
															"src": "4503:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "4632:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4676:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "4759:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4804:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4455:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4466:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4478:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4486:6:11",
														"type": ""
													}
												],
												"src": "4410:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4990:519:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5036:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5038:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5038:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5038:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5011:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5020:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5007:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5007:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5032:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5003:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5003:32:11"
															},
															"nodeType": "YulIf",
															"src": "5000:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "5129:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5144:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5148:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5173:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5208:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5219:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5204:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5204:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5228:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5183:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5183:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5173:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5256:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5271:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5285:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5275:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5301:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5336:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5347:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5332:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5332:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5356:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5311:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5311:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "5301:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5384:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5399:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5413:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5403:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5429:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5464:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5475:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5460:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5460:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5484:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5439:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5439:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "5429:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4944:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4955:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4967:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4975:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4983:6:11",
														"type": ""
													}
												],
												"src": "4890:619:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5581:263:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5627:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "5629:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5629:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5629:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5602:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5611:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5598:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5598:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5623:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:32:11"
															},
															"nodeType": "YulIf",
															"src": "5591:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "5720:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5735:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5749:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "5739:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5764:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "5799:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "5810:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5795:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5795:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5819:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5774:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5774:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "5764:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5551:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5562:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5574:6:11",
														"type": ""
													}
												],
												"src": "5515:329:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5915:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5932:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5955:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "5937:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5937:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5925:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "5925:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5925:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5903:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5910:3:11",
														"type": ""
													}
												],
												"src": "5850:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6072:124:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6082:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6105:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6090:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6090:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6082:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6162:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6175:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6186:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6171:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6171:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6118:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6118:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6044:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6056:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6067:4:11",
														"type": ""
													}
												],
												"src": "5974:222:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6242:76:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6296:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6305:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6308:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6298:6:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6298:12:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6298:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6265:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6287:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "6272:14:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6272:21:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6262:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6262:32:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6255:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6255:40:11"
															},
															"nodeType": "YulIf",
															"src": "6252:60:11"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6235:5:11",
														"type": ""
													}
												],
												"src": "6202:116:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6373:84:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6383:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6405:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6392:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6392:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6383:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6445:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6421:23:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6421:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6421:30:11"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "6351:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6359:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6367:5:11",
														"type": ""
													}
												],
												"src": "6324:133:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6543:388:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6589:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "6591:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6591:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6591:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6564:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6560:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6560:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6585:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6556:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "6556:32:11"
															},
															"nodeType": "YulIf",
															"src": "6553:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "6682:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6697:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6711:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6701:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6726:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6761:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6772:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6757:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6757:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6781:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6736:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6736:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "6726:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6809:115:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6824:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6838:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "6828:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6854:60:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "6886:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "6897:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6882:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6882:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6906:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6864:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6864:50:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6505:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6516:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6528:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6536:6:11",
														"type": ""
													}
												],
												"src": "6463:468:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7026:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7043:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7046:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7036:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7036:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7036:12:11"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "6937:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7149:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7169:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7159:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7159:12:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7159:12:11"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7060:117:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7211:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7228:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7231:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7221:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7221:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7221:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7325:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7328:4:11",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7318:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7318:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7318:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7349:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7352:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7342:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7342:15:11"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7183:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7412:238:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7422:58:11",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7444:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7474:4:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7452:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7452:27:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7440:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7440:40:11"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7426:10:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7591:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7593:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7593:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7593:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7534:10:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7546:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7531:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7531:34:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7570:10:11"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7582:6:11"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7567:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7567:22:11"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7528:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7528:62:11"
															},
															"nodeType": "YulIf",
															"src": "7525:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7629:2:11",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7633:10:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7622:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7622:22:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7622:22:11"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7398:6:11",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7406:4:11",
														"type": ""
													}
												],
												"src": "7369:281:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7697:88:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7707:30:11",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7717:18:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7717:20:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7707:6:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7766:6:11"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7774:4:11"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7746:19:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7746:33:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7746:33:11"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7681:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7690:6:11",
														"type": ""
													}
												],
												"src": "7656:129:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7857:241:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7962:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7964:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7964:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7964:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7934:6:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7942:18:11",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7931:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "7931:30:11"
															},
															"nodeType": "YulIf",
															"src": "7928:56:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7994:37:11",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8024:6:11"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "8002:21:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8002:29:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7994:4:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8068:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8080:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8076:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8076:15:11"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8068:4:11"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7841:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7852:4:11",
														"type": ""
													}
												],
												"src": "7791:307:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:82:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8191:3:11"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8196:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8201:6:11"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8178:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8178:30:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8178:30:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8228:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8233:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8224:16:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8242:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8217:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8217:27:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8217:27:11"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8150:3:11",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8155:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8160:6:11",
														"type": ""
													}
												],
												"src": "8104:146:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8339:340:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8349:74:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8415:6:11"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "8374:40:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8374:48:11"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8358:15:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8358:65:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8349:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8439:5:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8446:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8432:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8432:21:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8432:21:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8462:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "8477:5:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8484:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8473:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8473:16:11"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "8466:3:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8527:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "8529:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8529:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8529:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "8508:3:11"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8513:6:11"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8504:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8504:16:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8522:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8501:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8501:25:11"
															},
															"nodeType": "YulIf",
															"src": "8498:112:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8656:3:11"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8661:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8666:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "8619:36:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8619:54:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8619:54:11"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8312:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8317:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8325:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8333:5:11",
														"type": ""
													}
												],
												"src": "8256:423:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8759:277:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8808:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "8810:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8810:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8810:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8787:6:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8795:4:11",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8783:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8783:17:11"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "8802:3:11"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "8779:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8779:27:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8772:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8772:35:11"
															},
															"nodeType": "YulIf",
															"src": "8769:122:11"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8900:34:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8927:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8914:12:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8914:20:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8904:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8943:87:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9003:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9011:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8999:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8999:17:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9018:6:11"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "9026:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "8952:46:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "8952:78:11"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "8943:5:11"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "8737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "8753:5:11",
														"type": ""
													}
												],
												"src": "8698:338:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9168:817:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9215:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "9217:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9217:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9217:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9189:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9198:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9185:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9185:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9210:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9181:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "9181:33:11"
															},
															"nodeType": "YulIf",
															"src": "9178:120:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "9308:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9323:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9337:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9327:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9352:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9387:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9398:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9383:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9383:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9407:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9362:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9362:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "9352:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9435:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9450:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9464:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9454:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9480:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9515:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9526:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9511:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9511:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9535:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9490:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9490:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "9480:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9563:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9578:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9592:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9582:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9608:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9643:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9654:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9639:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9639:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9663:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9618:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9618:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "9608:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "9691:287:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "9706:46:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9737:9:11"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9748:2:11",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9733:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9733:18:11"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "9720:12:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9720:32:11"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "9710:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "9799:83:11",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "9801:77:11"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9801:79:11"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "9801:79:11"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "9771:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9779:18:11",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9768:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9768:30:11"
																	},
																	"nodeType": "YulIf",
																	"src": "9765:117:11"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "9896:72:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "9940:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "9951:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "9936:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9936:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9960:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "9906:29:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9906:62:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "9896:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9114:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9125:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9137:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9145:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9153:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9161:6:11",
														"type": ""
													}
												],
												"src": "9042:943:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10074:391:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10120:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10122:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10122:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10122:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10095:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10104:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10091:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10091:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10116:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10087:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10087:32:11"
															},
															"nodeType": "YulIf",
															"src": "10084:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "10213:117:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10228:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10242:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10232:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10257:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10292:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10303:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10288:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10288:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10312:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10267:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10267:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10257:6:11"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10340:118:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10355:16:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10369:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10359:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10385:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10420:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10431:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10416:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10416:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10440:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "10395:20:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10395:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10385:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10036:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10047:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10059:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10067:6:11",
														"type": ""
													}
												],
												"src": "9991:474:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10499:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10516:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10519:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10509:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10509:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10509:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10613:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10616:4:11",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10606:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10606:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10606:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10637:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10640:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10630:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10630:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10630:15:11"
														}
													]
												},
												"name": "panic_error_0x22",
												"nodeType": "YulFunctionDefinition",
												"src": "10471:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10708:269:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10718:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10732:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10738:1:11",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "10728:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10728:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "10718:6:11"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10749:38:11",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "10779:4:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10785:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10775:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10775:12:11"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "10753:18:11",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10826:51:11",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "10840:27:11",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "10854:6:11"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:4:11",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "10850:3:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10850:17:11"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10840:6:11"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10806:18:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10799:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10799:26:11"
															},
															"nodeType": "YulIf",
															"src": "10796:81:11"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10929:42:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nodeType": "YulIdentifier",
																				"src": "10943:16:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10943:18:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10943:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "10893:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "10916:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10924:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "10913:2:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10913:14:11"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "10890:2:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:38:11"
															},
															"nodeType": "YulIf",
															"src": "10887:84:11"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "10692:4:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "10701:6:11",
														"type": ""
													}
												],
												"src": "10657:320:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11089:114:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11111:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11119:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11107:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11107:14:11"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11123:34:11",
																		"type": "",
																		"value": "ERC721: approval to current owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11100:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11100:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11100:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11179:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11187:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11175:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11175:15:11"
																	},
																	{
																		"hexValue": "72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11192:3:11",
																		"type": "",
																		"value": "r"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11168:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11168:28:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11168:28:11"
														}
													]
												},
												"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11081:6:11",
														"type": ""
													}
												],
												"src": "10983:220:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11355:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11365:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11431:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11436:2:11",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11372:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11372:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11365:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11537:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																	"nodeType": "YulIdentifier",
																	"src": "11448:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11448:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11448:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11550:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "11561:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11566:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11557:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11557:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "11550:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "11343:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "11351:3:11",
														"type": ""
													}
												],
												"src": "11209:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11752:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11762:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11774:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11785:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11770:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11770:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11762:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11809:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11820:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11805:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11805:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "11828:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11834:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11824:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11824:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11798:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11798:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11798:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11854:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "11988:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11862:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "11862:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11854:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11732:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11747:4:11",
														"type": ""
													}
												],
												"src": "11581:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12112:142:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12134:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12142:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12130:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12130:14:11"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12146:34:11",
																		"type": "",
																		"value": "ERC721: approve caller is not to"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12123:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12123:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12123:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12202:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12210:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12198:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12198:15:11"
																	},
																	{
																		"hexValue": "6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12215:31:11",
																		"type": "",
																		"value": "ken owner or approved for all"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12191:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12191:56:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12191:56:11"
														}
													]
												},
												"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "12104:6:11",
														"type": ""
													}
												],
												"src": "12006:248:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12406:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12416:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12482:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12487:2:11",
																		"type": "",
																		"value": "61"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12423:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12423:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12416:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12588:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																	"nodeType": "YulIdentifier",
																	"src": "12499:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12499:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12499:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12601:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12612:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12617:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12608:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12608:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "12601:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "12394:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "12402:3:11",
														"type": ""
													}
												],
												"src": "12260:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12803:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12813:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12825:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12836:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12821:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12821:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12813:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12860:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12871:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12856:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12856:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "12879:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12885:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12875:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12875:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12849:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12849:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12849:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12905:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "13039:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12913:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "12913:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12905:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12783:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12798:4:11",
														"type": ""
													}
												],
												"src": "12632:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13163:126:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13185:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13193:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13181:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13181:14:11"
																	},
																	{
																		"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13197:34:11",
																		"type": "",
																		"value": "ERC721: caller is not token owne"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13174:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13174:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13174:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13253:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13261:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13249:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13249:15:11"
																	},
																	{
																		"hexValue": "72206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13266:15:11",
																		"type": "",
																		"value": "r or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13242:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13242:40:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13242:40:11"
														}
													]
												},
												"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13155:6:11",
														"type": ""
													}
												],
												"src": "13057:232:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13441:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13451:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13517:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13522:2:11",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13458:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13458:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "13451:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13623:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																	"nodeType": "YulIdentifier",
																	"src": "13534:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13534:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13534:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13636:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "13647:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13652:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13643:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13643:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "13636:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "13429:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "13437:3:11",
														"type": ""
													}
												],
												"src": "13295:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13838:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13848:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13860:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13871:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13856:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13856:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13848:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13895:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13906:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13891:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13891:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "13914:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13920:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13910:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13910:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13884:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13884:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13884:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13940:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "14074:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "13948:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "13948:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13940:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13818:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13833:4:11",
														"type": ""
													}
												],
												"src": "13667:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14198:68:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "14220:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14228:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14216:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14216:14:11"
																	},
																	{
																		"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14232:26:11",
																		"type": "",
																		"value": "ERC721: invalid token ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14209:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14209:50:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14209:50:11"
														}
													]
												},
												"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "14190:6:11",
														"type": ""
													}
												],
												"src": "14092:174:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14418:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14428:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14494:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14499:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14435:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14435:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "14428:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14600:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																	"nodeType": "YulIdentifier",
																	"src": "14511:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14511:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14511:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14613:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "14624:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14629:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14620:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14620:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "14613:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "14406:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14414:3:11",
														"type": ""
													}
												],
												"src": "14272:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14815:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14825:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14837:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14848:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14833:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14833:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14825:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14872:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14883:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14868:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14868:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "14891:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14897:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14887:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14887:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14861:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14861:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14861:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14917:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "15051:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "14925:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "14925:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14917:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14795:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14810:4:11",
														"type": ""
													}
												],
												"src": "14644:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15175:122:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15197:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15205:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15193:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15193:14:11"
																	},
																	{
																		"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f742061207661",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15209:34:11",
																		"type": "",
																		"value": "ERC721: address zero is not a va"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15186:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15186:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15186:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "15265:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15273:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15261:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15261:15:11"
																	},
																	{
																		"hexValue": "6c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15278:11:11",
																		"type": "",
																		"value": "lid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15254:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15254:36:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15254:36:11"
														}
													]
												},
												"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "15167:6:11",
														"type": ""
													}
												],
												"src": "15069:228:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15449:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15459:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15525:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15530:2:11",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15466:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15466:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "15459:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15631:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																	"nodeType": "YulIdentifier",
																	"src": "15542:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15542:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15542:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15644:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "15655:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15660:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15651:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15651:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "15644:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "15437:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15445:3:11",
														"type": ""
													}
												],
												"src": "15303:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15846:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "15856:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15868:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15879:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15864:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15864:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15856:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15903:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15914:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15899:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15899:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "15922:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15928:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15918:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15918:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15892:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15892:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15892:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15948:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "16082:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "15956:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "15956:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15948:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15826:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15841:4:11",
														"type": ""
													}
												],
												"src": "15675:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16226:206:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16236:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16248:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16259:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16244:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16244:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16236:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16316:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16329:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16340:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16325:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16325:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16272:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16272:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16272:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "16397:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16410:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16421:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16406:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16406:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16353:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16353:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16353:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16190:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16202:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16210:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16221:4:11",
														"type": ""
													}
												],
												"src": "16100:332:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16552:34:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16562:18:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "16577:3:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "16562:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16524:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16529:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "16540:11:11",
														"type": ""
													}
												],
												"src": "16438:148:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16702:280:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16712:53:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "16759:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16726:32:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16726:39:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16716:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16774:96:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16858:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16863:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "16781:76:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16781:89:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "16774:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "16918:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16925:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16914:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16914:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16932:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16937:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "16879:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16879:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16879:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16953:23:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "16964:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16969:6:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16960:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "16960:16:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "16953:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "16683:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "16690:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16698:3:11",
														"type": ""
													}
												],
												"src": "16592:390:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17172:251:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17183:102:11",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17272:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17281:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17190:81:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17190:95:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17183:3:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17295:102:11",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17384:6:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17393:3:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17302:81:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17302:95:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17295:3:11"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "17407:10:11",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "17414:3:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "17407:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17143:3:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17149:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17157:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17168:3:11",
														"type": ""
													}
												],
												"src": "16988:435:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17535:118:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17557:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17565:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17553:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17553:14:11"
																	},
																	{
																		"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f727265637420",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17569:34:11",
																		"type": "",
																		"value": "ERC721: transfer from incorrect "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17546:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17546:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17546:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "17625:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17633:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17621:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17621:15:11"
																	},
																	{
																		"hexValue": "6f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17638:7:11",
																		"type": "",
																		"value": "owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17614:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17614:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17614:32:11"
														}
													]
												},
												"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "17527:6:11",
														"type": ""
													}
												],
												"src": "17429:224:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17805:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17815:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17881:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17886:2:11",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "17822:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17822:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "17815:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "17987:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																	"nodeType": "YulIdentifier",
																	"src": "17898:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "17898:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17898:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18000:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18011:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18016:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18007:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18007:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "18000:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "17793:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "17801:3:11",
														"type": ""
													}
												],
												"src": "17659:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18202:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18212:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18224:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18235:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18220:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18220:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18212:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18259:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18270:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18255:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18255:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "18278:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18284:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18274:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18274:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18248:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18248:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18248:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18304:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "18438:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18312:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18312:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18304:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18182:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18197:4:11",
														"type": ""
													}
												],
												"src": "18031:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18562:117:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18584:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18592:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18580:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18580:14:11"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f20616464",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18596:34:11",
																		"type": "",
																		"value": "ERC721: transfer to the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18573:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18573:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18573:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "18652:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18660:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18648:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18648:15:11"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "18665:6:11",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18641:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18641:31:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18641:31:11"
														}
													]
												},
												"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "18554:6:11",
														"type": ""
													}
												],
												"src": "18456:223:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18831:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18841:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18907:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18912:2:11",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18848:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18848:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "18841:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19013:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																	"nodeType": "YulIdentifier",
																	"src": "18924:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "18924:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18924:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19026:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "19037:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19042:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19033:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19033:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "19026:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18819:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "18827:3:11",
														"type": ""
													}
												],
												"src": "18685:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19228:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19238:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19250:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19261:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19246:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19246:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19238:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19285:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19296:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19281:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19281:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "19304:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19310:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19300:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19300:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19274:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19274:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19274:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19330:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "19464:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19338:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19338:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19330:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19208:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19223:4:11",
														"type": ""
													}
												],
												"src": "19057:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19608:206:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19618:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19630:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19641:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19626:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19626:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "19618:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "19698:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19711:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19722:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19707:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19707:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19654:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19654:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19654:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "19779:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19792:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19803:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19788:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19788:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "19735:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19735:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19735:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19572:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19584:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19592:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19603:4:11",
														"type": ""
													}
												],
												"src": "19482:332:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19926:69:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "19948:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19956:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19944:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19944:14:11"
																	},
																	{
																		"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19960:27:11",
																		"type": "",
																		"value": "ERC721: approve to caller"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19937:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "19937:51:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19937:51:11"
														}
													]
												},
												"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "19918:6:11",
														"type": ""
													}
												],
												"src": "19820:175:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20147:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20157:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20223:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20228:2:11",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20164:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20164:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "20157:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20329:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																	"nodeType": "YulIdentifier",
																	"src": "20240:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20240:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20240:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20342:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "20353:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20358:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20349:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20349:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "20342:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "20135:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "20143:3:11",
														"type": ""
													}
												],
												"src": "20001:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20544:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20554:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20566:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20577:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20562:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20562:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20554:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20601:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20612:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20597:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20597:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "20620:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20626:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "20616:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20616:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20590:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20590:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20590:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20646:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "20780:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "20654:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20654:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20646:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20524:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20539:4:11",
														"type": ""
													}
												],
												"src": "20373:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20904:131:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20926:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20934:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20922:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20922:14:11"
																	},
																	{
																		"hexValue": "4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20938:34:11",
																		"type": "",
																		"value": "ERC721: transfer to non ERC721Re"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20915:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20915:58:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20915:58:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "20994:6:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21002:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20990:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20990:15:11"
																	},
																	{
																		"hexValue": "63656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21007:20:11",
																		"type": "",
																		"value": "ceiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20983:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "20983:45:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20983:45:11"
														}
													]
												},
												"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "20896:6:11",
														"type": ""
													}
												],
												"src": "20798:237:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21187:220:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21197:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21263:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21268:2:11",
																		"type": "",
																		"value": "50"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21204:58:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21204:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "21197:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21369:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																	"nodeType": "YulIdentifier",
																	"src": "21280:88:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21280:93:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21280:93:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21382:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21393:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21398:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21389:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21389:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "21382:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "21175:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "21183:3:11",
														"type": ""
													}
												],
												"src": "21041:366:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21584:248:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21594:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21606:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21617:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21602:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21602:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21594:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21641:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21652:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21637:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21637:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "21660:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21666:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "21656:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21656:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21630:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21630:47:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21630:47:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21686:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "21820:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "21694:124:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21694:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21686:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21564:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21579:4:11",
														"type": ""
													}
												],
												"src": "21413:419:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21866:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21883:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21886:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21876:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21876:88:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21876:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21980:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21983:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21973:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21973:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21973:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22004:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22007:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21997:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "21997:15:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21997:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "21838:180:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22069:32:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22079:16:11",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "22090:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "22079:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22051:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "22061:7:11",
														"type": ""
													}
												],
												"src": "22024:77:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22172:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22189:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22212:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "22194:17:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22194:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22182:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22182:37:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22182:37:11"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22160:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22167:3:11",
														"type": ""
													}
												],
												"src": "22107:118:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22357:206:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22367:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "22379:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22390:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22375:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22375:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "22367:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "22447:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22460:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22471:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22456:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22456:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22403:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22403:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22403:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "22528:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "22541:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22552:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22537:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22537:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22484:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22484:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22484:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "22321:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "22333:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "22341:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "22352:4:11",
														"type": ""
													}
												],
												"src": "22231:332:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22627:40:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22638:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22654:5:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "22648:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22648:12:11"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "22638:6:11"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22610:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22620:6:11",
														"type": ""
													}
												],
												"src": "22569:98:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22768:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22785:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22790:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22778:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22778:19:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22778:19:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22806:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22825:3:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22830:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22821:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22821:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "22806:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22740:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22745:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "22756:11:11",
														"type": ""
													}
												],
												"src": "22673:168:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22937:283:11",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "22947:52:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "22993:5:11"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "22961:31:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "22961:38:11"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "22951:6:11",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "23008:77:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23073:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23078:6:11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23015:57:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23015:70:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "23008:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "23133:5:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23140:4:11",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23129:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23129:16:11"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23147:3:11"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "23152:6:11"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "23094:34:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23094:65:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23094:65:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23168:46:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23179:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "23206:6:11"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "23184:21:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23184:29:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23175:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23175:39:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23168:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22918:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22925:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22933:3:11",
														"type": ""
													}
												],
												"src": "22847:373:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23426:440:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23436:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23448:9:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23459:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23444:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23444:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23436:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23517:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23530:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23541:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23526:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23526:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23473:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23473:71:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23473:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23598:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23611:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23622:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23607:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23607:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23554:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23554:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23554:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "23680:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23693:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23704:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23689:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23689:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23636:43:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23636:72:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23636:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23729:9:11"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23740:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23725:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23725:18:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23749:4:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23755:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23745:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23745:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23718:6:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23718:48:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23718:48:11"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23775:84:11",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "23845:6:11"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23854:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23783:61:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23783:76:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23775:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23374:9:11",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "23386:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "23394:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23402:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23410:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23421:4:11",
														"type": ""
													}
												],
												"src": "23226:640:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23934:79:11",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23944:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "23959:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23953:5:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23953:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "23944:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "24001:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "23975:25:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "23975:32:11"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23975:32:11"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "23912:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "23920:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "23928:5:11",
														"type": ""
													}
												],
												"src": "23872:141:11"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24095:273:11",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24141:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "24143:77:11"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24143:79:11"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24143:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "24116:7:11"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24125:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "24112:3:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24112:23:11"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24137:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "24108:3:11"
																},
																"nodeType": "YulFunctionCall",
																"src": "24108:32:11"
															},
															"nodeType": "YulIf",
															"src": "24105:119:11"
														},
														{
															"nodeType": "YulBlock",
															"src": "24234:127:11",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "24249:15:11",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24263:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "24253:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "24278:73:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "24323:9:11"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "24334:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "24319:3:11"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "24319:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "24343:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "24288:30:11"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24288:63:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "24278:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24065:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "24076:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24088:6:11",
														"type": ""
													}
												],
												"src": "24019:349:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approval to current owne\")\n\n        mstore(add(memPtr, 32), \"r\")\n\n    }\n\n    function abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve caller is not to\")\n\n        mstore(add(memPtr, 32), \"ken owner or approved for all\")\n\n    }\n\n    function abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: caller is not token owne\")\n\n        mstore(add(memPtr, 32), \"r or approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 45)\n        store_literal_in_memory_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: invalid token ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: address zero is not a va\")\n\n        mstore(add(memPtr, 32), \"lid owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer from incorrect \")\n\n        mstore(add(memPtr, 32), \"owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: approve to caller\")\n\n    }\n\n    function abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC721: transfer to non ERC721Re\")\n\n        mstore(add(memPtr, 32), \"ceiver implementer\")\n\n    }\n\n    function abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636352211e1161008c578063a22cb46511610066578063a22cb46514610224578063b88d4fde14610240578063c87b56dd1461025c578063e985e9c51461028c576100cf565b80636352211e146101a657806370a08231146101d657806395d89b4114610206576100cf565b806301ffc9a7146100d457806306fdde0314610104578063081812fc14610122578063095ea7b31461015257806323b872dd1461016e57806342842e0e1461018a575b600080fd5b6100ee60048036038101906100e9919061136a565b6102bc565b6040516100fb91906113b2565b60405180910390f35b61010c61039e565b604051610119919061145d565b60405180910390f35b61013c600480360381019061013791906114b5565b610430565b6040516101499190611523565b60405180910390f35b61016c6004803603810190610167919061156a565b610476565b005b610188600480360381019061018391906115aa565b61058d565b005b6101a4600480360381019061019f91906115aa565b6105ed565b005b6101c060048036038101906101bb91906114b5565b61060d565b6040516101cd9190611523565b60405180910390f35b6101f060048036038101906101eb91906115fd565b610693565b6040516101fd9190611639565b60405180910390f35b61020e610741565b60405161021b919061145d565b60405180910390f35b61023e60048036038101906102399190611680565b6107d3565b005b61025a600480360381019061025591906117f5565b6107e9565b005b610276600480360381019061027191906114b5565b61084b565b604051610283919061145d565b60405180910390f35b6102a660048036038101906102a19190611878565b6108b3565b6040516102b391906113b2565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061038757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103975750610396826108cb565b5b9050919050565b6060600080546103ad906118e7565b80601f01602080910402602001604051908101604052809291908181526020018280546103d9906118e7565b80156104265780601f106103fb57610100808354040283529160200191610426565b820191906000526020600020905b81548152906001019060200180831161040957829003601f168201915b5050505050905090565b600061043b82610935565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006104818261060d565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104f1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e89061198a565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610510610980565b73ffffffffffffffffffffffffffffffffffffffff16148061053f575061053e81610539610980565b6108b3565b5b61057e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057590611a1c565b60405180910390fd5b6105888383610988565b505050565b61059e610598610980565b82610996565b6105dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d490611aae565b60405180910390fd5b6105e8838383610a2b565b505050565b610608838383604051806020016040528060008152506107e9565b505050565b60008061061983610ce6565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361068a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161068190611b1a565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610703576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106fa90611bac565b60405180910390fd5b6000600390506000838260405160200161071e929190611bcc565b604051602081830303815290604052805190602001209050805492505050919050565b606060018054610750906118e7565b80601f016020809104026020016040519081016040528092919081815260200182805461077c906118e7565b80156107c95780601f1061079e576101008083540402835291602001916107c9565b820191906000526020600020905b8154815290600101906020018083116107ac57829003601f168201915b5050505050905090565b6107e56107de610980565b8383610d25565b5050565b6107fa6107f4610980565b83610996565b610839576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083090611aae565b60405180910390fd5b61084584848484610da3565b50505050565b606061085682610935565b6000610860610dff565b9050600081511161088057604051806020016040528060008152506108ab565b8061088a84610e16565b60405160200161089b929190611c31565b6040516020818303038152906040525b915050919050565b60008260005281602052604060002054905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b61093e81610ee4565b61097d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161097490611b1a565b60405180910390fd5b50565b600033905090565b6109928183610f25565b5050565b6000806109a28361060d565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806109e457506109e381856108b3565b5b80610a2257508373ffffffffffffffffffffffffffffffffffffffff16610a0a84610430565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610a4b8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610aa1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9890611cc7565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610b10576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b0790611d59565b60405180910390fd5b610b1d8383836001610f3b565b8273ffffffffffffffffffffffffffffffffffffffff16610b3d8261060d565b73ffffffffffffffffffffffffffffffffffffffff1614610b93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b8a90611cc7565b60405180910390fd5b6004600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055610c1c83610c17600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546001610f41565b610f57565b610c6f83610c6a600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546001610f6d565b610f57565b610c798183610f7a565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610ce18383836001610f90565b505050565b6000806002905060008382604051602001610d02929190611d79565b604051602081830303815290604052805190602001209050805492505050919050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d93576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d8a90611dee565b60405180910390fd5b610d9e838383610f96565b505050565b610dae848484610a2b565b610dba84848484611001565b610df9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610df090611e80565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606060006001610e2584611188565b01905060008167ffffffffffffffff811115610e4457610e436116ca565b5b6040519080825280601f01601f191660200182016040528015610e765781602001600182028036833780820191505090505b509050600082602001820190505b600115610ed9578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8581610ecd57610ecc611ea0565b5b04945060008503610e84575b819350505050919050565b60008073ffffffffffffffffffffffffffffffffffffffff16610f0683610ce6565b73ffffffffffffffffffffffffffffffffffffffff1614159050919050565b8160005260026020526040600020818155505050565b50505050565b600082821015610f515781830390505b92915050565b8160005260036020526040600020818155505050565b6000818301905092915050565b8160005260026020526040600020818155505050565b50505050565b60006005905060008482604051602001610fb1929190611bcc565b60405160208183030381529060405280519060200120905060008482604051602001610fde929190611ee8565b604051602081830303815290604052805190602001209050838155505050505050565b60006110228473ffffffffffffffffffffffffffffffffffffffff166112db565b1561117b578373ffffffffffffffffffffffffffffffffffffffff1663150b7a0261104b610980565b8786866040518563ffffffff1660e01b815260040161106d9493929190611f66565b6020604051808303816000875af19250505080156110a957506040513d601f19601f820116820180604052508101906110a69190611fc7565b60015b61112b573d80600081146110d9576040519150601f19603f3d011682016040523d82523d6000602084013e6110de565b606091505b506000815103611123576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161111a90611e80565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611180565b600190505b949350505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106111e6577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816111dc576111db611ea0565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611223576d04ee2d6d415b85acef8100000000838161121957611218611ea0565b5b0492506020810190505b662386f26fc10000831061125257662386f26fc10000838161124857611247611ea0565b5b0492506010810190505b6305f5e100831061127b576305f5e100838161127157611270611ea0565b5b0492506008810190505b61271083106112a057612710838161129657611295611ea0565b5b0492506004810190505b606483106112c357606483816112b9576112b8611ea0565b5b0492506002810190505b600a83106112d2576001810190505b80915050919050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61134781611312565b811461135257600080fd5b50565b6000813590506113648161133e565b92915050565b6000602082840312156113805761137f611308565b5b600061138e84828501611355565b91505092915050565b60008115159050919050565b6113ac81611397565b82525050565b60006020820190506113c760008301846113a3565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156114075780820151818401526020810190506113ec565b60008484015250505050565b6000601f19601f8301169050919050565b600061142f826113cd565b61143981856113d8565b93506114498185602086016113e9565b61145281611413565b840191505092915050565b600060208201905081810360008301526114778184611424565b905092915050565b6000819050919050565b6114928161147f565b811461149d57600080fd5b50565b6000813590506114af81611489565b92915050565b6000602082840312156114cb576114ca611308565b5b60006114d9848285016114a0565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061150d826114e2565b9050919050565b61151d81611502565b82525050565b60006020820190506115386000830184611514565b92915050565b61154781611502565b811461155257600080fd5b50565b6000813590506115648161153e565b92915050565b6000806040838503121561158157611580611308565b5b600061158f85828601611555565b92505060206115a0858286016114a0565b9150509250929050565b6000806000606084860312156115c3576115c2611308565b5b60006115d186828701611555565b93505060206115e286828701611555565b92505060406115f3868287016114a0565b9150509250925092565b60006020828403121561161357611612611308565b5b600061162184828501611555565b91505092915050565b6116338161147f565b82525050565b600060208201905061164e600083018461162a565b92915050565b61165d81611397565b811461166857600080fd5b50565b60008135905061167a81611654565b92915050565b6000806040838503121561169757611696611308565b5b60006116a585828601611555565b92505060206116b68582860161166b565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61170282611413565b810181811067ffffffffffffffff82111715611721576117206116ca565b5b80604052505050565b60006117346112fe565b905061174082826116f9565b919050565b600067ffffffffffffffff8211156117605761175f6116ca565b5b61176982611413565b9050602081019050919050565b82818337600083830152505050565b600061179861179384611745565b61172a565b9050828152602081018484840111156117b4576117b36116c5565b5b6117bf848285611776565b509392505050565b600082601f8301126117dc576117db6116c0565b5b81356117ec848260208601611785565b91505092915050565b6000806000806080858703121561180f5761180e611308565b5b600061181d87828801611555565b945050602061182e87828801611555565b935050604061183f878288016114a0565b925050606085013567ffffffffffffffff8111156118605761185f61130d565b5b61186c878288016117c7565b91505092959194509250565b6000806040838503121561188f5761188e611308565b5b600061189d85828601611555565b92505060206118ae85828601611555565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806118ff57607f821691505b602082108103611912576119116118b8565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006119746021836113d8565b915061197f82611918565b604082019050919050565b600060208201905081810360008301526119a381611967565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000602082015250565b6000611a06603d836113d8565b9150611a11826119aa565b604082019050919050565b60006020820190508181036000830152611a35816119f9565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206f7220617070726f76656400000000000000000000000000000000000000602082015250565b6000611a98602d836113d8565b9150611aa382611a3c565b604082019050919050565b60006020820190508181036000830152611ac781611a8b565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611b046018836113d8565b9150611b0f82611ace565b602082019050919050565b60006020820190508181036000830152611b3381611af7565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611b966029836113d8565b9150611ba182611b3a565b604082019050919050565b60006020820190508181036000830152611bc581611b89565b9050919050565b6000604082019050611be16000830185611514565b611bee602083018461162a565b9392505050565b600081905092915050565b6000611c0b826113cd565b611c158185611bf5565b9350611c258185602086016113e9565b80840191505092915050565b6000611c3d8285611c00565b9150611c498284611c00565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611cb16025836113d8565b9150611cbc82611c55565b604082019050919050565b60006020820190508181036000830152611ce081611ca4565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611d436024836113d8565b9150611d4e82611ce7565b604082019050919050565b60006020820190508181036000830152611d7281611d36565b9050919050565b6000604082019050611d8e600083018561162a565b611d9b602083018461162a565b9392505050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611dd86019836113d8565b9150611de382611da2565b602082019050919050565b60006020820190508181036000830152611e0781611dcb565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611e6a6032836113d8565b9150611e7582611e0e565b604082019050919050565b60006020820190508181036000830152611e9981611e5d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000819050919050565b611ee281611ecf565b82525050565b6000604082019050611efd6000830185611514565b611f0a6020830184611ed9565b9392505050565b600081519050919050565b600082825260208201905092915050565b6000611f3882611f11565b611f428185611f1c565b9350611f528185602086016113e9565b611f5b81611413565b840191505092915050565b6000608082019050611f7b6000830187611514565b611f886020830186611514565b611f95604083018561162a565b8181036060830152611fa78184611f2d565b905095945050505050565b600081519050611fc18161133e565b92915050565b600060208284031215611fdd57611fdc611308565b5b6000611feb84828501611fb2565b9150509291505056fea2646970667358221220f87ba3a52aca5651cfc567e42277dceeb6017fd27104a71cf6f7c4ca66f1f19864736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x224 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x240 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x28C JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x206 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x152 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x18A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE9 SWAP2 SWAP1 PUSH2 0x136A JUMP JUMPDEST PUSH2 0x2BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x13B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x39E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x145D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH2 0x430 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x149 SWAP2 SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x156A JUMP JUMPDEST PUSH2 0x476 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x188 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x183 SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x58D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x15AA JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH2 0x60D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1523 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EB SWAP2 SWAP1 PUSH2 0x15FD JUMP JUMPDEST PUSH2 0x693 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FD SWAP2 SWAP1 PUSH2 0x1639 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20E PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21B SWAP2 SWAP1 PUSH2 0x145D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x239 SWAP2 SWAP1 PUSH2 0x1680 JUMP JUMPDEST PUSH2 0x7D3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x255 SWAP2 SWAP1 PUSH2 0x17F5 JUMP JUMPDEST PUSH2 0x7E9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x14B5 JUMP JUMPDEST PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x145D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1878 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B3 SWAP2 SWAP1 PUSH2 0x13B2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x387 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x397 JUMPI POP PUSH2 0x396 DUP3 PUSH2 0x8CB JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x3AD SWAP1 PUSH2 0x18E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D9 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x426 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x426 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x409 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x43B DUP3 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x481 DUP3 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x4F1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4E8 SWAP1 PUSH2 0x198A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x510 PUSH2 0x980 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x53F JUMPI POP PUSH2 0x53E DUP2 PUSH2 0x539 PUSH2 0x980 JUMP JUMPDEST PUSH2 0x8B3 JUMP JUMPDEST JUMPDEST PUSH2 0x57E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x575 SWAP1 PUSH2 0x1A1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x588 DUP4 DUP4 PUSH2 0x988 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x59E PUSH2 0x598 PUSH2 0x980 JUMP JUMPDEST DUP3 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x5DD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D4 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E8 DUP4 DUP4 DUP4 PUSH2 0xA2B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x608 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x7E9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x619 DUP4 PUSH2 0xCE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x68A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x681 SWAP1 PUSH2 0x1B1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6FA SWAP1 PUSH2 0x1BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x3 SWAP1 POP PUSH1 0x0 DUP4 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x71E SWAP3 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 SLOAD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x750 SWAP1 PUSH2 0x18E7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x77C SWAP1 PUSH2 0x18E7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x7C9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x79E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x7C9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x7AC JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x7E5 PUSH2 0x7DE PUSH2 0x980 JUMP JUMPDEST DUP4 DUP4 PUSH2 0xD25 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x7FA PUSH2 0x7F4 PUSH2 0x980 JUMP JUMPDEST DUP4 PUSH2 0x996 JUMP JUMPDEST PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x830 SWAP1 PUSH2 0x1AAE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x845 DUP5 DUP5 DUP5 DUP5 PUSH2 0xDA3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x856 DUP3 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x860 PUSH2 0xDFF JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x880 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x8AB JUMP JUMPDEST DUP1 PUSH2 0x88A DUP5 PUSH2 0xE16 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x89B SWAP3 SWAP2 SWAP1 PUSH2 0x1C31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 MSTORE DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x93E DUP2 PUSH2 0xEE4 JUMP JUMPDEST PUSH2 0x97D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x974 SWAP1 PUSH2 0x1B1A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x992 DUP2 DUP4 PUSH2 0xF25 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x9A2 DUP4 PUSH2 0x60D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x9E4 JUMPI POP PUSH2 0x9E3 DUP2 DUP6 PUSH2 0x8B3 JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0xA22 JUMPI POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA0A DUP5 PUSH2 0x430 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA4B DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAA1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA98 SWAP1 PUSH2 0x1CC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB10 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB07 SWAP1 PUSH2 0x1D59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1D DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF3B JUMP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB3D DUP3 PUSH2 0x60D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xB93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB8A SWAP1 PUSH2 0x1CC7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0xC1C DUP4 PUSH2 0xC17 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH2 0xF41 JUMP JUMPDEST PUSH2 0xF57 JUMP JUMPDEST PUSH2 0xC6F DUP4 PUSH2 0xC6A PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x1 PUSH2 0xF6D JUMP JUMPDEST PUSH2 0xF57 JUMP JUMPDEST PUSH2 0xC79 DUP2 DUP4 PUSH2 0xF7A JUMP JUMPDEST DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xCE1 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xF90 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 SWAP1 POP PUSH1 0x0 DUP4 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD02 SWAP3 SWAP2 SWAP1 PUSH2 0x1D79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP1 SLOAD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD93 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8A SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD9E DUP4 DUP4 DUP4 PUSH2 0xF96 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xDAE DUP5 DUP5 DUP5 PUSH2 0xA2B JUMP JUMPDEST PUSH2 0xDBA DUP5 DUP5 DUP5 DUP5 PUSH2 0x1001 JUMP JUMPDEST PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDF0 SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0xE25 DUP5 PUSH2 0x1188 JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE44 JUMPI PUSH2 0xE43 PUSH2 0x16CA JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE76 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0xED9 JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0xECD JUMPI PUSH2 0xECC PUSH2 0x1EA0 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0xE84 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF06 DUP4 PUSH2 0xCE6 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SSTORE POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xF51 JUMPI DUP2 DUP4 SUB SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 PUSH1 0x0 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SSTORE POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 SWAP1 POP PUSH1 0x0 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFB1 SWAP3 SWAP2 SWAP1 PUSH2 0x1BCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 DUP5 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFDE SWAP3 SWAP2 SWAP1 PUSH2 0x1EE8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP DUP4 DUP2 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1022 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12DB JUMP JUMPDEST ISZERO PUSH2 0x117B JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x104B PUSH2 0x980 JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x106D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1F66 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x10A9 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10A6 SWAP2 SWAP1 PUSH2 0x1FC7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x112B JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10D9 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10DE JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1123 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x111A SWAP1 PUSH2 0x1E80 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP PUSH2 0x1180 JUMP JUMPDEST PUSH1 0x1 SWAP1 POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x11E6 JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x11DC JUMPI PUSH2 0x11DB PUSH2 0x1EA0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1223 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x1219 JUMPI PUSH2 0x1218 PUSH2 0x1EA0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1252 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x1248 JUMPI PUSH2 0x1247 PUSH2 0x1EA0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x127B JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1271 JUMPI PUSH2 0x1270 PUSH2 0x1EA0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x12A0 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x1296 JUMPI PUSH2 0x1295 PUSH2 0x1EA0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x12C3 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x12B9 JUMPI PUSH2 0x12B8 PUSH2 0x1EA0 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x12D2 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1347 DUP2 PUSH2 0x1312 JUMP JUMPDEST DUP2 EQ PUSH2 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1364 DUP2 PUSH2 0x133E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1380 JUMPI PUSH2 0x137F PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x138E DUP5 DUP3 DUP6 ADD PUSH2 0x1355 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13AC DUP2 PUSH2 0x1397 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13C7 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x13A3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1407 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x13EC JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x142F DUP3 PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x1439 DUP2 DUP6 PUSH2 0x13D8 JUMP JUMPDEST SWAP4 POP PUSH2 0x1449 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13E9 JUMP JUMPDEST PUSH2 0x1452 DUP2 PUSH2 0x1413 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1477 DUP2 DUP5 PUSH2 0x1424 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1492 DUP2 PUSH2 0x147F JUMP JUMPDEST DUP2 EQ PUSH2 0x149D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14AF DUP2 PUSH2 0x1489 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14CB JUMPI PUSH2 0x14CA PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x14D9 DUP5 DUP3 DUP6 ADD PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x150D DUP3 PUSH2 0x14E2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x151D DUP2 PUSH2 0x1502 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1538 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1514 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1547 DUP2 PUSH2 0x1502 JUMP JUMPDEST DUP2 EQ PUSH2 0x1552 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1564 DUP2 PUSH2 0x153E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1581 JUMPI PUSH2 0x1580 PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x158F DUP6 DUP3 DUP7 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15A0 DUP6 DUP3 DUP7 ADD PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15C3 JUMPI PUSH2 0x15C2 PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15D1 DUP7 DUP3 DUP8 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x15E2 DUP7 DUP3 DUP8 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x15F3 DUP7 DUP3 DUP8 ADD PUSH2 0x14A0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1613 JUMPI PUSH2 0x1612 PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1621 DUP5 DUP3 DUP6 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1633 DUP2 PUSH2 0x147F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x164E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x162A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x165D DUP2 PUSH2 0x1397 JUMP JUMPDEST DUP2 EQ PUSH2 0x1668 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x167A DUP2 PUSH2 0x1654 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1697 JUMPI PUSH2 0x1696 PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x16A5 DUP6 DUP3 DUP7 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x16B6 DUP6 DUP3 DUP7 ADD PUSH2 0x166B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1702 DUP3 PUSH2 0x1413 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1721 JUMPI PUSH2 0x1720 PUSH2 0x16CA JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1734 PUSH2 0x12FE JUMP JUMPDEST SWAP1 POP PUSH2 0x1740 DUP3 DUP3 PUSH2 0x16F9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1760 JUMPI PUSH2 0x175F PUSH2 0x16CA JUMP JUMPDEST JUMPDEST PUSH2 0x1769 DUP3 PUSH2 0x1413 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1798 PUSH2 0x1793 DUP5 PUSH2 0x1745 JUMP JUMPDEST PUSH2 0x172A JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17B4 JUMPI PUSH2 0x17B3 PUSH2 0x16C5 JUMP JUMPDEST JUMPDEST PUSH2 0x17BF DUP5 DUP3 DUP6 PUSH2 0x1776 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x17DC JUMPI PUSH2 0x17DB PUSH2 0x16C0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17EC DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1785 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x180F JUMPI PUSH2 0x180E PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x181D DUP8 DUP3 DUP9 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x182E DUP8 DUP3 DUP9 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x183F DUP8 DUP3 DUP9 ADD PUSH2 0x14A0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1860 JUMPI PUSH2 0x185F PUSH2 0x130D JUMP JUMPDEST JUMPDEST PUSH2 0x186C DUP8 DUP3 DUP9 ADD PUSH2 0x17C7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x188F JUMPI PUSH2 0x188E PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x189D DUP6 DUP3 DUP7 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x18AE DUP6 DUP3 DUP7 ADD PUSH2 0x1555 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x18FF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1912 JUMPI PUSH2 0x1911 PUSH2 0x18B8 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7200000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1974 PUSH1 0x21 DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x197F DUP3 PUSH2 0x1918 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x19A3 DUP2 PUSH2 0x1967 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A06 PUSH1 0x3D DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A11 DUP3 PUSH2 0x19AA JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1A35 DUP2 PUSH2 0x19F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x72206F7220617070726F76656400000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A98 PUSH1 0x2D DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AA3 DUP3 PUSH2 0x1A3C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1AC7 DUP2 PUSH2 0x1A8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A20696E76616C696420746F6B656E2049440000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B04 PUSH1 0x18 DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0F DUP3 PUSH2 0x1ACE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B33 DUP2 PUSH2 0x1AF7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A2061646472657373207A65726F206973206E6F742061207661 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6C6964206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B96 PUSH1 0x29 DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BA1 DUP3 PUSH2 0x1B3A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1BC5 DUP2 PUSH2 0x1B89 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1BE1 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x1BEE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x162A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C0B DUP3 PUSH2 0x13CD JUMP JUMPDEST PUSH2 0x1C15 DUP2 DUP6 PUSH2 0x1BF5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1C25 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13E9 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1C3D DUP3 DUP6 PUSH2 0x1C00 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C49 DUP3 DUP5 PUSH2 0x1C00 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E736665722066726F6D20696E636F727265637420 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6F776E6572000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1CB1 PUSH1 0x25 DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CBC DUP3 PUSH2 0x1C55 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1CE0 DUP2 PUSH2 0x1CA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D43 PUSH1 0x24 DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D4E DUP3 PUSH2 0x1CE7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1D72 DUP2 PUSH2 0x1D36 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1D8E PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x162A JUMP JUMPDEST PUSH2 0x1D9B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x162A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD8 PUSH1 0x19 DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DE3 DUP3 PUSH2 0x1DA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E07 DUP2 PUSH2 0x1DCB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x63656976657220696D706C656D656E7465720000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E6A PUSH1 0x32 DUP4 PUSH2 0x13D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E75 DUP3 PUSH2 0x1E0E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1E99 DUP2 PUSH2 0x1E5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EE2 DUP2 PUSH2 0x1ECF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1EFD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x1F0A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1ED9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F38 DUP3 PUSH2 0x1F11 JUMP JUMPDEST PUSH2 0x1F42 DUP2 DUP6 PUSH2 0x1F1C JUMP JUMPDEST SWAP4 POP PUSH2 0x1F52 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x13E9 JUMP JUMPDEST PUSH2 0x1F5B DUP2 PUSH2 0x1413 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1F7B PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x1F88 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1514 JUMP JUMPDEST PUSH2 0x1F95 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x162A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x1FA7 DUP2 DUP5 PUSH2 0x1F2D JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x1FC1 DUP2 PUSH2 0x133E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FDD JUMPI PUSH2 0x1FDC PUSH2 0x1308 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1FEB DUP5 DUP3 DUP6 ADD PUSH2 0x1FB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF8 PUSH28 0xA3A52ACA5651CFC567E42277DCEEB6017FD27104A71CF6F7C4CA66F1 CALL SWAP9 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "628:20291:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1570:300;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2928:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4392:167;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3925:406;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5247:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5609:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2647:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1929:661;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3090:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4626:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5824:276;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3258;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4845:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1570:300;1672:4;1722:25;1707:40;;;:11;:40;;;;:104;;;;1778:33;1763:48;;;:11;:48;;;;1707:104;:156;;;;1827:36;1851:11;1827:23;:36::i;:::-;1707:156;1688:175;;1570:300;;;:::o;2928:98::-;2982:13;3014:5;3007:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2928:98;:::o;4392:167::-;4468:7;4487:23;4502:7;4487:14;:23::i;:::-;4528:15;:24;4544:7;4528:24;;;;;;;;;;;;;;;;;;;;;4521:31;;4392:167;;;:::o;3925:406::-;4005:13;4021:23;4036:7;4021:14;:23::i;:::-;4005:39;;4068:5;4062:11;;:2;:11;;;4054:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;4159:5;4143:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;4168:37;4185:5;4192:12;:10;:12::i;:::-;4168:16;:37::i;:::-;4143:62;4122:170;;;;;;;;;;;;:::i;:::-;;;;;;;;;4303:21;4312:2;4316:7;4303:8;:21::i;:::-;3995:336;3925:406;;:::o;5247:296::-;5406:41;5425:12;:10;:12::i;:::-;5439:7;5406:18;:41::i;:::-;5398:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;5508:28;5518:4;5524:2;5528:7;5508:9;:28::i;:::-;5247:296;;;:::o;5609:149::-;5712:39;5729:4;5735:2;5739:7;5712:39;;;;;;;;;;;;:16;:39::i;:::-;5609:149;;;:::o;2647:219::-;2719:7;2738:13;2754:17;2763:7;2754:8;:17::i;:::-;2738:33;;2806:1;2789:19;;:5;:19;;;2781:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;2854:5;2847:12;;;2647:219;;;:::o;1929:661::-;2001:11;2049:1;2032:19;;:5;:19;;;2024:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2112:9;2222:14;2214:22;;2274:16;2314:5;2321:4;2303:23;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2293:34;;;;;;2274:53;;2422:8;2416:15;2409:22;;2382:145;;1929:661;;;:::o;3090:102::-;3146:13;3178:7;3171:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3090:102;:::o;4626:153::-;4720:52;4739:12;:10;:12::i;:::-;4753:8;4763;4720:18;:52::i;:::-;4626:153;;:::o;5824:276::-;5954:41;5973:12;:10;:12::i;:::-;5987:7;5954:18;:41::i;:::-;5946:99;;;;;;;;;;;;:::i;:::-;;;;;;;;;6055:38;6069:4;6075:2;6079:7;6088:4;6055:13;:38::i;:::-;5824:276;;;;:::o;3258:::-;3331:13;3356:23;3371:7;3356:14;:23::i;:::-;3390:21;3414:10;:8;:10::i;:::-;3390:34;;3465:1;3447:7;3441:21;:25;:86;;;;;;;;;;;;;;;;;3493:7;3502:18;:7;:16;:18::i;:::-;3476:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3441:86;3434:93;;;3258:276;;;:::o;4845:340::-;4942:19;5008:5;5002:4;4995:19;5040:8;5034:4;5027:22;5102:4;5096;5086:21;5080:28;5062:46;;4845:340;;;;:::o;829:155:7:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;14636:133:0:-;14717:16;14725:7;14717;:16::i;:::-;14709:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;14636:133;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;13845:225:0:-;13959:41;13989:7;13997:2;13959:29;:41::i;:::-;13845:225;;:::o;8483:261::-;8576:4;8592:13;8608:23;8623:7;8608:14;:23::i;:::-;8592:39;;8660:5;8649:16;;:7;:16;;;:52;;;;8669:32;8686:5;8693:7;8669:16;:32::i;:::-;8649:52;:87;;;;8729:7;8705:31;;:20;8717:7;8705:11;:20::i;:::-;:31;;;8649:87;8641:96;;;8483:261;;;;:::o;12336:1397::-;12460:4;12433:31;;:23;12448:7;12433:14;:23::i;:::-;:31;;;12425:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;12538:1;12524:16;;:2;:16;;;12516:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;12592:42;12613:4;12619:2;12623:7;12632:1;12592:20;:42::i;:::-;12761:4;12734:31;;:23;12749:7;12734:14;:23::i;:::-;:31;;;12726:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;12876:15;:24;12892:7;12876:24;;;;;;;;;;;;12869:31;;;;;;;;;;;13380:58;13404:4;13410:27;13418:9;:15;13428:4;13418:15;;;;;;;;;;;;;;;;13435:1;13410:7;:27::i;:::-;13380:23;:58::i;:::-;13485:56;13509:4;13515:25;13523:9;:13;13533:2;13523:13;;;;;;;;;;;;;;;;13538:1;13515:7;:25::i;:::-;13485:23;:56::i;:::-;13598:34;13620:7;13629:2;13598:21;:34::i;:::-;13666:7;13662:2;13647:27;;13656:4;13647:27;;;;;;;;;;;;13685:41;13705:4;13711:2;13715:7;13724:1;13685:19;:41::i;:::-;12336:1397;;;:::o;7337:559::-;7403:11;7431:9;7527:12;7519:20;;7577:16;7617:7;7626:4;7606:25;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7596:36;;;;;;7577:55;;7727:8;7721:15;7714:22;;7687:145;;7337:559;;;:::o;14206:346::-;14326:8;14317:17;;:5;:17;;;14309:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;14432;14463:5;14469:8;14478;14432:30;:55::i;:::-;14206:346;;;:::o;6961:267::-;7073:28;7083:4;7089:2;7093:7;7073:9;:28::i;:::-;7119:47;7142:4;7148:2;7152:7;7161:4;7119:22;:47::i;:::-;7111:110;;;;;;;;;;;;:::i;:::-;;;;;;;;;6961:267;;;;:::o;3776:92::-;3827:13;3852:9;;;;;;;;;;;;;;3776:92;:::o;447:696:6:-;503:13;552:14;589:1;569:17;580:5;569:10;:17::i;:::-;:21;552:38;;604:20;638:6;627:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;604:41;;659:11;785:6;781:2;777:15;769:6;765:28;758:35;;820:280;827:4;820:280;;;851:5;;;;;;;;990:8;985:2;978:5;974:14;969:30;964:3;956:44;1044:2;1035:11;;;;;;:::i;:::-;;;;;1077:1;1068:5;:10;820:280;1064:21;820:280;1120:6;1113:13;;;;;447:696;;;:::o;8199:126:0:-;8264:4;8316:1;8287:31;;:17;8296:7;8287:8;:17::i;:::-;:31;;;;8280:38;;8199:126;;;:::o;19533:553::-;19678:7;19675:1;19668:18;19767:12;19763:2;19756:24;19894:2;19891:1;19881:16;19991:5;19985:4;19978:19;19650:421;19533:553;;:::o;16868:116::-;;;;;:::o;20746:171::-;20801:6;20864:1;20862;20859:7;20856:40;;;20893:1;20891;20887:8;20884:11;;20856:40;20746:171;;;;:::o;18417:548::-;18555:5;18552:1;18545:16;18642:14;18638:2;18631:26;18771:2;18768:1;18758:16;18868:7;18862:4;18855:21;18527:423;18417:548;;:::o;20588:149::-;20643:6;20710:1;20708;20704:8;20701:11;;20588:149;;;;:::o;18976:545::-;19113:7;19110:1;19103:18;19202:12;19198:2;19191:24;19329:2;19326:1;19316:16;19426:5;19420:4;19413:19;19085:421;18976:545;;:::o;17690:115::-;;;;;:::o;20092:490::-;20195:12;20248:23;20240:31;;20291:29;20344:6;20352:4;20333:24;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20323:35;;;;;;20291:67;;20420:29;20473:6;20481:21;20462:41;;;;;;;;;:::i;:::-;;;;;;;;;;;;;20452:52;;;;;;20420:84;;20568:1;20545:21;20538:32;20524:56;;;20092:490;;;:::o;15321:831::-;15470:4;15490:15;:2;:13;;;:15::i;:::-;15486:660;;;15541:2;15525:36;;;15562:12;:10;:12::i;:::-;15576:4;15582:7;15591:4;15525:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;15521:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15780:1;15763:6;:13;:18;15759:321;;15805:60;;;;;;;;;;:::i;:::-;;;;;;;;15759:321;16032:6;16026:13;16017:6;16013:2;16009:15;16002:38;15521:573;15656:41;;;15646:51;;;:6;:51;;;;15639:58;;;;;15486:660;16131:4;16124:11;;15321:831;;;;;;;:::o;10139:916:9:-;10192:7;10211:14;10228:1;10211:18;;10276:8;10267:5;:17;10263:103;;10313:8;10304:17;;;;;;:::i;:::-;;;;;10349:2;10339:12;;;;10263:103;10392:8;10383:5;:17;10379:103;;10429:8;10420:17;;;;;;:::i;:::-;;;;;10465:2;10455:12;;;;10379:103;10508:8;10499:5;:17;10495:103;;10545:8;10536:17;;;;;;:::i;:::-;;;;;10581:2;10571:12;;;;10495:103;10624:7;10615:5;:16;10611:100;;10660:7;10651:16;;;;;;:::i;:::-;;;;;10695:1;10685:11;;;;10611:100;10737:7;10728:5;:16;10724:100;;10773:7;10764:16;;;;;;:::i;:::-;;;;;10808:1;10798:11;;;;10724:100;10850:7;10841:5;:16;10837:100;;10886:7;10877:16;;;;;;:::i;:::-;;;;;10921:1;10911:11;;;;10837:100;10963:7;10954:5;:16;10950:66;;11000:1;10990:11;;;;10950:66;11042:6;11035:13;;;10139:916;;;:::o;1412:320:4:-;1472:4;1724:1;1702:7;:19;;;:23;1695:30;;1412:320;;;:::o;7:75:11:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:619::-;4967:6;4975;4983;5032:2;5020:9;5011:7;5007:23;5003:32;5000:119;;;5038:79;;:::i;:::-;5000:119;5158:1;5183:53;5228:7;5219:6;5208:9;5204:22;5183:53;:::i;:::-;5173:63;;5129:117;5285:2;5311:53;5356:7;5347:6;5336:9;5332:22;5311:53;:::i;:::-;5301:63;;5256:118;5413:2;5439:53;5484:7;5475:6;5464:9;5460:22;5439:53;:::i;:::-;5429:63;;5384:118;4890:619;;;;;:::o;5515:329::-;5574:6;5623:2;5611:9;5602:7;5598:23;5594:32;5591:119;;;5629:79;;:::i;:::-;5591:119;5749:1;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5720:117;5515:329;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:220::-;11123:34;11119:1;11111:6;11107:14;11100:58;11192:3;11187:2;11179:6;11175:15;11168:28;10983:220;:::o;11209:366::-;11351:3;11372:67;11436:2;11431:3;11372:67;:::i;:::-;11365:74;;11448:93;11537:3;11448:93;:::i;:::-;11566:2;11561:3;11557:12;11550:19;;11209:366;;;:::o;11581:419::-;11747:4;11785:2;11774:9;11770:18;11762:26;;11834:9;11828:4;11824:20;11820:1;11809:9;11805:17;11798:47;11862:131;11988:4;11862:131;:::i;:::-;11854:139;;11581:419;;;:::o;12006:248::-;12146:34;12142:1;12134:6;12130:14;12123:58;12215:31;12210:2;12202:6;12198:15;12191:56;12006:248;:::o;12260:366::-;12402:3;12423:67;12487:2;12482:3;12423:67;:::i;:::-;12416:74;;12499:93;12588:3;12499:93;:::i;:::-;12617:2;12612:3;12608:12;12601:19;;12260:366;;;:::o;12632:419::-;12798:4;12836:2;12825:9;12821:18;12813:26;;12885:9;12879:4;12875:20;12871:1;12860:9;12856:17;12849:47;12913:131;13039:4;12913:131;:::i;:::-;12905:139;;12632:419;;;:::o;13057:232::-;13197:34;13193:1;13185:6;13181:14;13174:58;13266:15;13261:2;13253:6;13249:15;13242:40;13057:232;:::o;13295:366::-;13437:3;13458:67;13522:2;13517:3;13458:67;:::i;:::-;13451:74;;13534:93;13623:3;13534:93;:::i;:::-;13652:2;13647:3;13643:12;13636:19;;13295:366;;;:::o;13667:419::-;13833:4;13871:2;13860:9;13856:18;13848:26;;13920:9;13914:4;13910:20;13906:1;13895:9;13891:17;13884:47;13948:131;14074:4;13948:131;:::i;:::-;13940:139;;13667:419;;;:::o;14092:174::-;14232:26;14228:1;14220:6;14216:14;14209:50;14092:174;:::o;14272:366::-;14414:3;14435:67;14499:2;14494:3;14435:67;:::i;:::-;14428:74;;14511:93;14600:3;14511:93;:::i;:::-;14629:2;14624:3;14620:12;14613:19;;14272:366;;;:::o;14644:419::-;14810:4;14848:2;14837:9;14833:18;14825:26;;14897:9;14891:4;14887:20;14883:1;14872:9;14868:17;14861:47;14925:131;15051:4;14925:131;:::i;:::-;14917:139;;14644:419;;;:::o;15069:228::-;15209:34;15205:1;15197:6;15193:14;15186:58;15278:11;15273:2;15265:6;15261:15;15254:36;15069:228;:::o;15303:366::-;15445:3;15466:67;15530:2;15525:3;15466:67;:::i;:::-;15459:74;;15542:93;15631:3;15542:93;:::i;:::-;15660:2;15655:3;15651:12;15644:19;;15303:366;;;:::o;15675:419::-;15841:4;15879:2;15868:9;15864:18;15856:26;;15928:9;15922:4;15918:20;15914:1;15903:9;15899:17;15892:47;15956:131;16082:4;15956:131;:::i;:::-;15948:139;;15675:419;;;:::o;16100:332::-;16221:4;16259:2;16248:9;16244:18;16236:26;;16272:71;16340:1;16329:9;16325:17;16316:6;16272:71;:::i;:::-;16353:72;16421:2;16410:9;16406:18;16397:6;16353:72;:::i;:::-;16100:332;;;;;:::o;16438:148::-;16540:11;16577:3;16562:18;;16438:148;;;;:::o;16592:390::-;16698:3;16726:39;16759:5;16726:39;:::i;:::-;16781:89;16863:6;16858:3;16781:89;:::i;:::-;16774:96;;16879:65;16937:6;16932:3;16925:4;16918:5;16914:16;16879:65;:::i;:::-;16969:6;16964:3;16960:16;16953:23;;16702:280;16592:390;;;;:::o;16988:435::-;17168:3;17190:95;17281:3;17272:6;17190:95;:::i;:::-;17183:102;;17302:95;17393:3;17384:6;17302:95;:::i;:::-;17295:102;;17414:3;17407:10;;16988:435;;;;;:::o;17429:224::-;17569:34;17565:1;17557:6;17553:14;17546:58;17638:7;17633:2;17625:6;17621:15;17614:32;17429:224;:::o;17659:366::-;17801:3;17822:67;17886:2;17881:3;17822:67;:::i;:::-;17815:74;;17898:93;17987:3;17898:93;:::i;:::-;18016:2;18011:3;18007:12;18000:19;;17659:366;;;:::o;18031:419::-;18197:4;18235:2;18224:9;18220:18;18212:26;;18284:9;18278:4;18274:20;18270:1;18259:9;18255:17;18248:47;18312:131;18438:4;18312:131;:::i;:::-;18304:139;;18031:419;;;:::o;18456:223::-;18596:34;18592:1;18584:6;18580:14;18573:58;18665:6;18660:2;18652:6;18648:15;18641:31;18456:223;:::o;18685:366::-;18827:3;18848:67;18912:2;18907:3;18848:67;:::i;:::-;18841:74;;18924:93;19013:3;18924:93;:::i;:::-;19042:2;19037:3;19033:12;19026:19;;18685:366;;;:::o;19057:419::-;19223:4;19261:2;19250:9;19246:18;19238:26;;19310:9;19304:4;19300:20;19296:1;19285:9;19281:17;19274:47;19338:131;19464:4;19338:131;:::i;:::-;19330:139;;19057:419;;;:::o;19482:332::-;19603:4;19641:2;19630:9;19626:18;19618:26;;19654:71;19722:1;19711:9;19707:17;19698:6;19654:71;:::i;:::-;19735:72;19803:2;19792:9;19788:18;19779:6;19735:72;:::i;:::-;19482:332;;;;;:::o;19820:175::-;19960:27;19956:1;19948:6;19944:14;19937:51;19820:175;:::o;20001:366::-;20143:3;20164:67;20228:2;20223:3;20164:67;:::i;:::-;20157:74;;20240:93;20329:3;20240:93;:::i;:::-;20358:2;20353:3;20349:12;20342:19;;20001:366;;;:::o;20373:419::-;20539:4;20577:2;20566:9;20562:18;20554:26;;20626:9;20620:4;20616:20;20612:1;20601:9;20597:17;20590:47;20654:131;20780:4;20654:131;:::i;:::-;20646:139;;20373:419;;;:::o;20798:237::-;20938:34;20934:1;20926:6;20922:14;20915:58;21007:20;21002:2;20994:6;20990:15;20983:45;20798:237;:::o;21041:366::-;21183:3;21204:67;21268:2;21263:3;21204:67;:::i;:::-;21197:74;;21280:93;21369:3;21280:93;:::i;:::-;21398:2;21393:3;21389:12;21382:19;;21041:366;;;:::o;21413:419::-;21579:4;21617:2;21606:9;21602:18;21594:26;;21666:9;21660:4;21656:20;21652:1;21641:9;21637:17;21630:47;21694:131;21820:4;21694:131;:::i;:::-;21686:139;;21413:419;;;:::o;21838:180::-;21886:77;21883:1;21876:88;21983:4;21980:1;21973:15;22007:4;22004:1;21997:15;22024:77;22061:7;22090:5;22079:16;;22024:77;;;:::o;22107:118::-;22194:24;22212:5;22194:24;:::i;:::-;22189:3;22182:37;22107:118;;:::o;22231:332::-;22352:4;22390:2;22379:9;22375:18;22367:26;;22403:71;22471:1;22460:9;22456:17;22447:6;22403:71;:::i;:::-;22484:72;22552:2;22541:9;22537:18;22528:6;22484:72;:::i;:::-;22231:332;;;;;:::o;22569:98::-;22620:6;22654:5;22648:12;22638:22;;22569:98;;;:::o;22673:168::-;22756:11;22790:6;22785:3;22778:19;22830:4;22825:3;22821:14;22806:29;;22673:168;;;;:::o;22847:373::-;22933:3;22961:38;22993:5;22961:38;:::i;:::-;23015:70;23078:6;23073:3;23015:70;:::i;:::-;23008:77;;23094:65;23152:6;23147:3;23140:4;23133:5;23129:16;23094:65;:::i;:::-;23184:29;23206:6;23184:29;:::i;:::-;23179:3;23175:39;23168:46;;22937:283;22847:373;;;;:::o;23226:640::-;23421:4;23459:3;23448:9;23444:19;23436:27;;23473:71;23541:1;23530:9;23526:17;23517:6;23473:71;:::i;:::-;23554:72;23622:2;23611:9;23607:18;23598:6;23554:72;:::i;:::-;23636;23704:2;23693:9;23689:18;23680:6;23636:72;:::i;:::-;23755:9;23749:4;23745:20;23740:2;23729:9;23725:18;23718:48;23783:76;23854:4;23845:6;23783:76;:::i;:::-;23775:84;;23226:640;;;;;;;:::o;23872:141::-;23928:5;23959:6;23953:13;23944:22;;23975:32;24001:5;23975:32;:::i;:::-;23872:141;;;;:::o;24019:349::-;24088:6;24137:2;24125:9;24116:7;24112:23;24108:32;24105:119;;;24143:79;;:::i;:::-;24105:119;24263:1;24288:63;24343:7;24334:6;24323:9;24319:22;24288:63;:::i;:::-;24278:73;;24234:127;24019:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1646800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "774",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"__unsafe_increaseBalance(address,uint256)": "infinite",
								"_afterTokenTransfer(address,address,uint256,uint256)": "17",
								"_approve(address,uint256)": "22227",
								"_baseURI()": "infinite",
								"_beforeTokenTransfer(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_checkOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_isApprovedOrOwner(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_ownerOf(uint256)": "infinite",
								"_requireMinted(uint256)": "infinite",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_safeTransfer(address,address,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_transfer(address,address,uint256)": "infinite",
								"safeAdd(uint256,uint256)": "36",
								"safeSub(uint256,uint256)": "62",
								"saveNestedWithOperatorApproval(address,address,bool)": "infinite",
								"saveWithAssemblyBalance(address,uint256)": "22193",
								"saveWithAssemblyOwner(uint256,address)": "22193",
								"saveWithAssemblyTokenApproval(uint256,address)": "22193"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 628,
									"end": 20919,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 628,
									"end": 20919,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 628,
									"end": 20919,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1390,
									"end": 1503,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1464,
									"end": 1469,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1461,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1456,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1456,
									"end": 1469,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1489,
									"end": 1496,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1486,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1479,
									"end": 1496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1479,
									"end": 1496,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1390,
									"end": 1503,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 628,
									"end": 20919,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 628,
									"end": 20919,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 11,
									"value": "51"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 11,
									"value": "58"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "62"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 11,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 11,
									"value": "67"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 11,
									"value": "69"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 11,
									"value": "70"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 11,
									"value": "72"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 11,
									"value": "74"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "11"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 11,
									"value": "77"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 11,
									"value": "76"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 11,
									"value": "79"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 11,
									"value": "78"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 11,
									"value": "82"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 11,
									"value": "81"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 11,
									"value": "83"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 11,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 11,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 11,
									"value": "87"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 11,
									"value": "89"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 11,
									"value": "88"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 11
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 11
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 11,
									"value": "94"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 11,
									"value": "95"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 11,
									"value": "101"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "30"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 11,
									"value": "99"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 11,
									"value": "104"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 11,
									"value": "106"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 11,
									"value": "105"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 11,
									"value": "109"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 11,
									"value": "110"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 11,
									"value": "115"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "112"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 11,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 11,
									"value": "118"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 11,
									"value": "119"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 11,
									"value": "120"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "27"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 11,
									"value": "122"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 11,
									"value": "121"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 11,
									"value": "117"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 11,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "39"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 11,
									"value": "125"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 11,
									"value": "127"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 11,
									"value": "7"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 11,
									"value": "129"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "16"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 11,
									"value": "131"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 11,
									"value": "130"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "25"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 11,
									"value": "132"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 11,
									"value": "133"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 11,
									"value": "136"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "137"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "41"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 11,
									"value": "137"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 11,
									"value": "135"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "26"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 11,
									"value": "138"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 11,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "139"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 11,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 11
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "143"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 11
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 11,
									"value": "143"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 11,
									"value": "142"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 11,
									"value": "134"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 628,
									"end": 20919,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 628,
									"end": 20919,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 628,
									"end": 20919,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 20919,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 628,
									"end": 20919,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 628,
									"end": 20919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 20919,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 628,
									"end": 20919,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 628,
									"end": 20919,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f87ba3a52aca5651cfc567e42277dceeb6017fd27104a71cf6f7c4ca66f1f19864736f6c63430008120033",
									".code": [
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "B88D4FDE"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "C87B56DD"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "81812FC"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 628,
											"end": 20919,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2928,
											"end": 3026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2928,
											"end": 3026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4392,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4392,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4392,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 3925,
											"end": 4331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3925,
											"end": 4331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5247,
											"end": 5543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5247,
											"end": 5543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5609,
											"end": 5758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5609,
											"end": 5758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2647,
											"end": 2866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2647,
											"end": 2866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2647,
											"end": 2866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1929,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 1929,
											"end": 2590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3090,
											"end": 3192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3090,
											"end": 3192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4626,
											"end": 4779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4626,
											"end": 4779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 5824,
											"end": 6100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5824,
											"end": 6100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3258,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3258,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3258,
											"end": 3534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 4845,
											"end": 5185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4845,
											"end": 5185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 4845,
											"end": 5185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1672,
											"end": 1676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1722,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1747,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1778,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1774,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1763,
											"end": 1811,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1707,
											"end": 1811,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1851,
											"end": 1862,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1850,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 1827,
											"end": 1863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 1827,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 1707,
											"end": 1863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1688,
											"end": 1863,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1570,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3014,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3007,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3007,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3007,
											"end": 3019,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 3026,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2928,
											"end": 3026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4468,
											"end": 4475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4487,
											"end": 4510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4502,
											"end": 4509,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4487,
											"end": 4510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4487,
											"end": 4510,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 4487,
											"end": 4510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4544,
											"end": 4551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4528,
											"end": 4552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4521,
											"end": 4552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4521,
											"end": 4552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4392,
											"end": 4559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4005,
											"end": 4018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4021,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4036,
											"end": 4043,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4021,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4021,
											"end": 4044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4021,
											"end": 4044,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4021,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4005,
											"end": 4044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4005,
											"end": 4044,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4068,
											"end": 4073,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4062,
											"end": 4073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4062,
											"end": 4073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4062,
											"end": 4064,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4062,
											"end": 4073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4062,
											"end": 4073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4062,
											"end": 4073,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 4054,
											"end": 4111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 4054,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4159,
											"end": 4164,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4143,
											"end": 4164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4143,
											"end": 4153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4143,
											"end": 4155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4155,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4143,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4164,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4143,
											"end": 4164,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4164,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4205,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4143,
											"end": 4205,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4205,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4185,
											"end": 4190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4192,
											"end": 4204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4192,
											"end": 4202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4192,
											"end": 4204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4192,
											"end": 4204,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 4192,
											"end": 4204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4168,
											"end": 4205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4168,
											"end": 4205,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4168,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4143,
											"end": 4205,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4143,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4122,
											"end": 4292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4122,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4303,
											"end": 4324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4312,
											"end": 4314,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4316,
											"end": 4323,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4303,
											"end": 4311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4303,
											"end": 4324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4303,
											"end": 4324,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 4303,
											"end": 4324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3995,
											"end": 4331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 4331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5406,
											"end": 5447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5425,
											"end": 5437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5425,
											"end": 5435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5425,
											"end": 5437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5425,
											"end": 5437,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 5425,
											"end": 5437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5446,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5406,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5406,
											"end": 5447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5406,
											"end": 5447,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 5406,
											"end": 5447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5398,
											"end": 5497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 5398,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5518,
											"end": 5522,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5524,
											"end": 5526,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5528,
											"end": 5535,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5517,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 5508,
											"end": 5536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5508,
											"end": 5536,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5508,
											"end": 5536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5729,
											"end": 5733,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5735,
											"end": 5737,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5739,
											"end": 5746,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5712,
											"end": 5751,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5751,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5712,
											"end": 5751,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5751,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5712,
											"end": 5751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5712,
											"end": 5751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5751,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5751,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5728,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5712,
											"end": 5751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5712,
											"end": 5751,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5712,
											"end": 5751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5609,
											"end": 5758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2719,
											"end": 2726,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2738,
											"end": 2751,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2763,
											"end": 2770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 2754,
											"end": 2771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2754,
											"end": 2771,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 2754,
											"end": 2771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2738,
											"end": 2771,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2806,
											"end": 2807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2789,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2789,
											"end": 2808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2808,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2789,
											"end": 2808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2789,
											"end": 2808,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2781,
											"end": 2837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2781,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2854,
											"end": 2859,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2859,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2847,
											"end": 2859,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2001,
											"end": 2012,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2049,
											"end": 2050,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2037,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2032,
											"end": 2051,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 2024,
											"end": 2097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 2024,
											"end": 2097,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2112,
											"end": 2121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2236,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2214,
											"end": 2236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2214,
											"end": 2236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2274,
											"end": 2290,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2321,
											"end": 2325,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 2303,
											"end": 2326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2303,
											"end": 2326,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2274,
											"end": 2327,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2422,
											"end": 2430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2416,
											"end": 2431,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2409,
											"end": 2431,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2382,
											"end": 2527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2382,
											"end": 2527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 2590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3146,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3178,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3171,
											"end": 3185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 3171,
											"end": 3185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3171,
											"end": 3185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3090,
											"end": 3192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4720,
											"end": 4772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4739,
											"end": 4751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4739,
											"end": 4749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4739,
											"end": 4751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4739,
											"end": 4751,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 4739,
											"end": 4751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4753,
											"end": 4761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4763,
											"end": 4771,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4720,
											"end": 4738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 4720,
											"end": 4772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4720,
											"end": 4772,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 4720,
											"end": 4772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4626,
											"end": 4779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5954,
											"end": 5995,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5973,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5973,
											"end": 5983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 5973,
											"end": 5985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5973,
											"end": 5985,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5973,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5987,
											"end": 5994,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5954,
											"end": 5972,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 5954,
											"end": 5995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5954,
											"end": 5995,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5954,
											"end": 5995,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5946,
											"end": 6045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 5946,
											"end": 6045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6055,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6069,
											"end": 6073,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6075,
											"end": 6077,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6079,
											"end": 6086,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6088,
											"end": 6092,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6055,
											"end": 6068,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6055,
											"end": 6093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6055,
											"end": 6093,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 6055,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5824,
											"end": 6100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3331,
											"end": 3344,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3356,
											"end": 3379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3371,
											"end": 3378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3356,
											"end": 3370,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 3356,
											"end": 3379,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3356,
											"end": 3379,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 3356,
											"end": 3379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3411,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3414,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3414,
											"end": 3422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3414,
											"end": 3424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3414,
											"end": 3424,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3414,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3390,
											"end": 3424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3465,
											"end": 3466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3454,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3466,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3493,
											"end": 3500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3502,
											"end": 3509,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3502,
											"end": 3520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3502,
											"end": 3520,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3502,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 3476,
											"end": 3521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3476,
											"end": 3521,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3441,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3434,
											"end": 3527,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3258,
											"end": 3534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4942,
											"end": 4961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5013,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5002,
											"end": 5006,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5014,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5040,
											"end": 5048,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5034,
											"end": 5038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5027,
											"end": 5049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5096,
											"end": 5100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5086,
											"end": 5107,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5080,
											"end": 5108,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5062,
											"end": 5108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5062,
											"end": 5108,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4845,
											"end": 5185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 7,
											"value": "79"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 14636,
											"end": 14769,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 14636,
											"end": 14769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14717,
											"end": 14733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 14725,
											"end": 14732,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14717,
											"end": 14724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 14717,
											"end": 14733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14717,
											"end": 14733,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 14717,
											"end": 14733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 14709,
											"end": 14762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 14709,
											"end": 14762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14636,
											"end": 14769,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14636,
											"end": 14769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 640,
											"end": 736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 13845,
											"end": 14070,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 13845,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13959,
											"end": 14000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 13989,
											"end": 13996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13997,
											"end": 13999,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13959,
											"end": 13988,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 13959,
											"end": 14000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13959,
											"end": 14000,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 13959,
											"end": 14000,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13845,
											"end": 14070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13845,
											"end": 14070,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13845,
											"end": 14070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8744,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 8483,
											"end": 8744,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8576,
											"end": 8580,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8592,
											"end": 8605,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8623,
											"end": 8630,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8608,
											"end": 8631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8608,
											"end": 8631,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8608,
											"end": 8631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8592,
											"end": 8631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8592,
											"end": 8631,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8660,
											"end": 8665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8649,
											"end": 8665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8649,
											"end": 8665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8649,
											"end": 8656,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8649,
											"end": 8665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8649,
											"end": 8665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8649,
											"end": 8665,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8649,
											"end": 8701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8649,
											"end": 8701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8649,
											"end": 8701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8649,
											"end": 8701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8669,
											"end": 8701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8686,
											"end": 8691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8693,
											"end": 8700,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8669,
											"end": 8685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 8669,
											"end": 8701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8669,
											"end": 8701,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8669,
											"end": 8701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8649,
											"end": 8701,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8649,
											"end": 8701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8649,
											"end": 8736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8649,
											"end": 8736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8649,
											"end": 8736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8649,
											"end": 8736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8729,
											"end": 8736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8705,
											"end": 8736,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8705,
											"end": 8736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 8717,
											"end": 8724,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8705,
											"end": 8716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 8705,
											"end": 8725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8705,
											"end": 8736,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8705,
											"end": 8736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8705,
											"end": 8736,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8649,
											"end": 8736,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8649,
											"end": 8736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8641,
											"end": 8737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8744,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8744,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8483,
											"end": 8744,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12336,
											"end": 13733,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 12336,
											"end": 13733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12460,
											"end": 12464,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12464,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12433,
											"end": 12464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 12448,
											"end": 12455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12433,
											"end": 12456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12456,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 12433,
											"end": 12456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12464,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12433,
											"end": 12464,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12433,
											"end": 12464,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 12425,
											"end": 12506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 12425,
											"end": 12506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12538,
											"end": 12539,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12524,
											"end": 12540,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12524,
											"end": 12540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12524,
											"end": 12526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12524,
											"end": 12540,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12524,
											"end": 12540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12524,
											"end": 12540,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 12516,
											"end": 12581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 12516,
											"end": 12581,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12592,
											"end": 12634,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 12613,
											"end": 12617,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12619,
											"end": 12621,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12623,
											"end": 12630,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12632,
											"end": 12633,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12592,
											"end": 12612,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 12592,
											"end": 12634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12592,
											"end": 12634,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 12592,
											"end": 12634,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12761,
											"end": 12765,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12734,
											"end": 12765,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12734,
											"end": 12765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12734,
											"end": 12757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 12749,
											"end": 12756,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12734,
											"end": 12748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 12734,
											"end": 12757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12734,
											"end": 12757,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 12734,
											"end": 12757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12734,
											"end": 12765,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12734,
											"end": 12765,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12734,
											"end": 12765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 12726,
											"end": 12807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 12726,
											"end": 12807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12876,
											"end": 12891,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12892,
											"end": 12899,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12876,
											"end": 12900,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12869,
											"end": 12900,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12869,
											"end": 12900,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 12869,
											"end": 12900,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12869,
											"end": 12900,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12869,
											"end": 12900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12869,
											"end": 12900,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12869,
											"end": 12900,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12869,
											"end": 12900,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12869,
											"end": 12900,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12869,
											"end": 12900,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12869,
											"end": 12900,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 13404,
											"end": 13408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13410,
											"end": 13437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 13418,
											"end": 13427,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13418,
											"end": 13433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13428,
											"end": 13432,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 13418,
											"end": 13433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13418,
											"end": 13433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13418,
											"end": 13433,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13418,
											"end": 13433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13418,
											"end": 13433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13418,
											"end": 13433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13418,
											"end": 13433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13418,
											"end": 13433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13418,
											"end": 13433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13418,
											"end": 13433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13418,
											"end": 13433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13418,
											"end": 13433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13418,
											"end": 13433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13418,
											"end": 13433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13418,
											"end": 13433,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13418,
											"end": 13433,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13435,
											"end": 13436,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13410,
											"end": 13417,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 13410,
											"end": 13437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13410,
											"end": 13437,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 13410,
											"end": 13437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13403,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 13380,
											"end": 13438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13380,
											"end": 13438,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 13380,
											"end": 13438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13485,
											"end": 13541,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 13509,
											"end": 13513,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13515,
											"end": 13540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 13523,
											"end": 13532,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13523,
											"end": 13536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13533,
											"end": 13535,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 13523,
											"end": 13536,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13523,
											"end": 13536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13523,
											"end": 13536,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13523,
											"end": 13536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13523,
											"end": 13536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13523,
											"end": 13536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13523,
											"end": 13536,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13523,
											"end": 13536,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13523,
											"end": 13536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13523,
											"end": 13536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13523,
											"end": 13536,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13523,
											"end": 13536,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13523,
											"end": 13536,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13523,
											"end": 13536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13523,
											"end": 13536,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13523,
											"end": 13536,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13538,
											"end": 13539,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13515,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 13515,
											"end": 13540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13515,
											"end": 13540,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 13515,
											"end": 13540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13485,
											"end": 13508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 13485,
											"end": 13541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13485,
											"end": 13541,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 13485,
											"end": 13541,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13598,
											"end": 13632,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 13620,
											"end": 13627,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13629,
											"end": 13631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13598,
											"end": 13619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 13598,
											"end": 13632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13598,
											"end": 13632,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 13598,
											"end": 13632,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13666,
											"end": 13673,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13662,
											"end": 13664,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13647,
											"end": 13674,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13647,
											"end": 13674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13647,
											"end": 13674,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13647,
											"end": 13674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13647,
											"end": 13674,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 13647,
											"end": 13674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13647,
											"end": 13674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13647,
											"end": 13674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13647,
											"end": 13674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13647,
											"end": 13674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13647,
											"end": 13674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13647,
											"end": 13674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13647,
											"end": 13674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13647,
											"end": 13674,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 13685,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 13705,
											"end": 13709,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13711,
											"end": 13713,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13715,
											"end": 13722,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13724,
											"end": 13725,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13685,
											"end": 13704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 13685,
											"end": 13726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13685,
											"end": 13726,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 13685,
											"end": 13726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12336,
											"end": 13733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12336,
											"end": 13733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12336,
											"end": 13733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12336,
											"end": 13733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7337,
											"end": 7896,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 7337,
											"end": 7896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7403,
											"end": 7414,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7431,
											"end": 7440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7527,
											"end": 7539,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 7519,
											"end": 7539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7519,
											"end": 7539,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7577,
											"end": 7593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7617,
											"end": 7624,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7626,
											"end": 7630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 7606,
											"end": 7631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7606,
											"end": 7631,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7632,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7632,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7632,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7596,
											"end": 7632,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7596,
											"end": 7632,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7577,
											"end": 7632,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7577,
											"end": 7632,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7727,
											"end": 7735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7721,
											"end": 7736,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7736,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7714,
											"end": 7736,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 7832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7687,
											"end": 7832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7337,
											"end": 7896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7337,
											"end": 7896,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7337,
											"end": 7896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7337,
											"end": 7896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14206,
											"end": 14552,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 14206,
											"end": 14552,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14326,
											"end": 14334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14334,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14317,
											"end": 14334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14322,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14334,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14317,
											"end": 14334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14317,
											"end": 14334,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 14309,
											"end": 14364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 14309,
											"end": 14364,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14487,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 14463,
											"end": 14468,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14469,
											"end": 14477,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14478,
											"end": 14486,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 14432,
											"end": 14487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14432,
											"end": 14487,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 14432,
											"end": 14487,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14206,
											"end": 14552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14206,
											"end": 14552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14206,
											"end": 14552,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14206,
											"end": 14552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 7228,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 6961,
											"end": 7228,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7073,
											"end": 7101,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 7083,
											"end": 7087,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7089,
											"end": 7091,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7093,
											"end": 7100,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7073,
											"end": 7082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 7073,
											"end": 7101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7073,
											"end": 7101,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 7073,
											"end": 7101,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 7142,
											"end": 7146,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7148,
											"end": 7150,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7152,
											"end": 7159,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7161,
											"end": 7165,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 7119,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7119,
											"end": 7166,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 7119,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 7111,
											"end": 7221,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 7111,
											"end": 7221,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 7228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 7228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 7228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 7228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6961,
											"end": 7228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3776,
											"end": 3868,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 3776,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3827,
											"end": 3840,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3852,
											"end": 3861,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3776,
											"end": 3868,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3776,
											"end": 3868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "tag",
											"source": 6,
											"value": "152"
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 503,
											"end": 516,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 552,
											"end": 566,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 590,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 580,
											"end": 585,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 569,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 569,
											"end": 586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 569,
											"end": 586,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 569,
											"end": 586,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 569,
											"end": 590,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 552,
											"end": 590,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 552,
											"end": 590,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 604,
											"end": 624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 644,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 627,
											"end": 645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "CALLDATACOPY",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 627,
											"end": 645,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 627,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 604,
											"end": 645,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 604,
											"end": 645,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 659,
											"end": 670,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 785,
											"end": 791,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 781,
											"end": 783,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 777,
											"end": 792,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 769,
											"end": 775,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 765,
											"end": 793,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 758,
											"end": 793,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 758,
											"end": 793,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 827,
											"end": 831,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 851,
											"end": 856,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 990,
											"end": 998,
											"name": "PUSH",
											"source": 6,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 985,
											"end": 987,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 974,
											"end": 988,
											"name": "MOD",
											"source": 6
										},
										{
											"begin": 969,
											"end": 999,
											"name": "BYTE",
											"source": 6
										},
										{
											"begin": 964,
											"end": 967,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 956,
											"end": 1000,
											"name": "MSTORE8",
											"source": 6
										},
										{
											"begin": 1044,
											"end": 1046,
											"name": "PUSH",
											"source": 6,
											"value": "A"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "224"
										},
										{
											"begin": 1035,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "tag",
											"source": 6,
											"value": "222"
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 1035,
											"end": 1046,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1068,
											"end": 1073,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1068,
											"end": 1078,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "220"
										},
										{
											"begin": 1064,
											"end": 1085,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "tag",
											"source": 6,
											"value": "221"
										},
										{
											"begin": 820,
											"end": 1100,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1120,
											"end": 1126,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1126,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 447,
											"end": 1143,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 447,
											"end": 1143,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8199,
											"end": 8325,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 8199,
											"end": 8325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8264,
											"end": 8268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8316,
											"end": 8317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8287,
											"end": 8318,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8287,
											"end": 8318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8287,
											"end": 8304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 8296,
											"end": 8303,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8287,
											"end": 8295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 8287,
											"end": 8304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8287,
											"end": 8304,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 8287,
											"end": 8304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8287,
											"end": 8318,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8287,
											"end": 8318,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8287,
											"end": 8318,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8287,
											"end": 8318,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8280,
											"end": 8318,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8325,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8325,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8325,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8199,
											"end": 8325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19533,
											"end": 20086,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 19533,
											"end": 20086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19678,
											"end": 19685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19675,
											"end": 19676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19668,
											"end": 19686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19767,
											"end": 19779,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19763,
											"end": 19765,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19756,
											"end": 19780,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19894,
											"end": 19896,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19891,
											"end": 19892,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19881,
											"end": 19897,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19991,
											"end": 19996,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19985,
											"end": 19989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19978,
											"end": 19997,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19650,
											"end": 20071,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19533,
											"end": 20086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19533,
											"end": 20086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19533,
											"end": 20086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16868,
											"end": 16984,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 16868,
											"end": 16984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16868,
											"end": 16984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16868,
											"end": 16984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16868,
											"end": 16984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16868,
											"end": 16984,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16868,
											"end": 16984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20746,
											"end": 20917,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20746,
											"end": 20917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20801,
											"end": 20807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20864,
											"end": 20865,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20862,
											"end": 20863,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20859,
											"end": 20866,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20896,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 20856,
											"end": 20896,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20893,
											"end": 20894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20891,
											"end": 20892,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20887,
											"end": 20895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20884,
											"end": 20895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20884,
											"end": 20895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20856,
											"end": 20896,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 20856,
											"end": 20896,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20746,
											"end": 20917,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20746,
											"end": 20917,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20746,
											"end": 20917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20746,
											"end": 20917,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20746,
											"end": 20917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18417,
											"end": 18965,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 18417,
											"end": 18965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18552,
											"end": 18553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18545,
											"end": 18561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18642,
											"end": 18656,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18638,
											"end": 18640,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18631,
											"end": 18657,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18771,
											"end": 18773,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18768,
											"end": 18769,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18758,
											"end": 18774,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18868,
											"end": 18875,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18862,
											"end": 18866,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18855,
											"end": 18876,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18527,
											"end": 18950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18417,
											"end": 18965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18417,
											"end": 18965,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18417,
											"end": 18965,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20588,
											"end": 20737,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 20588,
											"end": 20737,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20643,
											"end": 20649,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20710,
											"end": 20711,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20708,
											"end": 20709,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20704,
											"end": 20712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20712,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20588,
											"end": 20737,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20588,
											"end": 20737,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20588,
											"end": 20737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20588,
											"end": 20737,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20588,
											"end": 20737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 19521,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 18976,
											"end": 19521,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19113,
											"end": 19120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19110,
											"end": 19111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19103,
											"end": 19121,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19202,
											"end": 19214,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19198,
											"end": 19200,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19191,
											"end": 19215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19329,
											"end": 19331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19326,
											"end": 19327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19316,
											"end": 19332,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19426,
											"end": 19431,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19420,
											"end": 19424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19413,
											"end": 19432,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19085,
											"end": 19506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 19521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 19521,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18976,
											"end": 19521,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17690,
											"end": 17805,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 17690,
											"end": 17805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17690,
											"end": 17805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17690,
											"end": 17805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17690,
											"end": 17805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17690,
											"end": 17805,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17690,
											"end": 17805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20092,
											"end": 20582,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 20092,
											"end": 20582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20195,
											"end": 20207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20248,
											"end": 20271,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 20240,
											"end": 20271,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20240,
											"end": 20271,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20291,
											"end": 20320,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20344,
											"end": 20350,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20352,
											"end": 20356,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 20333,
											"end": 20357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20333,
											"end": 20357,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20323,
											"end": 20358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20323,
											"end": 20358,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20323,
											"end": 20358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20323,
											"end": 20358,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20323,
											"end": 20358,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20323,
											"end": 20358,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20291,
											"end": 20358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20291,
											"end": 20358,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20420,
											"end": 20449,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20473,
											"end": 20479,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20481,
											"end": 20502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 20462,
											"end": 20503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20462,
											"end": 20503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20452,
											"end": 20504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20452,
											"end": 20504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20452,
											"end": 20504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20452,
											"end": 20504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20452,
											"end": 20504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20452,
											"end": 20504,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20420,
											"end": 20504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20420,
											"end": 20504,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20568,
											"end": 20569,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20545,
											"end": 20566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20538,
											"end": 20570,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20524,
											"end": 20580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20524,
											"end": 20580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20524,
											"end": 20580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20092,
											"end": 20582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20092,
											"end": 20582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20092,
											"end": 20582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20092,
											"end": 20582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15321,
											"end": 16152,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 15321,
											"end": 16152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15470,
											"end": 15474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15490,
											"end": 15505,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 15490,
											"end": 15492,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15490,
											"end": 15503,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15490,
											"end": 15503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15490,
											"end": 15503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 15490,
											"end": 15505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15490,
											"end": 15505,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 15490,
											"end": 15505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15486,
											"end": 16146,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15486,
											"end": 16146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 15486,
											"end": 16146,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15541,
											"end": 15543,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15561,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15525,
											"end": 15561,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15561,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 15562,
											"end": 15574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 15562,
											"end": 15572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 15562,
											"end": 15574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15562,
											"end": 15574,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 15562,
											"end": 15574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15576,
											"end": 15580,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15582,
											"end": 15589,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15591,
											"end": 15595,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 15525,
											"end": 15596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 15525,
											"end": 15596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 15525,
											"end": 15596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15780,
											"end": 15781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15763,
											"end": 15769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15763,
											"end": 15776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15763,
											"end": 15781,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15759,
											"end": 16080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 15759,
											"end": 16080,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 15805,
											"end": 15865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15805,
											"end": 15865,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15759,
											"end": 16080,
											"name": "tag",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 15759,
											"end": 16080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16032,
											"end": 16038,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16026,
											"end": 16039,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16017,
											"end": 16023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16013,
											"end": 16015,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16009,
											"end": 16024,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16002,
											"end": 16040,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 15521,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15656,
											"end": 15697,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 15656,
											"end": 15697,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 15656,
											"end": 15697,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 15646,
											"end": 15697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15646,
											"end": 15697,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15646,
											"end": 15697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15646,
											"end": 15652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15646,
											"end": 15697,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15646,
											"end": 15697,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15646,
											"end": 15697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15646,
											"end": 15697,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15697,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15697,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 15639,
											"end": 15697,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15486,
											"end": 16146,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 15486,
											"end": 16146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16131,
											"end": 16135,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16124,
											"end": 16135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16124,
											"end": 16135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15321,
											"end": 16152,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 15321,
											"end": 16152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15321,
											"end": 16152,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 15321,
											"end": 16152,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15321,
											"end": 16152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15321,
											"end": 16152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15321,
											"end": 16152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15321,
											"end": 16152,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15321,
											"end": 16152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10192,
											"end": 10199,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10225,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10228,
											"end": 10229,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10211,
											"end": 10229,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10276,
											"end": 10284,
											"name": "PUSH",
											"source": 9,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10267,
											"end": 10272,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10267,
											"end": 10284,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10313,
											"end": 10321,
											"name": "PUSH",
											"source": 9,
											"value": "184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 10304,
											"end": 10321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10304,
											"end": 10321,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10349,
											"end": 10351,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10339,
											"end": 10351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 10263,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10392,
											"end": 10400,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10383,
											"end": 10388,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10383,
											"end": 10400,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10429,
											"end": 10437,
											"name": "PUSH",
											"source": 9,
											"value": "4EE2D6D415B85ACEF8100000000"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 10420,
											"end": 10437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10437,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10465,
											"end": 10467,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10455,
											"end": 10467,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 10379,
											"end": 10482,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10508,
											"end": 10516,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10499,
											"end": 10504,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10499,
											"end": 10516,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10545,
											"end": 10553,
											"name": "PUSH",
											"source": 9,
											"value": "2386F26FC10000"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 10536,
											"end": 10553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10536,
											"end": 10553,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10581,
											"end": 10583,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10571,
											"end": 10583,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 10495,
											"end": 10598,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10624,
											"end": 10631,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 10615,
											"end": 10620,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10615,
											"end": 10631,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10660,
											"end": 10667,
											"name": "PUSH",
											"source": 9,
											"value": "5F5E100"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 10651,
											"end": 10667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10651,
											"end": 10667,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10695,
											"end": 10696,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10685,
											"end": 10696,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 10611,
											"end": 10711,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10737,
											"end": 10744,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 10728,
											"end": 10733,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10728,
											"end": 10744,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10773,
											"end": 10780,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 10764,
											"end": 10780,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10764,
											"end": 10780,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10808,
											"end": 10809,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10798,
											"end": 10809,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 10724,
											"end": 10824,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10850,
											"end": 10857,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10841,
											"end": 10846,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10841,
											"end": 10857,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10886,
											"end": 10893,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 10877,
											"end": 10893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10877,
											"end": 10893,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10921,
											"end": 10922,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10911,
											"end": 10922,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 10837,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 10954,
											"end": 10959,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10954,
											"end": 10970,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 11000,
											"end": 11001,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10990,
											"end": 11001,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 10950,
											"end": 11016,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 11042,
											"end": 11048,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 11035,
											"end": 11048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 11055,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10139,
											"end": 11055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "tag",
											"source": 4,
											"value": "242"
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1472,
											"end": 1476,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1724,
											"end": 1725,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1721,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1725,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1695,
											"end": 1725,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 11,
											"value": "353"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1903,
											"end": 1909,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1900,
											"end": 1901,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1897,
											"end": 1910,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1988,
											"end": 1989,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1983,
											"end": 1986,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1979,
											"end": 1990,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1973,
											"end": 1991,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1969,
											"end": 1970,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1964,
											"end": 1967,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1953,
											"end": 1992,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1925,
											"end": 1927,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1918,
											"end": 1928,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1913,
											"end": 1928,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 1889,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2036,
											"end": 2037,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2027,
											"end": 2033,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2022,
											"end": 2025,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2018,
											"end": 2034,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2011,
											"end": 2038,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1860,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1798,
											"end": 2044,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2097,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2144,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2138,
											"end": 2145,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 2133,
											"end": 2135,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 2126,
											"end": 2131,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2122,
											"end": 2136,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2118,
											"end": 2146,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2108,
											"end": 2146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2050,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2246,
											"end": 2249,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 2274,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 2393,
											"end": 2399,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2388,
											"end": 2391,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 2329,
											"end": 2400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 2329,
											"end": 2400,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 2322,
											"end": 2400,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 2467,
											"end": 2473,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2462,
											"end": 2465,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2455,
											"end": 2459,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2444,
											"end": 2460,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 2409,
											"end": 2474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "tag",
											"source": 11,
											"value": "370"
										},
										{
											"begin": 2409,
											"end": 2474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 2499,
											"end": 2528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 2499,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2494,
											"end": 2497,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2490,
											"end": 2529,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2483,
											"end": 2529,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2250,
											"end": 2535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2535,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "tag",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2654,
											"end": 2658,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2694,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2690,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2677,
											"end": 2695,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2669,
											"end": 2695,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2741,
											"end": 2750,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2731,
											"end": 2751,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2716,
											"end": 2725,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2712,
											"end": 2729,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2705,
											"end": 2752,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 2842,
											"end": 2846,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 2769,
											"end": 2847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 2769,
											"end": 2847,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2761,
											"end": 2847,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2541,
											"end": 2854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2897,
											"end": 2904,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2926,
											"end": 2931,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2915,
											"end": 2931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2860,
											"end": 2937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 3016,
											"end": 3040,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 3016,
											"end": 3040,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3009,
											"end": 3014,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3006,
											"end": 3041,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3055,
											"end": 3056,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3052,
											"end": 3053,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3057,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 2996,
											"end": 3059,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2943,
											"end": 3065,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2943,
											"end": 3065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3117,
											"end": 3122,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3142,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 3198,
											"end": 3203,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 3171,
											"end": 3204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 3171,
											"end": 3204,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3071,
											"end": 3210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3326,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3303,
											"end": 3310,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3299,
											"end": 3322,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3295,
											"end": 3327,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 3330,
											"end": 3409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "tag",
											"source": 11,
											"value": "382"
										},
										{
											"begin": 3330,
											"end": 3409,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "tag",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 3292,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3450,
											"end": 3451,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 3520,
											"end": 3527,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3511,
											"end": 3517,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3500,
											"end": 3509,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3496,
											"end": 3518,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 3475,
											"end": 3528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 3475,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3465,
											"end": 3528,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3421,
											"end": 3538,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 11,
											"value": "388"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 11,
											"value": "395"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 11,
											"value": "398"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 11,
											"value": "400"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4967,
											"end": 4973,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4981,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4983,
											"end": 4989,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5032,
											"end": 5034,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 5020,
											"end": 5029,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5011,
											"end": 5018,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5007,
											"end": 5030,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5003,
											"end": 5035,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5038,
											"end": 5117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 5038,
											"end": 5117,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 5000,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 5228,
											"end": 5235,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 5183,
											"end": 5236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "tag",
											"source": 11,
											"value": "404"
										},
										{
											"begin": 5183,
											"end": 5236,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 5173,
											"end": 5236,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5129,
											"end": 5246,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5285,
											"end": 5287,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 5356,
											"end": 5363,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5347,
											"end": 5353,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5336,
											"end": 5345,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5332,
											"end": 5354,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 5311,
											"end": 5364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 5311,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5301,
											"end": 5364,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5374,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5413,
											"end": 5415,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 5484,
											"end": 5491,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 5475,
											"end": 5481,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5464,
											"end": 5473,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 5439,
											"end": 5492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "tag",
											"source": 11,
											"value": "406"
										},
										{
											"begin": 5439,
											"end": 5492,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5429,
											"end": 5492,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5384,
											"end": 5502,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4890,
											"end": 5509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5623,
											"end": 5625,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5611,
											"end": 5620,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5602,
											"end": 5609,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5598,
											"end": 5621,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5594,
											"end": 5626,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 5629,
											"end": 5708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 5629,
											"end": 5708,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 5591,
											"end": 5710,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5749,
											"end": 5750,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 5819,
											"end": 5826,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5810,
											"end": 5816,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5799,
											"end": 5808,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 5795,
											"end": 5817,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 5774,
											"end": 5827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 5774,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5764,
											"end": 5827,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5720,
											"end": 5837,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5515,
											"end": 5844,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 5937,
											"end": 5961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "tag",
											"source": 11,
											"value": "412"
										},
										{
											"begin": 5937,
											"end": 5961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5932,
											"end": 5935,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5925,
											"end": 5962,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5850,
											"end": 5968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5850,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6067,
											"end": 6071,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6105,
											"end": 6107,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6090,
											"end": 6108,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 6186,
											"end": 6187,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6175,
											"end": 6184,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6171,
											"end": 6188,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6162,
											"end": 6168,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 6118,
											"end": 6189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 6118,
											"end": 6189,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5974,
											"end": 6196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 6287,
											"end": 6292,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 6272,
											"end": 6293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 6272,
											"end": 6293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6270,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6262,
											"end": 6294,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6305,
											"end": 6306,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6298,
											"end": 6310,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "tag",
											"source": 11,
											"value": "417"
										},
										{
											"begin": 6252,
											"end": 6312,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6202,
											"end": 6318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6367,
											"end": 6372,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6405,
											"end": 6411,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6392,
											"end": 6412,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6383,
											"end": 6412,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 6421,
											"end": 6451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 6421,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6324,
											"end": 6457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6528,
											"end": 6534,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6536,
											"end": 6542,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6585,
											"end": 6587,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6573,
											"end": 6582,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6560,
											"end": 6583,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6556,
											"end": 6588,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 6591,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 6591,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "tag",
											"source": 11,
											"value": "421"
										},
										{
											"begin": 6553,
											"end": 6672,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6711,
											"end": 6712,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 6781,
											"end": 6788,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6772,
											"end": 6778,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6761,
											"end": 6770,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6757,
											"end": 6779,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 6736,
											"end": 6789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "tag",
											"source": 11,
											"value": "423"
										},
										{
											"begin": 6736,
											"end": 6789,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6726,
											"end": 6789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6682,
											"end": 6799,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6838,
											"end": 6840,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 6906,
											"end": 6913,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6897,
											"end": 6903,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6886,
											"end": 6895,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6882,
											"end": 6904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 6864,
											"end": 6914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "tag",
											"source": 11,
											"value": "424"
										},
										{
											"begin": 6864,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6854,
											"end": 6914,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6809,
											"end": 6924,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6463,
											"end": 6931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 6937,
											"end": 7054,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7046,
											"end": 7047,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7043,
											"end": 7044,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7036,
											"end": 7048,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 7060,
											"end": 7177,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7169,
											"end": 7170,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7166,
											"end": 7167,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7159,
											"end": 7171,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "tag",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 7183,
											"end": 7363,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7231,
											"end": 7308,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7228,
											"end": 7229,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7221,
											"end": 7309,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7328,
											"end": 7332,
											"name": "PUSH",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7318,
											"end": 7333,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7352,
											"end": 7356,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 7349,
											"end": 7350,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7342,
											"end": 7357,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 7474,
											"end": 7478,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 7452,
											"end": 7479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "tag",
											"source": 11,
											"value": "429"
										},
										{
											"begin": 7452,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7444,
											"end": 7450,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7440,
											"end": 7480,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7582,
											"end": 7588,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7570,
											"end": 7580,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7567,
											"end": 7589,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7534,
											"end": 7544,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7531,
											"end": 7565,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7528,
											"end": 7590,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 7593,
											"end": 7611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 7593,
											"end": 7611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "tag",
											"source": 11,
											"value": "430"
										},
										{
											"begin": 7525,
											"end": 7613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7633,
											"end": 7643,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7629,
											"end": 7631,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7622,
											"end": 7644,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7412,
											"end": 7650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7369,
											"end": 7650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7690,
											"end": 7696,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 7717,
											"end": 7737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "tag",
											"source": 11,
											"value": "433"
										},
										{
											"begin": 7717,
											"end": 7737,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7707,
											"end": 7737,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 7774,
											"end": 7778,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7766,
											"end": 7772,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 7746,
											"end": 7779,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "tag",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 7746,
											"end": 7779,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7656,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7852,
											"end": 7856,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7942,
											"end": 7960,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7934,
											"end": 7940,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7931,
											"end": 7961,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "218"
										},
										{
											"begin": 7964,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 7964,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 7928,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 8002,
											"end": 8031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 8002,
											"end": 8031,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7994,
											"end": 8031,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8086,
											"end": 8090,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8080,
											"end": 8084,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8076,
											"end": 8091,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8068,
											"end": 8091,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 8098,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8201,
											"end": 8207,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8191,
											"end": 8194,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8178,
											"end": 8208,
											"name": "CALLDATACOPY",
											"source": 11
										},
										{
											"begin": 8242,
											"end": 8243,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8233,
											"end": 8239,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8228,
											"end": 8231,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8224,
											"end": 8240,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8217,
											"end": 8244,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8104,
											"end": 8250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8333,
											"end": 8338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 8415,
											"end": 8421,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 8374,
											"end": 8422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "tag",
											"source": 11,
											"value": "442"
										},
										{
											"begin": 8374,
											"end": 8422,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 8358,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "tag",
											"source": 11,
											"value": "441"
										},
										{
											"begin": 8358,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8349,
											"end": 8423,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8446,
											"end": 8452,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8439,
											"end": 8444,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8432,
											"end": 8453,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8484,
											"end": 8488,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8477,
											"end": 8482,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8473,
											"end": 8489,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8522,
											"end": 8525,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8513,
											"end": 8519,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8508,
											"end": 8511,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8504,
											"end": 8520,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8501,
											"end": 8526,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 8529,
											"end": 8608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 8529,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 8498,
											"end": 8610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 8666,
											"end": 8672,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8661,
											"end": 8664,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8656,
											"end": 8659,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 8619,
											"end": 8673,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "tag",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 8619,
											"end": 8673,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8339,
											"end": 8679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8256,
											"end": 8679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8753,
											"end": 8758,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8795,
											"end": 8799,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 8787,
											"end": 8793,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8783,
											"end": 8800,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8779,
											"end": 8806,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 8810,
											"end": 8889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 8810,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "tag",
											"source": 11,
											"value": "447"
										},
										{
											"begin": 8769,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8927,
											"end": 8933,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8914,
											"end": 8934,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 9026,
											"end": 9029,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9018,
											"end": 9024,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9003,
											"end": 9009,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8999,
											"end": 9016,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 8952,
											"end": 9030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 8952,
											"end": 9030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8943,
											"end": 9030,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8759,
											"end": 9036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8698,
											"end": 9036,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9137,
											"end": 9143,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9145,
											"end": 9151,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9153,
											"end": 9159,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9167,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9210,
											"end": 9213,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 9198,
											"end": 9207,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9189,
											"end": 9196,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9185,
											"end": 9208,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9181,
											"end": 9214,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 9217,
											"end": 9296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 9217,
											"end": 9296,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "tag",
											"source": 11,
											"value": "451"
										},
										{
											"begin": 9178,
											"end": 9298,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9337,
											"end": 9338,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 9407,
											"end": 9414,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9398,
											"end": 9404,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9387,
											"end": 9396,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9383,
											"end": 9405,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 9362,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 9362,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9352,
											"end": 9415,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9308,
											"end": 9425,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9464,
											"end": 9466,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 9535,
											"end": 9542,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9526,
											"end": 9532,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9515,
											"end": 9524,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9511,
											"end": 9533,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 9490,
											"end": 9543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "tag",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 9490,
											"end": 9543,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9480,
											"end": 9543,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9435,
											"end": 9553,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 9663,
											"end": 9670,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9654,
											"end": 9660,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9639,
											"end": 9661,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 9618,
											"end": 9671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "tag",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 9618,
											"end": 9671,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9608,
											"end": 9671,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9563,
											"end": 9681,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9748,
											"end": 9750,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 9737,
											"end": 9746,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9733,
											"end": 9751,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9720,
											"end": 9752,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9768,
											"end": 9798,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 9801,
											"end": 9880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "tag",
											"source": 11,
											"value": "457"
										},
										{
											"begin": 9801,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "tag",
											"source": 11,
											"value": "456"
										},
										{
											"begin": 9765,
											"end": 9882,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 9960,
											"end": 9967,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9940,
											"end": 9949,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9936,
											"end": 9958,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 9906,
											"end": 9968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 9906,
											"end": 9968,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9896,
											"end": 9968,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9691,
											"end": 9978,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9042,
											"end": 9985,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10059,
											"end": 10065,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10067,
											"end": 10073,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10116,
											"end": 10118,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10104,
											"end": 10113,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10095,
											"end": 10102,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10091,
											"end": 10114,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10087,
											"end": 10119,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 10122,
											"end": 10201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 10122,
											"end": 10201,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "tag",
											"source": 11,
											"value": "460"
										},
										{
											"begin": 10084,
											"end": 10203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10243,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 10312,
											"end": 10319,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10303,
											"end": 10309,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10292,
											"end": 10301,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10288,
											"end": 10310,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 10267,
											"end": 10320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "tag",
											"source": 11,
											"value": "462"
										},
										{
											"begin": 10267,
											"end": 10320,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10257,
											"end": 10320,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10213,
											"end": 10330,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10369,
											"end": 10371,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 10440,
											"end": 10447,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 10431,
											"end": 10437,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10420,
											"end": 10429,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 10416,
											"end": 10438,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 10395,
											"end": 10448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "tag",
											"source": 11,
											"value": "463"
										},
										{
											"begin": 10395,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10385,
											"end": 10448,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10340,
											"end": 10458,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9991,
											"end": 10465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 10471,
											"end": 10651,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10519,
											"end": 10596,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10516,
											"end": 10517,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10509,
											"end": 10597,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10616,
											"end": 10620,
											"name": "PUSH",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 10613,
											"end": 10614,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10606,
											"end": 10621,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10640,
											"end": 10644,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 10637,
											"end": 10638,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10630,
											"end": 10645,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10701,
											"end": 10707,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10738,
											"end": 10739,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10732,
											"end": 10736,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10728,
											"end": 10740,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10718,
											"end": 10740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10785,
											"end": 10786,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 10779,
											"end": 10783,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10775,
											"end": 10787,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10806,
											"end": 10824,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 11,
											"value": "7F"
										},
										{
											"begin": 10854,
											"end": 10860,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10840,
											"end": 10867,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "tag",
											"source": 11,
											"value": "466"
										},
										{
											"begin": 10796,
											"end": 10877,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10924,
											"end": 10926,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10922,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10913,
											"end": 10927,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10890,
											"end": 10928,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 10943,
											"end": 10961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "tag",
											"source": 11,
											"value": "468"
										},
										{
											"begin": 10943,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "tag",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 10887,
											"end": 10971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10708,
											"end": 10977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10657,
											"end": 10977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11123,
											"end": 11157,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20617070726F76616C20746F2063757272656E74206F776E65"
										},
										{
											"begin": 11119,
											"end": 11120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11111,
											"end": 11117,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11107,
											"end": 11121,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11100,
											"end": 11158,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11192,
											"end": 11195,
											"name": "PUSH",
											"source": 11,
											"value": "7200000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11187,
											"end": 11189,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11179,
											"end": 11185,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11175,
											"end": 11190,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11168,
											"end": 11196,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10983,
											"end": 11203,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10983,
											"end": 11203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11351,
											"end": 11354,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 11436,
											"end": 11438,
											"name": "PUSH",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 11431,
											"end": 11434,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 11372,
											"end": 11439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 11372,
											"end": 11439,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11365,
											"end": 11439,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11365,
											"end": 11439,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 11537,
											"end": 11540,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 11448,
											"end": 11541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 11448,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11566,
											"end": 11568,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11561,
											"end": 11564,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11557,
											"end": 11569,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11550,
											"end": 11569,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11550,
											"end": 11569,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11575,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11209,
											"end": 11575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11747,
											"end": 11751,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11785,
											"end": 11787,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11774,
											"end": 11783,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11770,
											"end": 11788,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11762,
											"end": 11788,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11762,
											"end": 11788,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11834,
											"end": 11843,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11832,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11824,
											"end": 11844,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11820,
											"end": 11821,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11809,
											"end": 11818,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11805,
											"end": 11822,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11798,
											"end": 11845,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 11988,
											"end": 11992,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 11862,
											"end": 11993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "tag",
											"source": 11,
											"value": "474"
										},
										{
											"begin": 11862,
											"end": 11993,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11854,
											"end": 11993,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11854,
											"end": 11993,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11581,
											"end": 12000,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11581,
											"end": 12000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12146,
											"end": 12180,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20617070726F76652063616C6C6572206973206E6F7420746F"
										},
										{
											"begin": 12142,
											"end": 12143,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12134,
											"end": 12140,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12130,
											"end": 12144,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12123,
											"end": 12181,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12215,
											"end": 12246,
											"name": "PUSH",
											"source": 11,
											"value": "6B656E206F776E6572206F7220617070726F76656420666F7220616C6C000000"
										},
										{
											"begin": 12210,
											"end": 12212,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12202,
											"end": 12208,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12198,
											"end": 12213,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12191,
											"end": 12247,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12006,
											"end": 12254,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12006,
											"end": 12254,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12402,
											"end": 12405,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 12487,
											"end": 12489,
											"name": "PUSH",
											"source": 11,
											"value": "3D"
										},
										{
											"begin": 12482,
											"end": 12485,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 12423,
											"end": 12490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 12423,
											"end": 12490,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12416,
											"end": 12490,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12416,
											"end": 12490,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 12588,
											"end": 12591,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 12499,
											"end": 12592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "tag",
											"source": 11,
											"value": "478"
										},
										{
											"begin": 12499,
											"end": 12592,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12617,
											"end": 12619,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12612,
											"end": 12615,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12608,
											"end": 12620,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12601,
											"end": 12620,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12601,
											"end": 12620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12626,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12260,
											"end": 12626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12798,
											"end": 12802,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12836,
											"end": 12838,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12825,
											"end": 12834,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12821,
											"end": 12839,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12813,
											"end": 12839,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12813,
											"end": 12839,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12885,
											"end": 12894,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12879,
											"end": 12883,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12875,
											"end": 12895,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12871,
											"end": 12872,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12860,
											"end": 12869,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12856,
											"end": 12873,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12849,
											"end": 12896,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 13039,
											"end": 13043,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 12913,
											"end": 13044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "tag",
											"source": 11,
											"value": "480"
										},
										{
											"begin": 12913,
											"end": 13044,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12905,
											"end": 13044,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12905,
											"end": 13044,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 13051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12632,
											"end": 13051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "tag",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13197,
											"end": 13231,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A2063616C6C6572206973206E6F7420746F6B656E206F776E65"
										},
										{
											"begin": 13193,
											"end": 13194,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13185,
											"end": 13191,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13181,
											"end": 13195,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13174,
											"end": 13232,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13266,
											"end": 13281,
											"name": "PUSH",
											"source": 11,
											"value": "72206F7220617070726F76656400000000000000000000000000000000000000"
										},
										{
											"begin": 13261,
											"end": 13263,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13253,
											"end": 13259,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13249,
											"end": 13264,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13242,
											"end": 13282,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13057,
											"end": 13289,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13057,
											"end": 13289,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13437,
											"end": 13440,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 13522,
											"end": 13524,
											"name": "PUSH",
											"source": 11,
											"value": "2D"
										},
										{
											"begin": 13517,
											"end": 13520,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 13458,
											"end": 13525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 13458,
											"end": 13525,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13451,
											"end": 13525,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13451,
											"end": 13525,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 13623,
											"end": 13626,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 13534,
											"end": 13627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "tag",
											"source": 11,
											"value": "484"
										},
										{
											"begin": 13534,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13652,
											"end": 13654,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13647,
											"end": 13650,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13643,
											"end": 13655,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13636,
											"end": 13655,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13636,
											"end": 13655,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13295,
											"end": 13661,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13295,
											"end": 13661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13833,
											"end": 13837,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13871,
											"end": 13873,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13860,
											"end": 13869,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13856,
											"end": 13874,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13848,
											"end": 13874,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13848,
											"end": 13874,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13920,
											"end": 13929,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13914,
											"end": 13918,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13910,
											"end": 13930,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13906,
											"end": 13907,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13895,
											"end": 13904,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13891,
											"end": 13908,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13884,
											"end": 13931,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 14074,
											"end": 14078,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 13948,
											"end": 14079,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "tag",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 13948,
											"end": 14079,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13940,
											"end": 14079,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13940,
											"end": 14079,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13667,
											"end": 14086,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13667,
											"end": 14086,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14092,
											"end": 14266,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 14092,
											"end": 14266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14232,
											"end": 14258,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20696E76616C696420746F6B656E2049440000000000000000"
										},
										{
											"begin": 14228,
											"end": 14229,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14220,
											"end": 14226,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14216,
											"end": 14230,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14209,
											"end": 14259,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14092,
											"end": 14266,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14092,
											"end": 14266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14414,
											"end": 14417,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 14499,
											"end": 14501,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 14494,
											"end": 14497,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 14435,
											"end": 14502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "tag",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 14435,
											"end": 14502,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14428,
											"end": 14502,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14428,
											"end": 14502,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 14600,
											"end": 14603,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 14511,
											"end": 14604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 14511,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14629,
											"end": 14631,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14624,
											"end": 14627,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14620,
											"end": 14632,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14613,
											"end": 14632,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14613,
											"end": 14632,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14272,
											"end": 14638,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14272,
											"end": 14638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14810,
											"end": 14814,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14848,
											"end": 14850,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14837,
											"end": 14846,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14833,
											"end": 14851,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14825,
											"end": 14851,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14825,
											"end": 14851,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14897,
											"end": 14906,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14891,
											"end": 14895,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14887,
											"end": 14907,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14883,
											"end": 14884,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14872,
											"end": 14881,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14868,
											"end": 14885,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14861,
											"end": 14908,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 15051,
											"end": 15055,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 14925,
											"end": 15056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "tag",
											"source": 11,
											"value": "492"
										},
										{
											"begin": 14925,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14917,
											"end": 15056,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14917,
											"end": 15056,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14644,
											"end": 15063,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14644,
											"end": 15063,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15069,
											"end": 15297,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 15069,
											"end": 15297,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15209,
											"end": 15243,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A2061646472657373207A65726F206973206E6F742061207661"
										},
										{
											"begin": 15205,
											"end": 15206,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15197,
											"end": 15203,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15193,
											"end": 15207,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15186,
											"end": 15244,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15278,
											"end": 15289,
											"name": "PUSH",
											"source": 11,
											"value": "6C6964206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15273,
											"end": 15275,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15265,
											"end": 15271,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15261,
											"end": 15276,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15254,
											"end": 15290,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15069,
											"end": 15297,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15069,
											"end": 15297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15445,
											"end": 15448,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 15530,
											"end": 15532,
											"name": "PUSH",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 15525,
											"end": 15528,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 15466,
											"end": 15533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "tag",
											"source": 11,
											"value": "495"
										},
										{
											"begin": 15466,
											"end": 15533,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15459,
											"end": 15533,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 15631,
											"end": 15634,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 15542,
											"end": 15635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "tag",
											"source": 11,
											"value": "496"
										},
										{
											"begin": 15542,
											"end": 15635,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15660,
											"end": 15662,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15655,
											"end": 15658,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15651,
											"end": 15663,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15644,
											"end": 15663,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15644,
											"end": 15663,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15303,
											"end": 15669,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15303,
											"end": 15669,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15841,
											"end": 15845,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15879,
											"end": 15881,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15868,
											"end": 15877,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15864,
											"end": 15882,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15856,
											"end": 15882,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15856,
											"end": 15882,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15928,
											"end": 15937,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15922,
											"end": 15926,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15918,
											"end": 15938,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15914,
											"end": 15915,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15903,
											"end": 15912,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15899,
											"end": 15916,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15892,
											"end": 15939,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 16082,
											"end": 16086,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 15956,
											"end": 16087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "tag",
											"source": 11,
											"value": "498"
										},
										{
											"begin": 15956,
											"end": 16087,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15948,
											"end": 16087,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15948,
											"end": 16087,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15675,
											"end": 16094,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15675,
											"end": 16094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16100,
											"end": 16432,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 16100,
											"end": 16432,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16221,
											"end": 16225,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16259,
											"end": 16261,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16248,
											"end": 16257,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16244,
											"end": 16262,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16236,
											"end": 16262,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16236,
											"end": 16262,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 16340,
											"end": 16341,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16329,
											"end": 16338,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16325,
											"end": 16342,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16316,
											"end": 16322,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 16272,
											"end": 16343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "tag",
											"source": 11,
											"value": "500"
										},
										{
											"begin": 16272,
											"end": 16343,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16353,
											"end": 16425,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 16421,
											"end": 16423,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16410,
											"end": 16419,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16406,
											"end": 16424,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16397,
											"end": 16403,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16353,
											"end": 16425,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 16353,
											"end": 16425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16353,
											"end": 16425,
											"name": "tag",
											"source": 11,
											"value": "501"
										},
										{
											"begin": 16353,
											"end": 16425,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16100,
											"end": 16432,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16100,
											"end": 16432,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16100,
											"end": 16432,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16100,
											"end": 16432,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16100,
											"end": 16432,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16100,
											"end": 16432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16438,
											"end": 16586,
											"name": "tag",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 16438,
											"end": 16586,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16540,
											"end": 16551,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16577,
											"end": 16580,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16562,
											"end": 16580,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16562,
											"end": 16580,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16438,
											"end": 16586,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16438,
											"end": 16586,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16438,
											"end": 16586,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16438,
											"end": 16586,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16438,
											"end": 16586,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16592,
											"end": 16982,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 16592,
											"end": 16982,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16698,
											"end": 16701,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16726,
											"end": 16765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 16759,
											"end": 16764,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16726,
											"end": 16765,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 16726,
											"end": 16765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16726,
											"end": 16765,
											"name": "tag",
											"source": 11,
											"value": "504"
										},
										{
											"begin": 16726,
											"end": 16765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16781,
											"end": 16870,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 16863,
											"end": 16869,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16858,
											"end": 16861,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16781,
											"end": 16870,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "325"
										},
										{
											"begin": 16781,
											"end": 16870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16781,
											"end": 16870,
											"name": "tag",
											"source": 11,
											"value": "505"
										},
										{
											"begin": 16781,
											"end": 16870,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16774,
											"end": 16870,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16774,
											"end": 16870,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16879,
											"end": 16944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 16937,
											"end": 16943,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16932,
											"end": 16935,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 16925,
											"end": 16929,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16918,
											"end": 16923,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 16914,
											"end": 16930,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16879,
											"end": 16944,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 16879,
											"end": 16944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16879,
											"end": 16944,
											"name": "tag",
											"source": 11,
											"value": "506"
										},
										{
											"begin": 16879,
											"end": 16944,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16969,
											"end": 16975,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16964,
											"end": 16967,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 16960,
											"end": 16976,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16953,
											"end": 16976,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16953,
											"end": 16976,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16702,
											"end": 16982,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16592,
											"end": 16982,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16592,
											"end": 16982,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16592,
											"end": 16982,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16592,
											"end": 16982,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16592,
											"end": 16982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16988,
											"end": 17423,
											"name": "tag",
											"source": 11,
											"value": "154"
										},
										{
											"begin": 16988,
											"end": 17423,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17168,
											"end": 17171,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17190,
											"end": 17285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 17281,
											"end": 17284,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17272,
											"end": 17278,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 17190,
											"end": 17285,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 17190,
											"end": 17285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17190,
											"end": 17285,
											"name": "tag",
											"source": 11,
											"value": "508"
										},
										{
											"begin": 17190,
											"end": 17285,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17183,
											"end": 17285,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17183,
											"end": 17285,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17302,
											"end": 17397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 17393,
											"end": 17396,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17384,
											"end": 17390,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17302,
											"end": 17397,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 17302,
											"end": 17397,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17302,
											"end": 17397,
											"name": "tag",
											"source": 11,
											"value": "509"
										},
										{
											"begin": 17302,
											"end": 17397,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17295,
											"end": 17397,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17295,
											"end": 17397,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17414,
											"end": 17417,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 17407,
											"end": 17417,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17407,
											"end": 17417,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16988,
											"end": 17423,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 16988,
											"end": 17423,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16988,
											"end": 17423,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16988,
											"end": 17423,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16988,
											"end": 17423,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16988,
											"end": 17423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17429,
											"end": 17653,
											"name": "tag",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 17429,
											"end": 17653,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17569,
											"end": 17603,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A207472616E736665722066726F6D20696E636F727265637420"
										},
										{
											"begin": 17565,
											"end": 17566,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17557,
											"end": 17563,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17553,
											"end": 17567,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17546,
											"end": 17604,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17638,
											"end": 17645,
											"name": "PUSH",
											"source": 11,
											"value": "6F776E6572000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17633,
											"end": 17635,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17625,
											"end": 17631,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17621,
											"end": 17636,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17614,
											"end": 17646,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17429,
											"end": 17653,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17429,
											"end": 17653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17659,
											"end": 18025,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 17659,
											"end": 18025,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17801,
											"end": 17804,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17822,
											"end": 17889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 17886,
											"end": 17888,
											"name": "PUSH",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 17881,
											"end": 17884,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17822,
											"end": 17889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 17822,
											"end": 17889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17822,
											"end": 17889,
											"name": "tag",
											"source": 11,
											"value": "512"
										},
										{
											"begin": 17822,
											"end": 17889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17815,
											"end": 17889,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17815,
											"end": 17889,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17898,
											"end": 17991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 17987,
											"end": 17990,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17898,
											"end": 17991,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "327"
										},
										{
											"begin": 17898,
											"end": 17991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17898,
											"end": 17991,
											"name": "tag",
											"source": 11,
											"value": "513"
										},
										{
											"begin": 17898,
											"end": 17991,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18016,
											"end": 18018,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18011,
											"end": 18014,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18007,
											"end": 18019,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18000,
											"end": 18019,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18000,
											"end": 18019,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17659,
											"end": 18025,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17659,
											"end": 18025,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17659,
											"end": 18025,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17659,
											"end": 18025,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18031,
											"end": 18450,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 18031,
											"end": 18450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18197,
											"end": 18201,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18235,
											"end": 18237,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18224,
											"end": 18233,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18220,
											"end": 18238,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18212,
											"end": 18238,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18212,
											"end": 18238,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18284,
											"end": 18293,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18278,
											"end": 18282,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18274,
											"end": 18294,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18270,
											"end": 18271,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18259,
											"end": 18268,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18255,
											"end": 18272,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18248,
											"end": 18295,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18312,
											"end": 18443,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 18438,
											"end": 18442,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18312,
											"end": 18443,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 18312,
											"end": 18443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18312,
											"end": 18443,
											"name": "tag",
											"source": 11,
											"value": "515"
										},
										{
											"begin": 18312,
											"end": 18443,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18304,
											"end": 18443,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18304,
											"end": 18443,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18031,
											"end": 18450,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18031,
											"end": 18450,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18031,
											"end": 18450,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18031,
											"end": 18450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18456,
											"end": 18679,
											"name": "tag",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 18456,
											"end": 18679,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18596,
											"end": 18630,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A207472616E7366657220746F20746865207A65726F20616464"
										},
										{
											"begin": 18592,
											"end": 18593,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18584,
											"end": 18590,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18580,
											"end": 18594,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18573,
											"end": 18631,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18665,
											"end": 18671,
											"name": "PUSH",
											"source": 11,
											"value": "7265737300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18660,
											"end": 18662,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18652,
											"end": 18658,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18648,
											"end": 18663,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18641,
											"end": 18672,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18456,
											"end": 18679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18456,
											"end": 18679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18685,
											"end": 19051,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 18685,
											"end": 19051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18827,
											"end": 18830,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18848,
											"end": 18915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 18912,
											"end": 18914,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 18907,
											"end": 18910,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18848,
											"end": 18915,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 18848,
											"end": 18915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18848,
											"end": 18915,
											"name": "tag",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 18848,
											"end": 18915,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18841,
											"end": 18915,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18841,
											"end": 18915,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18924,
											"end": 19017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 19013,
											"end": 19016,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18924,
											"end": 19017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "329"
										},
										{
											"begin": 18924,
											"end": 19017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18924,
											"end": 19017,
											"name": "tag",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 18924,
											"end": 19017,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19042,
											"end": 19044,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19037,
											"end": 19040,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19033,
											"end": 19045,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19026,
											"end": 19045,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19026,
											"end": 19045,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18685,
											"end": 19051,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18685,
											"end": 19051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18685,
											"end": 19051,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18685,
											"end": 19051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19057,
											"end": 19476,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 19057,
											"end": 19476,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19223,
											"end": 19227,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19261,
											"end": 19263,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19250,
											"end": 19259,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19246,
											"end": 19264,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19238,
											"end": 19264,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19238,
											"end": 19264,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19310,
											"end": 19319,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19304,
											"end": 19308,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19300,
											"end": 19320,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 19296,
											"end": 19297,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19285,
											"end": 19294,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19281,
											"end": 19298,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19274,
											"end": 19321,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19338,
											"end": 19469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 19464,
											"end": 19468,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 19338,
											"end": 19469,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 19338,
											"end": 19469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19338,
											"end": 19469,
											"name": "tag",
											"source": 11,
											"value": "521"
										},
										{
											"begin": 19338,
											"end": 19469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19330,
											"end": 19469,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19330,
											"end": 19469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19057,
											"end": 19476,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 19057,
											"end": 19476,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19057,
											"end": 19476,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19057,
											"end": 19476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19482,
											"end": 19814,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 19482,
											"end": 19814,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19603,
											"end": 19607,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19641,
											"end": 19643,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19630,
											"end": 19639,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19626,
											"end": 19644,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19618,
											"end": 19644,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19618,
											"end": 19644,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19654,
											"end": 19725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 19722,
											"end": 19723,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19711,
											"end": 19720,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19707,
											"end": 19724,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19698,
											"end": 19704,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 19654,
											"end": 19725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 19654,
											"end": 19725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19654,
											"end": 19725,
											"name": "tag",
											"source": 11,
											"value": "523"
										},
										{
											"begin": 19654,
											"end": 19725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19735,
											"end": 19807,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 19803,
											"end": 19805,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19792,
											"end": 19801,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19788,
											"end": 19806,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19779,
											"end": 19785,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19735,
											"end": 19807,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 19735,
											"end": 19807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19735,
											"end": 19807,
											"name": "tag",
											"source": 11,
											"value": "524"
										},
										{
											"begin": 19735,
											"end": 19807,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19482,
											"end": 19814,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 19482,
											"end": 19814,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19482,
											"end": 19814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19482,
											"end": 19814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19482,
											"end": 19814,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19482,
											"end": 19814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19820,
											"end": 19995,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 19820,
											"end": 19995,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19960,
											"end": 19987,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A20617070726F766520746F2063616C6C657200000000000000"
										},
										{
											"begin": 19956,
											"end": 19957,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19948,
											"end": 19954,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19944,
											"end": 19958,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19937,
											"end": 19988,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 19820,
											"end": 19995,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19820,
											"end": 19995,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20001,
											"end": 20367,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 20001,
											"end": 20367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20143,
											"end": 20146,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20164,
											"end": 20231,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 20228,
											"end": 20230,
											"name": "PUSH",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 20223,
											"end": 20226,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20164,
											"end": 20231,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 20164,
											"end": 20231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20164,
											"end": 20231,
											"name": "tag",
											"source": 11,
											"value": "527"
										},
										{
											"begin": 20164,
											"end": 20231,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20157,
											"end": 20231,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20157,
											"end": 20231,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20240,
											"end": 20333,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 20329,
											"end": 20332,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20240,
											"end": 20333,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 20240,
											"end": 20333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20240,
											"end": 20333,
											"name": "tag",
											"source": 11,
											"value": "528"
										},
										{
											"begin": 20240,
											"end": 20333,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20358,
											"end": 20360,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20353,
											"end": 20356,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20349,
											"end": 20361,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20342,
											"end": 20361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20342,
											"end": 20361,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20001,
											"end": 20367,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20001,
											"end": 20367,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20001,
											"end": 20367,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20001,
											"end": 20367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20373,
											"end": 20792,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 20373,
											"end": 20792,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20539,
											"end": 20543,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20577,
											"end": 20579,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20566,
											"end": 20575,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20562,
											"end": 20580,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20554,
											"end": 20580,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20554,
											"end": 20580,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20626,
											"end": 20635,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20620,
											"end": 20624,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20616,
											"end": 20636,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 20612,
											"end": 20613,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20601,
											"end": 20610,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 20597,
											"end": 20614,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20590,
											"end": 20637,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20654,
											"end": 20785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 20780,
											"end": 20784,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 20654,
											"end": 20785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 20654,
											"end": 20785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20654,
											"end": 20785,
											"name": "tag",
											"source": 11,
											"value": "530"
										},
										{
											"begin": 20654,
											"end": 20785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20646,
											"end": 20785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20646,
											"end": 20785,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20373,
											"end": 20792,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 20373,
											"end": 20792,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 20373,
											"end": 20792,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20373,
											"end": 20792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 20798,
											"end": 21035,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 20798,
											"end": 21035,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 20938,
											"end": 20972,
											"name": "PUSH",
											"source": 11,
											"value": "4552433732313A207472616E7366657220746F206E6F6E204552433732315265"
										},
										{
											"begin": 20934,
											"end": 20935,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 20926,
											"end": 20932,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20922,
											"end": 20936,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20915,
											"end": 20973,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21007,
											"end": 21027,
											"name": "PUSH",
											"source": 11,
											"value": "63656976657220696D706C656D656E7465720000000000000000000000000000"
										},
										{
											"begin": 21002,
											"end": 21004,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 20994,
											"end": 21000,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 20990,
											"end": 21005,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 20983,
											"end": 21028,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 20798,
											"end": 21035,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 20798,
											"end": 21035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21041,
											"end": 21407,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 21041,
											"end": 21407,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21183,
											"end": 21186,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21204,
											"end": 21271,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 21268,
											"end": 21270,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 21263,
											"end": 21266,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21204,
											"end": 21271,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 21204,
											"end": 21271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21204,
											"end": 21271,
											"name": "tag",
											"source": 11,
											"value": "533"
										},
										{
											"begin": 21204,
											"end": 21271,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21197,
											"end": 21271,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21197,
											"end": 21271,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21280,
											"end": 21373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 21369,
											"end": 21372,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21280,
											"end": 21373,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 21280,
											"end": 21373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21280,
											"end": 21373,
											"name": "tag",
											"source": 11,
											"value": "534"
										},
										{
											"begin": 21280,
											"end": 21373,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21398,
											"end": 21400,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 21393,
											"end": 21396,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21389,
											"end": 21401,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21382,
											"end": 21401,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21382,
											"end": 21401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21041,
											"end": 21407,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21041,
											"end": 21407,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21041,
											"end": 21407,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21041,
											"end": 21407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21413,
											"end": 21832,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 21413,
											"end": 21832,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21579,
											"end": 21583,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21617,
											"end": 21619,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 21606,
											"end": 21615,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 21602,
											"end": 21620,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21594,
											"end": 21620,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21594,
											"end": 21620,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21666,
											"end": 21675,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21660,
											"end": 21664,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21656,
											"end": 21676,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 21652,
											"end": 21653,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21641,
											"end": 21650,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 21637,
											"end": 21654,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 21630,
											"end": 21677,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21694,
											"end": 21825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 21820,
											"end": 21824,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 21694,
											"end": 21825,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 21694,
											"end": 21825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21694,
											"end": 21825,
											"name": "tag",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 21694,
											"end": 21825,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21686,
											"end": 21825,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21686,
											"end": 21825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21413,
											"end": 21832,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 21413,
											"end": 21832,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 21413,
											"end": 21832,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 21413,
											"end": 21832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 21838,
											"end": 22018,
											"name": "tag",
											"source": 11,
											"value": "224"
										},
										{
											"begin": 21838,
											"end": 22018,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 21886,
											"end": 21963,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21883,
											"end": 21884,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21876,
											"end": 21964,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 21983,
											"end": 21987,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 21980,
											"end": 21981,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 21973,
											"end": 21988,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22007,
											"end": 22011,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 22004,
											"end": 22005,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 21997,
											"end": 22012,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 22024,
											"end": 22101,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 22024,
											"end": 22101,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22061,
											"end": 22068,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22090,
											"end": 22095,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22079,
											"end": 22095,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22079,
											"end": 22095,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22024,
											"end": 22101,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22024,
											"end": 22101,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22024,
											"end": 22101,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22024,
											"end": 22101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22107,
											"end": 22225,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 22107,
											"end": 22225,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22194,
											"end": 22218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 22212,
											"end": 22217,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22194,
											"end": 22218,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 22194,
											"end": 22218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22194,
											"end": 22218,
											"name": "tag",
											"source": 11,
											"value": "540"
										},
										{
											"begin": 22194,
											"end": 22218,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22189,
											"end": 22192,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22182,
											"end": 22219,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22107,
											"end": 22225,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22107,
											"end": 22225,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22107,
											"end": 22225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22231,
											"end": 22563,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 22231,
											"end": 22563,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22352,
											"end": 22356,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22390,
											"end": 22392,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 22379,
											"end": 22388,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22375,
											"end": 22393,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22367,
											"end": 22393,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22367,
											"end": 22393,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22403,
											"end": 22474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 22471,
											"end": 22472,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22460,
											"end": 22469,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22456,
											"end": 22473,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22447,
											"end": 22453,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 22403,
											"end": 22474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 22403,
											"end": 22474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22403,
											"end": 22474,
											"name": "tag",
											"source": 11,
											"value": "542"
										},
										{
											"begin": 22403,
											"end": 22474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22484,
											"end": 22556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 22552,
											"end": 22554,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22541,
											"end": 22550,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 22537,
											"end": 22555,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22528,
											"end": 22534,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 22484,
											"end": 22556,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 22484,
											"end": 22556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22484,
											"end": 22556,
											"name": "tag",
											"source": 11,
											"value": "543"
										},
										{
											"begin": 22484,
											"end": 22556,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22231,
											"end": 22563,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 22231,
											"end": 22563,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22231,
											"end": 22563,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22231,
											"end": 22563,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22231,
											"end": 22563,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22231,
											"end": 22563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22569,
											"end": 22667,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 22569,
											"end": 22667,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22620,
											"end": 22626,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22654,
											"end": 22659,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 22648,
											"end": 22660,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 22638,
											"end": 22660,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22638,
											"end": 22660,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22569,
											"end": 22667,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22569,
											"end": 22667,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22569,
											"end": 22667,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22569,
											"end": 22667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22673,
											"end": 22841,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 22673,
											"end": 22841,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22756,
											"end": 22767,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22790,
											"end": 22796,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22785,
											"end": 22788,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22778,
											"end": 22797,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 22830,
											"end": 22834,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 22825,
											"end": 22828,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22821,
											"end": 22835,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 22806,
											"end": 22835,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 22806,
											"end": 22835,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22673,
											"end": 22841,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22673,
											"end": 22841,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22673,
											"end": 22841,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22673,
											"end": 22841,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22673,
											"end": 22841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22847,
											"end": 23220,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 22847,
											"end": 23220,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 22933,
											"end": 22936,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 22961,
											"end": 22999,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 22993,
											"end": 22998,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 22961,
											"end": 22999,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 22961,
											"end": 22999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 22961,
											"end": 22999,
											"name": "tag",
											"source": 11,
											"value": "547"
										},
										{
											"begin": 22961,
											"end": 22999,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23015,
											"end": 23085,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 23078,
											"end": 23084,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23073,
											"end": 23076,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 23015,
											"end": 23085,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 23015,
											"end": 23085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23015,
											"end": 23085,
											"name": "tag",
											"source": 11,
											"value": "548"
										},
										{
											"begin": 23015,
											"end": 23085,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23008,
											"end": 23085,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 23008,
											"end": 23085,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23094,
											"end": 23159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 23152,
											"end": 23158,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23147,
											"end": 23150,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 23140,
											"end": 23144,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23133,
											"end": 23138,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 23129,
											"end": 23145,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23094,
											"end": 23159,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 23094,
											"end": 23159,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23094,
											"end": 23159,
											"name": "tag",
											"source": 11,
											"value": "549"
										},
										{
											"begin": 23094,
											"end": 23159,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23184,
											"end": 23213,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 23206,
											"end": 23212,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23184,
											"end": 23213,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 23184,
											"end": 23213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23184,
											"end": 23213,
											"name": "tag",
											"source": 11,
											"value": "550"
										},
										{
											"begin": 23184,
											"end": 23213,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23179,
											"end": 23182,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 23175,
											"end": 23214,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23168,
											"end": 23214,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23168,
											"end": 23214,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22937,
											"end": 23220,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22847,
											"end": 23220,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 22847,
											"end": 23220,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 22847,
											"end": 23220,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22847,
											"end": 23220,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 22847,
											"end": 23220,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23226,
											"end": 23866,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 23226,
											"end": 23866,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23421,
											"end": 23425,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23459,
											"end": 23462,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 23448,
											"end": 23457,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 23444,
											"end": 23463,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23436,
											"end": 23463,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23436,
											"end": 23463,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23473,
											"end": 23544,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 23541,
											"end": 23542,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23530,
											"end": 23539,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23526,
											"end": 23543,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23517,
											"end": 23523,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 23473,
											"end": 23544,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 23473,
											"end": 23544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23473,
											"end": 23544,
											"name": "tag",
											"source": 11,
											"value": "552"
										},
										{
											"begin": 23473,
											"end": 23544,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23554,
											"end": 23626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 23622,
											"end": 23624,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 23611,
											"end": 23620,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23607,
											"end": 23625,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23598,
											"end": 23604,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 23554,
											"end": 23626,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 23554,
											"end": 23626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23554,
											"end": 23626,
											"name": "tag",
											"source": 11,
											"value": "553"
										},
										{
											"begin": 23554,
											"end": 23626,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23636,
											"end": 23708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 23704,
											"end": 23706,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 23693,
											"end": 23702,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23689,
											"end": 23707,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23680,
											"end": 23686,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 23636,
											"end": 23708,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 23636,
											"end": 23708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23636,
											"end": 23708,
											"name": "tag",
											"source": 11,
											"value": "554"
										},
										{
											"begin": 23636,
											"end": 23708,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23755,
											"end": 23764,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23749,
											"end": 23753,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23745,
											"end": 23765,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 23740,
											"end": 23742,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 23729,
											"end": 23738,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 23725,
											"end": 23743,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 23718,
											"end": 23766,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 23783,
											"end": 23859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 23854,
											"end": 23858,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23845,
											"end": 23851,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 23783,
											"end": 23859,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 23783,
											"end": 23859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23783,
											"end": 23859,
											"name": "tag",
											"source": 11,
											"value": "555"
										},
										{
											"begin": 23783,
											"end": 23859,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23775,
											"end": 23859,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23775,
											"end": 23859,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23226,
											"end": 23866,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 23226,
											"end": 23866,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 23226,
											"end": 23866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23226,
											"end": 23866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23226,
											"end": 23866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23226,
											"end": 23866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23226,
											"end": 23866,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23226,
											"end": 23866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23872,
											"end": 24013,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 23872,
											"end": 24013,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23928,
											"end": 23933,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 23959,
											"end": 23965,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23953,
											"end": 23966,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 23944,
											"end": 23966,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 23944,
											"end": 23966,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23975,
											"end": 24007,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "557"
										},
										{
											"begin": 24001,
											"end": 24006,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 23975,
											"end": 24007,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 23975,
											"end": 24007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 23975,
											"end": 24007,
											"name": "tag",
											"source": 11,
											"value": "557"
										},
										{
											"begin": 23975,
											"end": 24007,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 23872,
											"end": 24013,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 23872,
											"end": 24013,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 23872,
											"end": 24013,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23872,
											"end": 24013,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 23872,
											"end": 24013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24019,
											"end": 24368,
											"name": "tag",
											"source": 11,
											"value": "249"
										},
										{
											"begin": 24019,
											"end": 24368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24088,
											"end": 24094,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24137,
											"end": 24139,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 24125,
											"end": 24134,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24116,
											"end": 24123,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 24112,
											"end": 24135,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 24108,
											"end": 24140,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 24105,
											"end": 24224,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 24105,
											"end": 24224,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "559"
										},
										{
											"begin": 24105,
											"end": 24224,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 24143,
											"end": 24222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 24143,
											"end": 24222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 24143,
											"end": 24222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24143,
											"end": 24222,
											"name": "tag",
											"source": 11,
											"value": "560"
										},
										{
											"begin": 24143,
											"end": 24222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24105,
											"end": 24224,
											"name": "tag",
											"source": 11,
											"value": "559"
										},
										{
											"begin": 24105,
											"end": 24224,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24263,
											"end": 24264,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 24288,
											"end": 24351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "561"
										},
										{
											"begin": 24343,
											"end": 24350,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 24334,
											"end": 24340,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 24323,
											"end": 24332,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 24319,
											"end": 24341,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 24288,
											"end": 24351,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 24288,
											"end": 24351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 24288,
											"end": 24351,
											"name": "tag",
											"source": 11,
											"value": "561"
										},
										{
											"begin": 24288,
											"end": 24351,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 24278,
											"end": 24351,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24278,
											"end": 24351,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24234,
											"end": 24361,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24019,
											"end": 24368,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 24019,
											"end": 24368,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 24019,
											"end": 24368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24019,
											"end": 24368,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 24019,
											"end": 24368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								".deps/npm/@openzeppelin/contracts/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts/utils/Context.sol",
								".deps/npm/@openzeppelin/contracts/utils/Strings.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/Math.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"ans\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"approvedForAll\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0xb6fd0c751988e27436cd48287ec9a58d979a8568233d8aeb262460fe4746e694\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://463fb65613f275ab4d78335f16dc178179ead5d08dc80ba576f36dba613cb506\",\"dweb:/ipfs/Qmf3kGecWT8h3nRMGVDomRiaFQ2pp8i7jLLDTn3U5QgNQW\"]},\".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\".deps/npm/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\".deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 25,
								"contract": ".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": ".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 31,
								"contract": ".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 35,
								"contract": ".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 39,
								"contract": ".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 45,
								"contract": ".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/utils/Address.sol\":194:9363  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122040b4600d43af4846317533c764a4983e369acc4d2701a6df9dfec7c11975ce4f64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122040b4600d43af4846317533c764a4983e369acc4d2701a6df9dfec7c11975ce4f64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xB4 PUSH1 0xD NUMBER 0xAF BASEFEE CHAINID BALANCE PUSH22 0x33C764A4983E369ACC4D2701A6DF9DFEC7C11975CE4F PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:9169:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122040b4600d43af4846317533c764a4983e369acc4d2701a6df9dfec7c11975ce4f64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH 0xB4 PUSH1 0xD NUMBER 0xAF BASEFEE CHAINID BALANCE PUSH22 0x33C764A4983E369ACC4D2701A6DF9DFEC7C11975CE4F PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "194:9169:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 194,
									"end": 9363,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122040b4600d43af4846317533c764a4983e369acc4d2701a6df9dfec7c11975ce4f64736f6c63430008120033",
									".code": [
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 9363,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								".deps/npm/@openzeppelin/contracts/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts/utils/Context.sol",
								".deps/npm/@openzeppelin/contracts/utils/Strings.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/Math.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122004af087e7cfc141511c09ecb44889964dba39c326908a011ac5c95ef25b8093164736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004af087e7cfc141511c09ecb44889964dba39c326908a011ac5c95ef25b8093164736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xAF ADDMOD PUSH31 0x7CFC141511C09ECB44889964DBA39C326908A011AC5C95EF25B8093164736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "220:2559:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122004af087e7cfc141511c09ecb44889964dba39c326908a011ac5c95ef25b8093164736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV 0xAF ADDMOD PUSH31 0x7CFC141511C09ECB44889964DBA39C326908A011AC5C95EF25B8093164736F PUSH13 0x63430008120033000000000000 ",
							"sourceMap": "220:2559:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122004af087e7cfc141511c09ecb44889964dba39c326908a011ac5c95ef25b8093164736f6c63430008120033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								".deps/npm/@openzeppelin/contracts/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts/utils/Context.sol",
								".deps/npm/@openzeppelin/contracts/utils/Strings.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/Math.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cc60d619142539c74ac21b6a23798f2730f0977b223eaa2401d029326ecd420864736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc60d619142539c74ac21b6a23798f2730f0977b223eaa2401d029326ecd420864736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH1 0xD6 NOT EQ 0x25 CODECOPY 0xC7 0x4A 0xC2 SHL PUSH11 0x23798F2730F0977B223EAA 0x24 ADD 0xD0 0x29 ORIGIN PUSH15 0xCD420864736F6C6343000812003300 ",
							"sourceMap": "202:12582:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220cc60d619142539c74ac21b6a23798f2730f0977b223eaa2401d029326ecd420864736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH1 0xD6 NOT EQ 0x25 CODECOPY 0xC7 0x4A 0xC2 SHL PUSH11 0x23798F2730F0977B223EAA 0x24 ADD 0xD0 0x29 ORIGIN PUSH15 0xCD420864736F6C6343000812003300 ",
							"sourceMap": "202:12582:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc60d619142539c74ac21b6a23798f2730f0977b223eaa2401d029326ecd420864736f6c63430008120033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								".deps/npm/@openzeppelin/contracts/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts/utils/Context.sol",
								".deps/npm/@openzeppelin/contracts/utils/Strings.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/Math.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212201730d8873780b53529d8093e544019304ae1994a54bdbf295e1fbff413a93c7e64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201730d8873780b53529d8093e544019304ae1994a54bdbf295e1fbff413a93c7e64736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR ADDRESS 0xD8 DUP8 CALLDATACOPY DUP1 0xB5 CALLDATALOAD 0x29 0xD8 MULMOD RETURNDATACOPY SLOAD BLOCKHASH NOT ADDRESS 0x4A 0xE1 SWAP10 0x4A SLOAD 0xBD 0xBF 0x29 0x5E 0x1F 0xBF DELEGATECALL SGT 0xA9 EXTCODECOPY PUSH31 0x64736F6C634300081200330000000000000000000000000000000000000000 ",
							"sourceMap": "215:1047:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201730d8873780b53529d8093e544019304ae1994a54bdbf295e1fbff413a93c7e64736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR ADDRESS 0xD8 DUP8 CALLDATACOPY DUP1 0xB5 CALLDATALOAD 0x29 0xD8 MULMOD RETURNDATACOPY SLOAD BLOCKHASH NOT ADDRESS 0x4A 0xE1 SWAP10 0x4A SLOAD 0xBD 0xBF 0x29 0x5E 0x1F 0xBF DELEGATECALL SGT 0xA9 EXTCODECOPY PUSH31 0x64736F6C634300081200330000000000000000000000000000000000000000 ",
							"sourceMap": "215:1047:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201730d8873780b53529d8093e544019304ae1994a54bdbf295e1fbff413a93c7e64736f6c63430008120033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								".deps/npm/@openzeppelin/contracts/utils/Address.sol",
								".deps/npm/@openzeppelin/contracts/utils/Context.sol",
								".deps/npm/@openzeppelin/contracts/utils/Strings.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/Math.sol",
								".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Address": [
							1507
						],
						"Context": [
							1529
						],
						"ERC165": [
							1782
						],
						"ERC721": [
							1016
						],
						"IERC165": [
							1794
						],
						"IERC721": [
							1132
						],
						"IERC721Metadata": [
							1177
						],
						"IERC721Receiver": [
							1150
						],
						"Math": [
							2660
						],
						"SignedMath": [
							2765
						],
						"Strings": [
							1758
						]
					},
					"id": 1017,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "107:23:0"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1017,
							"sourceUnit": 1133,
							"src": "132:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1017,
							"sourceUnit": 1151,
							"src": "156:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1017,
							"sourceUnit": 1178,
							"src": "188:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1017,
							"sourceUnit": 1508,
							"src": "231:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 6,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1017,
							"sourceUnit": 1530,
							"src": "265:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1017,
							"sourceUnit": 1759,
							"src": "299:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 8,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1017,
							"sourceUnit": 1783,
							"src": "333:46:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 10,
										"name": "Context",
										"nameLocations": [
											"647:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1529,
										"src": "647:7:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "647:7:0"
								},
								{
									"baseName": {
										"id": 12,
										"name": "ERC165",
										"nameLocations": [
											"656:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1782,
										"src": "656:6:0"
									},
									"id": 13,
									"nodeType": "InheritanceSpecifier",
									"src": "656:6:0"
								},
								{
									"baseName": {
										"id": 14,
										"name": "IERC721",
										"nameLocations": [
											"664:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1132,
										"src": "664:7:0"
									},
									"id": 15,
									"nodeType": "InheritanceSpecifier",
									"src": "664:7:0"
								},
								{
									"baseName": {
										"id": 16,
										"name": "IERC721Metadata",
										"nameLocations": [
											"673:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1177,
										"src": "673:15:0"
									},
									"id": 17,
									"nodeType": "InheritanceSpecifier",
									"src": "673:15:0"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 9,
								"nodeType": "StructuredDocumentation",
								"src": "381:246:0",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1016,
							"linearizedBaseContracts": [
								1016,
								1177,
								1132,
								1782,
								1794,
								1529
							],
							"name": "ERC721",
							"nameLocation": "637:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 20,
									"libraryName": {
										"id": 18,
										"name": "Address",
										"nameLocations": [
											"701:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1507,
										"src": "701:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "695:26:0",
									"typeName": {
										"id": 19,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "713:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"global": false,
									"id": 23,
									"libraryName": {
										"id": 21,
										"name": "Strings",
										"nameLocations": [
											"732:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1758,
										"src": "732:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "726:26:0",
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "744:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "791:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1016,
									"src": "776:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "776:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "838:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1016,
									"src": "823:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "823:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 31,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "934:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1016,
									"src": "898:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 30,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 28,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "906:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "898:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 29,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "917:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 35,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1028:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1016,
									"src": "992:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 34,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 32,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1000:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "992:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 33,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1011:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 39,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1129:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1016,
									"src": "1093:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 38,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 36,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1101:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1093:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 37,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1112:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 45,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1252:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1016,
									"src": "1199:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 44,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 40,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1207:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1199:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 43,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 41,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1226:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1218:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 42,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1237:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "1446:57:0",
										"statements": [
											{
												"expression": {
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 53,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "1456:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 54,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "1464:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1456:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "1456:13:0"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 57,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1479:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 58,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 50,
														"src": "1489:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1479:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1479:17:0"
											}
										]
									},
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "1277:108:0",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 62,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1416:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1402:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 47,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1402:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1437:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1423:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 49,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1423:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1401:44:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1446:0:0"
									},
									"scope": 1016,
									"src": "1390:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1781,
										1793
									],
									"body": {
										"id": 92,
										"nodeType": "Block",
										"src": "1678:192:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 85,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 78,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 73,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1707:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 75,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1132,
																			"src": "1727:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1132_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1132_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 74,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1722:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1722:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1132",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1736:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1722:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1707:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 79,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1763:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 81,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1177,
																			"src": "1783:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1177_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1177_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 80,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1778:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 82,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1778:21:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1177",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1800:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1778:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1763:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1707:104:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 88,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 65,
																"src": "1851:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 86,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1827:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1016_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1833:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1781,
															"src": "1827:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1827:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1707:156:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 72,
												"id": 91,
												"nodeType": "Return",
												"src": "1688:175:0"
											}
										]
									},
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1509:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 93,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1579:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 69,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 67,
												"name": "ERC165",
												"nameLocations": [
													"1646:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1782,
												"src": "1646:6:0"
											},
											{
												"id": 68,
												"name": "IERC165",
												"nameLocations": [
													"1654:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1794,
												"src": "1654:7:0"
											}
										],
										"src": "1637:25:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1604:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1597:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 64,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1597:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1596:20:0"
									},
									"returnParameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "1672:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 70,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1672:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1671:6:0"
									},
									"scope": 1016,
									"src": "1570:300:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1057
									],
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "2014:576:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 103,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "2032:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2049:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2041:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 104,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2041:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 107,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2041:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2032:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2053:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															},
															"value": "ERC721: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6d05c90094f31cfeb8f0eb86f0a513af3f7f8992991fbde41b08aa7960677159",
																"typeString": "literal_string \"ERC721: address zero is not a valid owner\""
															}
														],
														"id": 102,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2024:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2024:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "2024:73:0"
											},
											{
												"assignments": [
													113
												],
												"declarations": [
													{
														"constant": false,
														"id": 113,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "2117:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 127,
														"src": "2112:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 112,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "2112:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 114,
												"nodeType": "VariableDeclarationStatement",
												"src": "2112:9:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2187:72:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2214:22:0",
															"value": {
																"name": "_balances.slot",
																"nodeType": "YulIdentifier",
																"src": "2222:14:0"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "2214:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 35,
														"isOffset": false,
														"isSlot": true,
														"src": "2222:14:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 113,
														"isOffset": false,
														"isSlot": false,
														"src": "2214:4:0",
														"valueSize": 1
													}
												],
												"id": 115,
												"nodeType": "InlineAssembly",
												"src": "2157:102:0"
											},
											{
												"assignments": [
													117
												],
												"declarations": [
													{
														"constant": false,
														"id": 117,
														"mutability": "mutable",
														"name": "location",
														"nameLocation": "2282:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 127,
														"src": "2274:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 116,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "2274:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 125,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 121,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "2314:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 122,
																	"name": "slot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 113,
																	"src": "2321:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 119,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2303:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2307:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "2303:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2303:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 118,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "2293:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2293:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2274:53:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2382:145:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2409:22:0",
															"value": {
																"arguments": [
																	{
																		"name": "location",
																		"nodeType": "YulIdentifier",
																		"src": "2422:8:0"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "2416:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2416:15:0"
															},
															"variableNames": [
																{
																	"name": "ans",
																	"nodeType": "YulIdentifier",
																	"src": "2409:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 100,
														"isOffset": false,
														"isSlot": false,
														"src": "2409:3:0",
														"valueSize": 1
													},
													{
														"declaration": 117,
														"isOffset": false,
														"isSlot": false,
														"src": "2422:8:0",
														"valueSize": 1
													}
												],
												"id": 126,
												"nodeType": "InlineAssembly",
												"src": "2351:176:0"
											}
										]
									},
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "1876:48:0",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1938:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 98,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1983:8:0"
									},
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1956:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "1948:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1948:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1947:15:0"
									},
									"returnParameters": {
										"id": 101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 100,
												"mutability": "mutable",
												"name": "ans",
												"nameLocation": "2009:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "2001:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 99,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2000:13:0"
									},
									"scope": 1016,
									"src": "1929:661:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1065
									],
									"body": {
										"id": 155,
										"nodeType": "Block",
										"src": "2728:138:0",
										"statements": [
											{
												"assignments": [
													138
												],
												"declarations": [
													{
														"constant": false,
														"id": 138,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "2746:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 155,
														"src": "2738:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 137,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2738:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 142,
												"initialValue": {
													"arguments": [
														{
															"id": 140,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "2763:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 139,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "2754:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2754:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2738:33:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 149,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 144,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 138,
																"src": "2789:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2806:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2798:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 145,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2798:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2798:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2789:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2810:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 143,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2781:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2781:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "ExpressionStatement",
												"src": "2781:56:0"
											},
											{
												"expression": {
													"id": 153,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 138,
													"src": "2854:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 136,
												"id": 154,
												"nodeType": "Return",
												"src": "2847:12:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "2596:46:0",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 156,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2656:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 133,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2701:8:0"
									},
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2672:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2664:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2663:17:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 156,
												"src": "2719:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2718:9:0"
									},
									"scope": 1016,
									"src": "2647:219:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1162
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "2997:29:0",
										"statements": [
											{
												"expression": {
													"id": 163,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "3014:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 162,
												"id": 164,
												"nodeType": "Return",
												"src": "3007:12:0"
											}
										]
									},
									"documentation": {
										"id": 157,
										"nodeType": "StructuredDocumentation",
										"src": "2872:51:0",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2937:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 159,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2964:8:0"
									},
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2941:2:0"
									},
									"returnParameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "2982:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 160,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2982:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2981:15:0"
									},
									"scope": 1016,
									"src": "2928:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1168
									],
									"body": {
										"id": 175,
										"nodeType": "Block",
										"src": "3161:31:0",
										"statements": [
											{
												"expression": {
													"id": 173,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "3178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 172,
												"id": 174,
												"nodeType": "Return",
												"src": "3171:14:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "3032:53:0",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3099:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 169,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3128:8:0"
									},
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3105:2:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "3146:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 170,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3146:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3145:15:0"
									},
									"scope": 1016,
									"src": "3090:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1176
									],
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "3346:188:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 186,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 179,
															"src": "3371:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 185,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "3356:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3356:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "3356:23:0"
											},
											{
												"assignments": [
													190
												],
												"declarations": [
													{
														"constant": false,
														"id": 190,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "3404:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 214,
														"src": "3390:21:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 189,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "3390:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 193,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 191,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "3414:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3414:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3390:34:0"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 196,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 190,
																		"src": "3447:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3441:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 194,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3441:5:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3441:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3456:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3441:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3465:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3441:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 211,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3525:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3441:86:0",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 205,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 190,
																		"src": "3493:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"id": 206,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 179,
																				"src": "3502:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3510:8:0",
																			"memberName": "toString",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1588,
																			"src": "3502:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3502:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 203,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "3476:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 204,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "3480:12:0",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "3476:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 209,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3476:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3469:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 201,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "3469:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3469:53:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 184,
												"id": 213,
												"nodeType": "Return",
												"src": "3434:93:0"
											}
										]
									},
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "3198:55:0",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "3267:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 181,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3313:8:0"
									},
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3284:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3276:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3275:17:0"
									},
									"returnParameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "3331:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 182,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3331:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3330:15:0"
									},
									"scope": 1016,
									"src": "3258:276:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 223,
										"nodeType": "Block",
										"src": "3842:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 221,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3859:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 220,
												"id": 222,
												"nodeType": "Return",
												"src": "3852:9:0"
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "3540:231:0",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3785:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:2:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "3827:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 218,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3827:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3826:15:0"
									},
									"scope": 1016,
									"src": "3776:92:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1105
									],
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "3995:336:0",
										"statements": [
											{
												"assignments": [
													234
												],
												"declarations": [
													{
														"constant": false,
														"id": 234,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4013:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 266,
														"src": "4005:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 233,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4005:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 239,
												"initialValue": {
													"arguments": [
														{
															"id": 237,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "4036:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 235,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "4021:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1016_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4028:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 156,
														"src": "4021:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4021:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4005:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 243,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 241,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 227,
																"src": "4062:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 242,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 234,
																"src": "4068:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4062:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76616c20746f2063757272656e74206f776e6572",
															"id": 244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4075:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															},
															"value": "ERC721: approval to current owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942",
																"typeString": "literal_string \"ERC721: approval to current owner\""
															}
														],
														"id": 240,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4054:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4054:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 246,
												"nodeType": "ExpressionStatement",
												"src": "4054:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 248,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "4143:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 249,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4143:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 250,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 234,
																	"src": "4159:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "4143:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 253,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 234,
																		"src": "4185:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 254,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1519,
																			"src": "4192:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4192:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 252,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 315,
																	"src": "4168:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4168:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4143:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4219:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															},
															"value": "ERC721: approve caller is not token owner or approved for all"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c6e14a63ffb144eeef7cce6988e5dce07c60a7e0a7b1ef25dbe18c61483e0a83",
																"typeString": "literal_string \"ERC721: approve caller is not token owner or approved for all\""
															}
														],
														"id": 247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4122:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4122:170:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "4122:170:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 262,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 227,
															"src": "4312:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 263,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 229,
															"src": "4316:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 261,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 790,
														"src": "4303:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4303:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "4303:21:0"
											}
										]
									},
									"documentation": {
										"id": 225,
										"nodeType": "StructuredDocumentation",
										"src": "3874:46:0",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3934:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 231,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3986:8:0"
									},
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3950:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3942:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3942:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3962:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "3954:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3941:29:0"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3995:0:0"
									},
									"scope": 1016,
									"src": "3925:406:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1121
									],
									"body": {
										"id": 284,
										"nodeType": "Block",
										"src": "4477:82:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 277,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 270,
															"src": "4502:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 276,
														"name": "_requireMinted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 828,
														"src": "4487:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
															"typeString": "function (uint256) view"
														}
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4487:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 279,
												"nodeType": "ExpressionStatement",
												"src": "4487:23:0"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 280,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 39,
														"src": "4528:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 282,
													"indexExpression": {
														"id": 281,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "4544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4528:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 275,
												"id": 283,
												"nodeType": "Return",
												"src": "4521:31:0"
											}
										]
									},
									"documentation": {
										"id": 268,
										"nodeType": "StructuredDocumentation",
										"src": "4337:50:0",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4401:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 272,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4450:8:0"
									},
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4421:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4413:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4413:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4412:17:0"
									},
									"returnParameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 285,
												"src": "4468:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4468:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4467:9:0"
									},
									"scope": 1016,
									"src": "4392:167:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1113
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4710:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 295,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1519,
																"src": "4739:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4739:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 297,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "4753:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 298,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "4763:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 294,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "4720:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4720:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "4720:52:0"
											}
										]
									},
									"documentation": {
										"id": 286,
										"nodeType": "StructuredDocumentation",
										"src": "4565:56:0",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4635:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 292,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4701:8:0"
									},
									"parameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4661:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4653:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4676:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "4671:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4671:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4652:33:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4710:0:0"
									},
									"scope": 1016,
									"src": "4626:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1131
									],
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "4963:222:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4981:144:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5002:4:0",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "owner",
																		"nodeType": "YulIdentifier",
																		"src": "5008:5:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4995:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4995:19:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4995:19:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5034:4:0",
																		"type": "",
																		"value": "0x20"
																	},
																	{
																		"name": "operator",
																		"nodeType": "YulIdentifier",
																		"src": "5040:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5027:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5027:22:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5027:22:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5062:46:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5096:4:0",
																				"type": "",
																				"value": "0x00"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5102:4:0",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "5086:9:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5086:21:0"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "5080:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5080:28:0"
															},
															"variableNames": [
																{
																	"name": "approvedForAll",
																	"nodeType": "YulIdentifier",
																	"src": "5062:14:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 311,
														"isOffset": false,
														"isSlot": false,
														"src": "5062:14:0",
														"valueSize": 1
													},
													{
														"declaration": 307,
														"isOffset": false,
														"isSlot": false,
														"src": "5040:8:0",
														"valueSize": 1
													},
													{
														"declaration": 305,
														"isOffset": false,
														"isSlot": false,
														"src": "5008:5:0",
														"valueSize": 1
													}
												],
												"id": 313,
												"nodeType": "InlineAssembly",
												"src": "4972:153:0"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "4785:55:0",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4854:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 309,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4924:8:0"
									},
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4879:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4871:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4894:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4886:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4886:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4870:33:0"
									},
									"returnParameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "approvedForAll",
												"nameLocation": "4947:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "4942:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 310,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4942:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4941:21:0"
									},
									"scope": 1016,
									"src": "4845:340:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1097
									],
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "5336:207:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 328,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "5425:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5425:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 330,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 322,
																	"src": "5439:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 327,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "5406:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5406:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 332,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5449:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 326,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5398:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "5398:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 336,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "5518:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 337,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "5524:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 338,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 322,
															"src": "5528:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 335,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "5508:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5508:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "5508:28:0"
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "5191:51:0",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 342,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5256:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 324,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5327:8:0"
									},
									"parameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5277:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "5269:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 317,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5269:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5291:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "5283:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5283:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5303:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 342,
												"src": "5295:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5268:43:0"
									},
									"returnParameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5336:0:0"
									},
									"scope": 1016,
									"src": "5247:296:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1087
									],
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "5702:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 354,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 345,
															"src": "5729:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 355,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 347,
															"src": "5735:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 356,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "5739:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5748:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 353,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															361,
															391
														],
														"referencedDeclaration": 391,
														"src": "5712:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5712:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "5712:39:0"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "5549:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5618:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 351,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5693:8:0"
									},
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5643:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5635:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5635:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5657:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5649:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5669:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "5661:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5634:43:0"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5702:0:0"
									},
									"scope": 1016,
									"src": "5609:149:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1077
									],
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "5936:164:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 376,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "5973:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5973:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 378,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 368,
																	"src": "5987:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 375,
																"name": "_isApprovedOrOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 496,
																"src": "5954:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view returns (bool)"
																}
															},
															"id": 379,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5954:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5997:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															},
															"value": "ERC721: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_12a8e5623d251e191fe4a291d9a59bcc01a4db7a1f5c20fc8de44358c18308af",
																"typeString": "literal_string \"ERC721: caller is not token owner or approved\""
															}
														],
														"id": 374,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5946:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5946:99:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "5946:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 384,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 364,
															"src": "6069:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "6075:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "6079:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 387,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "6088:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 383,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 420,
														"src": "6055:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6055:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "6055:38:0"
											}
										]
									},
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "5764:55:0",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "5833:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 372,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5927:8:0"
									},
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5858:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "5850:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5872:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "5864:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5864:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5884:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "5876:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5876:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5906:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "5893:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 369,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5893:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5849:62:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5936:0:0"
									},
									"scope": 1016,
									"src": "5824:276:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "7063:165:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 404,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "7083:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 405,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "7089:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 406,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 398,
															"src": "7093:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 403,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 776,
														"src": "7073:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7073:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 408,
												"nodeType": "ExpressionStatement",
												"src": "7073:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 411,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "7142:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 412,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 396,
																	"src": "7148:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 413,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 398,
																	"src": "7152:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 414,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 400,
																	"src": "7161:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 410,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "7119:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7119:47:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7168:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7111:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7111:110:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "7111:110:0"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "6106:850:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "6970:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6992:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "6984:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7006:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "6998:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6998:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7018:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "7010:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7010:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7040:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "7027:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 399,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7027:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6983:62:0"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7063:0:0"
									},
									"scope": 1016,
									"src": "6961:267:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "7416:480:0",
										"statements": [
											{
												"assignments": [
													429
												],
												"declarations": [
													{
														"constant": false,
														"id": 429,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "7436:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 443,
														"src": "7431:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 428,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "7431:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 430,
												"nodeType": "VariableDeclarationStatement",
												"src": "7431:9:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7492:70:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7519:20:0",
															"value": {
																"name": "_owners.slot",
																"nodeType": "YulIdentifier",
																"src": "7527:12:0"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "7519:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 31,
														"isOffset": false,
														"isSlot": true,
														"src": "7527:12:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 429,
														"isOffset": false,
														"isSlot": false,
														"src": "7519:4:0",
														"valueSize": 1
													}
												],
												"id": 431,
												"nodeType": "InlineAssembly",
												"src": "7462:100:0"
											},
											{
												"assignments": [
													433
												],
												"declarations": [
													{
														"constant": false,
														"id": 433,
														"mutability": "mutable",
														"name": "location",
														"nameLocation": "7585:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 443,
														"src": "7577:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 432,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7577:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 441,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 437,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 423,
																	"src": "7617:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 438,
																	"name": "slot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "7626:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 435,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "7606:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "7610:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "7606:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7606:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 434,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "7596:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7596:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7577:55:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7687:145:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7714:22:0",
															"value": {
																"arguments": [
																	{
																		"name": "location",
																		"nodeType": "YulIdentifier",
																		"src": "7727:8:0"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nodeType": "YulIdentifier",
																	"src": "7721:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7721:15:0"
															},
															"variableNames": [
																{
																	"name": "ans",
																	"nodeType": "YulIdentifier",
																	"src": "7714:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 426,
														"isOffset": false,
														"isSlot": false,
														"src": "7714:3:0",
														"valueSize": 1
													},
													{
														"declaration": 433,
														"isOffset": false,
														"isSlot": false,
														"src": "7727:8:0",
														"valueSize": 1
													}
												],
												"id": 442,
												"nodeType": "InlineAssembly",
												"src": "7656:176:0"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "7234:98:0",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist"
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "7346:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7363:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "7355:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7354:17:0"
									},
									"returnParameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "ans",
												"nameLocation": "7411:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "7403:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7402:13:0"
									},
									"scope": 1016,
									"src": "7337:559:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 461,
										"nodeType": "Block",
										"src": "8270:55:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 453,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "8296:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 452,
															"name": "_ownerOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "8287:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8287:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 457,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8316:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8308:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 455,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8308:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8308:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8287:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 451,
												"id": 460,
												"nodeType": "Return",
												"src": "8280:38:0"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "7902:292:0",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted (`_mint`),\n and stop existing when they are burned (`_burn`)."
									},
									"id": 462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "8208:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8224:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "8216:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8216:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8215:17:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "8264:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 449,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8263:6:0"
									},
									"scope": 1016,
									"src": "8199:126:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "8582:162:0",
										"statements": [
											{
												"assignments": [
													473
												],
												"declarations": [
													{
														"constant": false,
														"id": 473,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "8600:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 495,
														"src": "8592:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 472,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8592:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 478,
												"initialValue": {
													"arguments": [
														{
															"id": 476,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "8623:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 474,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "8608:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1016_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8615:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 156,
														"src": "8608:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8608:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8592:39:0"
											},
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 479,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "8649:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 480,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 473,
																		"src": "8660:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "8649:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"arguments": [
																		{
																			"id": 483,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 473,
																			"src": "8686:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 484,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 465,
																			"src": "8693:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 482,
																		"name": "isApprovedForAll",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 315,
																		"src": "8669:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address) view returns (bool)"
																		}
																	},
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8669:32:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "8649:52:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 488,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 467,
																			"src": "8717:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 487,
																		"name": "getApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 285,
																		"src": "8705:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																			"typeString": "function (uint256) view returns (address)"
																		}
																	},
																	"id": 489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8705:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 490,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 465,
																	"src": "8729:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "8705:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8649:87:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 493,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8648:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 471,
												"id": 494,
												"nodeType": "Return",
												"src": "8641:96:0"
											}
										]
									},
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "8331:147:0",
										"text": " @dev Returns whether `spender` is allowed to manage `tokenId`.\n Requirements:\n - `tokenId` must exist."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isApprovedOrOwner",
									"nameLocation": "8492:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8519:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "8511:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8511:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8536:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "8528:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8528:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8510:34:0"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "8576:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 469,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8576:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8575:6:0"
									},
									"scope": 1016,
									"src": "8483:261:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "9139:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 505,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "9159:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 506,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "9163:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9172:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 504,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															511,
															540
														],
														"referencedDeclaration": 540,
														"src": "9149:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9149:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "9149:26:0"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "8750:319:0",
										"text": " @dev Safely mints `tokenId` and transfers it to `to`.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "9083:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9101:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "9093:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9113:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "9105:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9092:29:0"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9139:0:0"
									},
									"scope": 1016,
									"src": "9074:108:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 539,
										"nodeType": "Block",
										"src": "9487:195:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 522,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "9503:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 516,
															"src": "9507:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 521,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 617,
														"src": "9497:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9497:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 525,
												"nodeType": "ExpressionStatement",
												"src": "9497:18:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9577:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 529,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "9569:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 528,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "9569:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9569:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 532,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 514,
																	"src": "9581:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 533,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 516,
																	"src": "9585:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 534,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 518,
																	"src": "9594:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 527,
																"name": "_checkOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 890,
																"src": "9546:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9546:53:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
															"id": 536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9613:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															},
															"value": "ERC721: transfer to non ERC721Receiver implementer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
															}
														],
														"id": 526,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9525:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9525:150:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 538,
												"nodeType": "ExpressionStatement",
												"src": "9525:150:0"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "9188:210:0",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "9412:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9430:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "9422:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9422:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9442:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "9434:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9464:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 540,
												"src": "9451:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 517,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9451:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9421:48:0"
									},
									"returnParameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9487:0:0"
									},
									"scope": 1016,
									"src": "9403:279:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 616,
										"nodeType": "Block",
										"src": "10065:859:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 549,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 543,
																"src": "10083:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10097:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10089:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 550,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10089:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10089:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10083:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 555,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10101:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															},
															"value": "ERC721: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6",
																"typeString": "literal_string \"ERC721: mint to the zero address\""
															}
														],
														"id": 548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10075:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10075:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 557,
												"nodeType": "ExpressionStatement",
												"src": "10075:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10154:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 560,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10163:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 559,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "10155:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10155:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 563,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10173:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 558,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10146:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10146:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "10146:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10244:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10236:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 567,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10236:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10236:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 571,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "10248:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 572,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "10252:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10261:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 566,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "10215:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10215:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 575,
												"nodeType": "ExpressionStatement",
												"src": "10215:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "10358:17:0",
															"subExpression": {
																"arguments": [
																	{
																		"id": 578,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 545,
																		"src": "10367:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 577,
																	"name": "_exists",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 462,
																	"src": "10359:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (uint256) view returns (bool)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10359:16:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20746f6b656e20616c7265616479206d696e746564",
															"id": 581,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10377:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															},
															"value": "ERC721: token already minted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57",
																"typeString": "literal_string \"ERC721: token already minted\""
															}
														],
														"id": 576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10350:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 582,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10350:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 583,
												"nodeType": "ExpressionStatement",
												"src": "10350:58:0"
											},
											{
												"id": 590,
												"nodeType": "UncheckedBlock",
												"src": "10419:360:0",
												"statements": [
													{
														"expression": {
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 584,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10750:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 586,
																"indexExpression": {
																	"id": 585,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 543,
																	"src": "10760:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10750:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 587,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10767:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "10750:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 589,
														"nodeType": "ExpressionStatement",
														"src": "10750:18:0"
													}
												]
											},
											{
												"expression": {
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 591,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "10789:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 593,
														"indexExpression": {
															"id": 592,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "10797:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10789:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 594,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 543,
														"src": "10808:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10789:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "10789:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10843:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10835:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 598,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10835:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10835:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "10847:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 603,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "10851:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 597,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "10826:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10826:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "EmitStatement",
												"src": "10821:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 609,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10898:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10890:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 607,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10890:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 610,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10890:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 611,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 543,
															"src": "10902:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 612,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 545,
															"src": "10906:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 613,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10915:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 606,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "10870:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 614,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10870:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 615,
												"nodeType": "ExpressionStatement",
												"src": "10870:47:0"
											}
										]
									},
									"documentation": {
										"id": 541,
										"nodeType": "StructuredDocumentation",
										"src": "9688:311:0",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 617,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "10013:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10027:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "10019:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10039:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "10031:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10018:29:0"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10065:0:0"
									},
									"scope": 1016,
									"src": "10004:920:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 683,
										"nodeType": "Block",
										"src": "11299:713:0",
										"statements": [
											{
												"assignments": [
													624
												],
												"declarations": [
													{
														"constant": false,
														"id": 624,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "11317:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 683,
														"src": "11309:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 623,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11309:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 629,
												"initialValue": {
													"arguments": [
														{
															"id": 627,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "11340:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 625,
															"name": "ERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1016,
															"src": "11325:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_ERC721_$1016_$",
																"typeString": "type(contract ERC721)"
															}
														},
														"id": 626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11332:7:0",
														"memberName": "ownerOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 156,
														"src": "11325:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11325:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11309:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 631,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "11380:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 634,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11395:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11387:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 632,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11387:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11387:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 636,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "11399:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 637,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11408:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 630,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "11359:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11359:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 639,
												"nodeType": "ExpressionStatement",
												"src": "11359:51:0"
											},
											{
												"expression": {
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 640,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 624,
														"src": "11512:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 643,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 620,
																"src": "11535:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 641,
																"name": "ERC721",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "11520:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721_$1016_$",
																	"typeString": "type(contract ERC721)"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11527:7:0",
															"memberName": "ownerOf",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 156,
															"src": "11520:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																"typeString": "function (uint256) view returns (address)"
															}
														},
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11520:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11512:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "11512:31:0"
											},
											{
												"expression": {
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11581:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 647,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "11588:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 649,
														"indexExpression": {
															"id": 648,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "11604:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11588:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "11581:31:0"
											},
											{
												"id": 658,
												"nodeType": "UncheckedBlock",
												"src": "11623:237:0",
												"statements": [
													{
														"expression": {
															"id": 656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 652,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "11828:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 654,
																"indexExpression": {
																	"id": 653,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 624,
																	"src": "11838:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "11828:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "-=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11848:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "11828:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 657,
														"nodeType": "ExpressionStatement",
														"src": "11828:21:0"
													}
												]
											},
											{
												"expression": {
													"id": 662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "11869:23:0",
													"subExpression": {
														"baseExpression": {
															"id": 659,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "11876:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 661,
														"indexExpression": {
															"id": 660,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "11884:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11876:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 663,
												"nodeType": "ExpressionStatement",
												"src": "11869:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 665,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "11917:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11932:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11924:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 666,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11924:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 669,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11924:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 670,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "11936:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 664,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "11908:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11908:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 672,
												"nodeType": "EmitStatement",
												"src": "11903:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 674,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 624,
															"src": "11975:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 677,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11990:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11982:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 675,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11982:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11982:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 679,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "11994:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12003:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 673,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "11955:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11955:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 682,
												"nodeType": "ExpressionStatement",
												"src": "11955:50:0"
											}
										]
									},
									"documentation": {
										"id": 618,
										"nodeType": "StructuredDocumentation",
										"src": "10930:315:0",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11259:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11273:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "11265:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11264:17:0"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11299:0:0"
									},
									"scope": 1016,
									"src": "11250:762:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 775,
										"nodeType": "Block",
										"src": "12415:1318:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 697,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 691,
																		"src": "12448:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 695,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1016,
																		"src": "12433:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1016_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 696,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12440:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 156,
																	"src": "12433:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12433:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 699,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "12460:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12433:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12466:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12425:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12425:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "12425:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 710,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 705,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 689,
																"src": "12524:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12538:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12530:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 706,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "12530:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12530:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12524:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12542:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															},
															"value": "ERC721: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4",
																"typeString": "literal_string \"ERC721: transfer to the zero address\""
															}
														],
														"id": 704,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12516:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12516:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "12516:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 715,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "12613:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 716,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "12619:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 717,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "12623:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12632:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 714,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 903,
														"src": "12592:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12592:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 720,
												"nodeType": "ExpressionStatement",
												"src": "12592:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 724,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 691,
																		"src": "12749:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 722,
																		"name": "ERC721",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1016,
																		"src": "12734:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_ERC721_$1016_$",
																			"typeString": "type(contract ERC721)"
																		}
																	},
																	"id": 723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "12741:7:0",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 156,
																	"src": "12734:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12734:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 726,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 687,
																"src": "12761:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "12734:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a207472616e736665722066726f6d20696e636f7272656374206f776e6572",
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12767:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															},
															"value": "ERC721: transfer from incorrect owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277f8ee9d5b4fc3c4149386f24de0fc1bbc63a8210e2197bfd1c0376a2ac5f48",
																"typeString": "literal_string \"ERC721: transfer from incorrect owner\""
															}
														],
														"id": 721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12726:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12726:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "12726:81:0"
											},
											{
												"expression": {
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "12869:31:0",
													"subExpression": {
														"baseExpression": {
															"id": 731,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "12876:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 733,
														"indexExpression": {
															"id": 732,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "12892:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12876:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "12869:31:0"
											},
											{
												"id": 756,
												"nodeType": "UncheckedBlock",
												"src": "12911:641:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 737,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "13404:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 739,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 35,
																				"src": "13418:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 741,
																			"indexExpression": {
																				"id": 740,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 687,
																				"src": "13428:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13418:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "31",
																			"id": 742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13435:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"id": 738,
																		"name": "safeSub",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1015,
																		"src": "13410:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 743,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13410:27:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 736,
																"name": "saveWithAssemblyBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "13380:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,uint256)"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13380:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 745,
														"nodeType": "ExpressionStatement",
														"src": "13380:58:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 747,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 687,
																	"src": "13509:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 749,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 35,
																				"src": "13523:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 751,
																			"indexExpression": {
																				"id": 750,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 689,
																				"src": "13533:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "13523:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "31",
																			"id": 752,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13538:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			}
																		],
																		"id": 748,
																		"name": "safeAdd",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1004,
																		"src": "13515:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13515:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 746,
																"name": "saveWithAssemblyBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "13485:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,uint256)"
																}
															},
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13485:56:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 755,
														"nodeType": "ExpressionStatement",
														"src": "13485:56:0"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 758,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "13620:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 759,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "13629:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 757,
														"name": "saveWithAssemblyOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 949,
														"src": "13598:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 760,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13598:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 761,
												"nodeType": "ExpressionStatement",
												"src": "13598:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 763,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "13656:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 764,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "13662:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 765,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "13666:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 762,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1031,
														"src": "13647:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13647:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 767,
												"nodeType": "EmitStatement",
												"src": "13642:32:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 769,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "13705:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 770,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 689,
															"src": "13711:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "13715:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 772,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13724:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 768,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "13685:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13685:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "13685:41:0"
											}
										]
									},
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "12018:313:0",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 776,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12345:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12363:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "12355:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12377:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "12369:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 688,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12369:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12389:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "12381:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12381:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12354:43:0"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12415:0:0"
									},
									"scope": 1016,
									"src": "12336:1397:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 789,
										"nodeType": "Block",
										"src": "13909:161:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 785,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "13989:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 786,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 779,
															"src": "13997:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 784,
														"name": "saveWithAssemblyTokenApproval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "13959:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 787,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13959:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 788,
												"nodeType": "ExpressionStatement",
												"src": "13959:41:0"
											}
										]
									},
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "13739:101:0",
										"text": " @dev Approve `to` to operate on `tokenId`\n Emits an {Approval} event."
									},
									"id": 790,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "13854:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13871:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "13863:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13863:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13883:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "13875:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13862:29:0"
									},
									"returnParameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13909:0:0"
									},
									"scope": 1016,
									"src": "13845:225:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 813,
										"nodeType": "Block",
										"src": "14299:253:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 803,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 801,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 793,
																"src": "14317:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 802,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 795,
																"src": "14326:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "14317:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20617070726f766520746f2063616c6c6572",
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14336:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															},
															"value": "ERC721: approve to caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05",
																"typeString": "literal_string \"ERC721: approve to caller\""
															}
														],
														"id": 800,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14309:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14309:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "14309:55:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 808,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "14463:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 809,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 795,
															"src": "14469:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 810,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "14478:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 807,
														"name": "saveNestedWithOperatorApproval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "14432:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14432:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 812,
												"nodeType": "ExpressionStatement",
												"src": "14432:55:0"
											}
										]
									},
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "14076:125:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 814,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "14215:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14242:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "14234:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14234:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "14257:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "14249:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "14272:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 814,
												"src": "14267:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 796,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14267:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14233:48:0"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14299:0:0"
									},
									"scope": 1016,
									"src": "14206:346:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "14699:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 822,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 817,
																	"src": "14725:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 821,
																"name": "_exists",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 462,
																"src": "14717:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (uint256) view returns (bool)"
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14717:16:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433732313a20696e76616c696420746f6b656e204944",
															"id": 824,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14735:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															},
															"value": "ERC721: invalid token ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b08d2b0fec7cc108ab049809a8beb42779d969a49299d0c317c907d9db22974f",
																"typeString": "literal_string \"ERC721: invalid token ID\""
															}
														],
														"id": 820,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14709:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14709:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "14709:53:0"
											}
										]
									},
									"documentation": {
										"id": 815,
										"nodeType": "StructuredDocumentation",
										"src": "14558:73:0",
										"text": " @dev Reverts if the `tokenId` has not been minted yet."
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireMinted",
									"nameLocation": "14645:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14668:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "14660:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14659:17:0"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14699:0:0"
									},
									"scope": 1016,
									"src": "14636:133:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 889,
										"nodeType": "Block",
										"src": "15476:676:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 842,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "15490:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15493:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1195,
														"src": "15490:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15490:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 887,
													"nodeType": "Block",
													"src": "16110:36:0",
													"statements": [
														{
															"expression": {
																"hexValue": "74727565",
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16131:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 841,
															"id": 886,
															"nodeType": "Return",
															"src": "16124:11:0"
														}
													]
												},
												"id": 888,
												"nodeType": "IfStatement",
												"src": "15486:660:0",
												"trueBody": {
													"id": 884,
													"nodeType": "Block",
													"src": "15507:597:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 864,
																		"nodeType": "Block",
																		"src": "15621:91:0",
																		"statements": [
																			{
																				"expression": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 862,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 858,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 856,
																						"src": "15646:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 859,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1150,
																								"src": "15656:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1150_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 860,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "15672:16:0",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1149,
																							"src": "15656:32:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 861,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "15689:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "15656:41:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "15646:51:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"functionReturnParameters": 841,
																				"id": 863,
																				"nodeType": "Return",
																				"src": "15639:58:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 865,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 857,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 856,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "15613:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 865,
																				"src": "15606:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 855,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "15606:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15605:15:0"
																	},
																	"src": "15597:115:0"
																},
																{
																	"block": {
																		"id": 881,
																		"nodeType": "Block",
																		"src": "15741:353:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 872,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 869,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 867,
																							"src": "15763:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 870,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "15770:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "15763:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 871,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "15780:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "15763:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 879,
																					"nodeType": "Block",
																					"src": "15890:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "15976:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "16013:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "16017:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "16009:3:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "16009:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "16032:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "16026:5:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "16026:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "16002:6:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "16002:38:0"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "16002:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "paris",
																							"externalReferences": [
																								{
																									"declaration": 867,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "16017:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 867,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "16032:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 878,
																							"nodeType": "InlineAssembly",
																							"src": "15967:95:0"
																						}
																					]
																				},
																				"id": 880,
																				"nodeType": "IfStatement",
																				"src": "15759:321:0",
																				"trueBody": {
																					"id": 877,
																					"nodeType": "Block",
																					"src": "15783:101:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e746572",
																										"id": 874,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "15812:52:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										},
																										"value": "ERC721: transfer to non ERC721Receiver implementer"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e",
																											"typeString": "literal_string \"ERC721: transfer to non ERC721Receiver implementer\""
																										}
																									],
																									"id": 873,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "15805:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 875,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "15805:60:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 876,
																							"nodeType": "ExpressionStatement",
																							"src": "15805:60:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 882,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 868,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 867,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "15733:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 882,
																				"src": "15720:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 866,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "15720:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "15719:21:0"
																	},
																	"src": "15713:381:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 849,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1519,
																			"src": "15562:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15562:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 851,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 831,
																		"src": "15576:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 852,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 835,
																		"src": "15582:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 853,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 837,
																		"src": "15591:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 846,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 833,
																				"src": "15541:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 845,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1150,
																			"src": "15525:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1150_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15525:19:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1150",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 848,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "15545:16:0",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1149,
																	"src": "15525:36:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 854,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15525:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 883,
															"nodeType": "TryStatement",
															"src": "15521:573:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "14775:541:0",
										"text": " @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\n The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call\n @return bool whether the call correctly returned the expected magic value"
									},
									"id": 890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "15330:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15370:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "15362:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15362:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15392:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "15384:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "15412:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "15404:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15404:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15442:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "15429:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 836,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15429:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15352:100:0"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "15470:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 839,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15470:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15469:6:0"
									},
									"scope": 1016,
									"src": "15321:831:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 902,
										"nodeType": "Block",
										"src": "16982:2:0",
										"statements": []
									},
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "16158:705:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens will be transferred to `to`.\n - When `from` is zero, the tokens will be minted for `to`.\n - When `to` is zero, ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 903,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "16877:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16906:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "16898:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 895,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16920:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "16912:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16912:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "16932:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "16924:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "16954:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 903,
												"src": "16946:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16897:67:0"
									},
									"returnParameters": {
										"id": 901,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16982:0:0"
									},
									"scope": 1016,
									"src": "16868:116:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "17803:2:0",
										"statements": []
									},
									"documentation": {
										"id": 904,
										"nodeType": "StructuredDocumentation",
										"src": "16990:695:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting and burning. If {ERC721Consecutive} is\n used, the hook may be called as part of a consecutive (batch) mint, as indicated by `batchSize` greater than 1.\n Calling conditions:\n - When `from` and `to` are both non-zero, ``from``'s tokens were transferred to `to`.\n - When `from` is zero, the tokens were minted for `to`.\n - When `to` is zero, ``from``'s tokens were burned.\n - `from` and `to` are never both zero.\n - `batchSize` is non-zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "17699:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 906,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "17727:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "17719:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 905,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 908,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17741:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "17733:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17733:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "firstTokenId",
												"nameLocation": "17753:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "17745:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "batchSize",
												"nameLocation": "17775:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "17767:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 911,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17767:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17718:67:0"
									},
									"returnParameters": {
										"id": 914,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17803:0:0"
									},
									"scope": 1016,
									"src": "17690:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "18360:45:0",
										"statements": [
											{
												"expression": {
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 924,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "18370:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 926,
														"indexExpression": {
															"id": 925,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "18380:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18370:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 927,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 921,
														"src": "18392:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18370:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 929,
												"nodeType": "ExpressionStatement",
												"src": "18370:28:0"
											}
										]
									},
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "17811:409:0",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n WARNING: Anyone calling this MUST ensure that the balances remain consistent with the ownership. The invariant\n being that for any address `a` the value returned by `balanceOf(a)` must be equal to the number of tokens such\n that `ownerOf(tokenId)` is `a`."
									},
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "__unsafe_increaseBalance",
									"nameLocation": "18293:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18326:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "18318:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18318:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "18343:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 931,
												"src": "18335:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18335:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18317:33:0"
									},
									"returnParameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18360:0:0"
									},
									"scope": 1016,
									"src": "18284:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "18495:470:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18527:423:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18552:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_user",
																		"nodeType": "YulIdentifier",
																		"src": "18555:5:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18545:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "18545:16:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18545:16:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18638:2:0",
																		"type": "",
																		"value": "32"
																	},
																	{
																		"name": "_balances.slot",
																		"nodeType": "YulIdentifier",
																		"src": "18642:14:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18631:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "18631:26:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18631:26:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18746:28:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18768:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18771:2:0",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "18758:9:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "18758:16:0"
															},
															"variables": [
																{
																	"name": "hash",
																	"nodeType": "YulTypedName",
																	"src": "18750:4:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "hash",
																		"nodeType": "YulIdentifier",
																		"src": "18862:4:0"
																	},
																	{
																		"name": "_amount",
																		"nodeType": "YulIdentifier",
																		"src": "18868:7:0"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "18855:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "18855:21:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18855:21:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 935,
														"isOffset": false,
														"isSlot": false,
														"src": "18868:7:0",
														"valueSize": 1
													},
													{
														"declaration": 35,
														"isOffset": false,
														"isSlot": true,
														"src": "18642:14:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 933,
														"isOffset": false,
														"isSlot": false,
														"src": "18555:5:0",
														"valueSize": 1
													}
												],
												"id": 938,
												"nodeType": "InlineAssembly",
												"src": "18506:444:0"
											}
										]
									},
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saveWithAssemblyBalance",
									"nameLocation": "18426:23:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "18458:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "18450:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18450:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 935,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "18470:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "18465:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 934,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "18465:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18449:29:0"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18495:0:0"
									},
									"scope": 1016,
									"src": "18417:548:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 948,
										"nodeType": "Block",
										"src": "19053:468:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "19085:421:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19110:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_amount",
																		"nodeType": "YulIdentifier",
																		"src": "19113:7:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19103:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19103:18:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19103:18:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19198:2:0",
																		"type": "",
																		"value": "32"
																	},
																	{
																		"name": "_owners.slot",
																		"nodeType": "YulIdentifier",
																		"src": "19202:12:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19191:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19191:24:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19191:24:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19304:28:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19326:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19329:2:0",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "19316:9:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19316:16:0"
															},
															"variables": [
																{
																	"name": "hash",
																	"nodeType": "YulTypedName",
																	"src": "19308:4:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "hash",
																		"nodeType": "YulIdentifier",
																		"src": "19420:4:0"
																	},
																	{
																		"name": "_user",
																		"nodeType": "YulIdentifier",
																		"src": "19426:5:0"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "19413:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19413:19:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19413:19:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 942,
														"isOffset": false,
														"isSlot": false,
														"src": "19113:7:0",
														"valueSize": 1
													},
													{
														"declaration": 31,
														"isOffset": false,
														"isSlot": true,
														"src": "19202:12:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 944,
														"isOffset": false,
														"isSlot": false,
														"src": "19426:5:0",
														"valueSize": 1
													}
												],
												"id": 947,
												"nodeType": "InlineAssembly",
												"src": "19064:442:0"
											}
										]
									},
									"id": 949,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saveWithAssemblyOwner",
									"nameLocation": "18985:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "19013:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "19008:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 941,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19008:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "19030:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 949,
												"src": "19022:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 943,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19022:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19006:30:0"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19053:0:0"
									},
									"scope": 1016,
									"src": "18976:545:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "19618:468:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "19650:421:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19675:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_amount",
																		"nodeType": "YulIdentifier",
																		"src": "19678:7:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19668:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19668:18:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19668:18:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19763:2:0",
																		"type": "",
																		"value": "32"
																	},
																	{
																		"name": "_owners.slot",
																		"nodeType": "YulIdentifier",
																		"src": "19767:12:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19756:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19756:24:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19756:24:0"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19869:28:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19891:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19894:2:0",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "19881:9:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19881:16:0"
															},
															"variables": [
																{
																	"name": "hash",
																	"nodeType": "YulTypedName",
																	"src": "19873:4:0",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "hash",
																		"nodeType": "YulIdentifier",
																		"src": "19985:4:0"
																	},
																	{
																		"name": "_user",
																		"nodeType": "YulIdentifier",
																		"src": "19991:5:0"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "19978:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "19978:19:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19978:19:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 951,
														"isOffset": false,
														"isSlot": false,
														"src": "19678:7:0",
														"valueSize": 1
													},
													{
														"declaration": 31,
														"isOffset": false,
														"isSlot": true,
														"src": "19767:12:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 953,
														"isOffset": false,
														"isSlot": false,
														"src": "19991:5:0",
														"valueSize": 1
													}
												],
												"id": 956,
												"nodeType": "InlineAssembly",
												"src": "19629:442:0"
											}
										]
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saveWithAssemblyTokenApproval",
									"nameLocation": "19542:29:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "19578:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "19573:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19573:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "19595:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 958,
												"src": "19587:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19571:30:0"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19618:0:0"
									},
									"scope": 1016,
									"src": "19533:553:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 992,
										"nodeType": "Block",
										"src": "20185:397:0",
										"statements": [
											{
												"assignments": [
													968
												],
												"declarations": [
													{
														"constant": false,
														"id": 968,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "20203:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 992,
														"src": "20195:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 967,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "20195:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 969,
												"nodeType": "VariableDeclarationStatement",
												"src": "20195:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "20226:55:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20240:31:0",
															"value": {
																"name": "_operatorApprovals.slot",
																"nodeType": "YulIdentifier",
																"src": "20248:23:0"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "20240:4:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 45,
														"isOffset": false,
														"isSlot": true,
														"src": "20248:23:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 968,
														"isOffset": false,
														"isSlot": false,
														"src": "20240:4:0",
														"valueSize": 1
													}
												],
												"id": 970,
												"nodeType": "InlineAssembly",
												"src": "20217:64:0"
											},
											{
												"assignments": [
													972
												],
												"declarations": [
													{
														"constant": false,
														"id": 972,
														"mutability": "mutable",
														"name": "locationOfParentValue",
														"nameLocation": "20299:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 992,
														"src": "20291:29:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 971,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "20291:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 980,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 976,
																	"name": "_user1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 960,
																	"src": "20344:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 977,
																	"name": "slot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "20352:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 974,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20333:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 975,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "20337:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "20333:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20333:24:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 973,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "20323:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20323:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20291:67:0"
											},
											{
												"assignments": [
													982
												],
												"declarations": [
													{
														"constant": false,
														"id": 982,
														"mutability": "mutable",
														"name": "locationOfNestedValue",
														"nameLocation": "20428:21:0",
														"nodeType": "VariableDeclaration",
														"scope": 992,
														"src": "20420:29:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 981,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "20420:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 990,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 986,
																	"name": "_user2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "20473:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 987,
																	"name": "locationOfParentValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 972,
																	"src": "20481:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 984,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20462:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "20466:6:0",
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "20462:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20462:41:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 983,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "20452:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20452:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20420:84:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "20524:56:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "locationOfNestedValue",
																		"nodeType": "YulIdentifier",
																		"src": "20545:21:0"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "20568:1:0"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nodeType": "YulIdentifier",
																	"src": "20538:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "20538:32:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20538:32:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 964,
														"isOffset": false,
														"isSlot": false,
														"src": "20568:1:0",
														"valueSize": 1
													},
													{
														"declaration": 982,
														"isOffset": false,
														"isSlot": false,
														"src": "20545:21:0",
														"valueSize": 1
													}
												],
												"id": 991,
												"nodeType": "InlineAssembly",
												"src": "20515:65:0"
											}
										]
									},
									"id": 993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "saveNestedWithOperatorApproval",
									"nameLocation": "20101:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "_user1",
												"nameLocation": "20140:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "20132:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20132:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "_user2",
												"nameLocation": "20156:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "20148:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20148:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "20169:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "20164:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 963,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20164:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20131:40:0"
									},
									"returnParameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20185:0:0"
									},
									"scope": 1016,
									"src": "20092:490:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1003,
										"nodeType": "Block",
										"src": "20660:77:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "20683:43:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20701:11:0",
															"value": {
																"arguments": [
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "20708:1:0"
																	},
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "20710:1:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20704:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "20704:8:0"
															},
															"variableNames": [
																{
																	"name": "c",
																	"nodeType": "YulIdentifier",
																	"src": "20701:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 995,
														"isOffset": false,
														"isSlot": false,
														"src": "20708:1:0",
														"valueSize": 1
													},
													{
														"declaration": 997,
														"isOffset": false,
														"isSlot": false,
														"src": "20710:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1000,
														"isOffset": false,
														"isSlot": false,
														"src": "20701:1:0",
														"valueSize": 1
													}
												],
												"id": 1002,
												"nodeType": "InlineAssembly",
												"src": "20675:51:0"
											}
										]
									},
									"id": 1004,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeAdd",
									"nameLocation": "20597:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20610:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "20605:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 994,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20605:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "20618:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "20613:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20613:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20604:16:0"
									},
									"returnParameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "20648:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1004,
												"src": "20643:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 999,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20643:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20642:8:0"
									},
									"scope": 1016,
									"src": "20588:149:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1014,
										"nodeType": "Block",
										"src": "20815:102:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "20838:72:0",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20883:13:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "20884:11:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "a",
																					"nodeType": "YulIdentifier",
																					"src": "20891:1:0"
																				},
																				{
																					"name": "b",
																					"nodeType": "YulIdentifier",
																					"src": "20893:1:0"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nodeType": "YulIdentifier",
																				"src": "20887:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20887:8:0"
																		},
																		"variableNames": [
																			{
																				"name": "c",
																				"nodeType": "YulIdentifier",
																				"src": "20884:1:0"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "b",
																		"nodeType": "YulIdentifier",
																		"src": "20862:1:0"
																	},
																	{
																		"name": "a",
																		"nodeType": "YulIdentifier",
																		"src": "20864:1:0"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "20859:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "20859:7:0"
															},
															"nodeType": "YulIf",
															"src": "20856:40:0"
														}
													]
												},
												"evmVersion": "paris",
												"externalReferences": [
													{
														"declaration": 1006,
														"isOffset": false,
														"isSlot": false,
														"src": "20864:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1006,
														"isOffset": false,
														"isSlot": false,
														"src": "20891:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1008,
														"isOffset": false,
														"isSlot": false,
														"src": "20862:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1008,
														"isOffset": false,
														"isSlot": false,
														"src": "20893:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1011,
														"isOffset": false,
														"isSlot": false,
														"src": "20884:1:0",
														"valueSize": 1
													}
												],
												"id": 1013,
												"nodeType": "InlineAssembly",
												"src": "20830:80:0"
											}
										]
									},
									"id": 1015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeSub",
									"nameLocation": "20755:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1006,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "20768:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "20763:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1005,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20763:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1008,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "20776:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "20771:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1007,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20771:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20762:16:0"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "c",
												"nameLocation": "20806:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1015,
												"src": "20801:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "20801:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20800:8:0"
									},
									"scope": 1016,
									"src": "20746:171:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1017,
							"src": "628:20291:0",
							"usedErrors": []
						}
					],
					"src": "107:20813:0"
				},
				"id": 0
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1794
						],
						"IERC721": [
							1132
						]
					},
					"id": 1133,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1018,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:1"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1019,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1133,
							"sourceUnit": 1795,
							"src": "133:47:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1021,
										"name": "IERC165",
										"nameLocations": [
											"271:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1794,
										"src": "271:7:1"
									},
									"id": 1022,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:1"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1020,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:1",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1132,
							"linearizedBaseContracts": [
								1132,
								1794
							],
							"name": "IERC721",
							"nameLocation": "260:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1023,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:1",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1031,
									"name": "Transfer",
									"nameLocation": "384:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "393:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1027,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "415:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1026,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "435:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:1"
									},
									"src": "378:82:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:1",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1040,
									"name": "Approval",
									"nameLocation": "571:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "580:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "603:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "629:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:1"
									},
									"src": "565:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1041,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:1",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1049,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1043,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "803:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "826:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1044,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "852:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1046,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:1"
									},
									"src": "782:85:1"
								},
								{
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:1",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "973:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:1"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1055,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1057,
												"src": "1011:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:1"
									},
									"scope": 1132,
									"src": "954:74:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:1",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1065,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1187:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:1"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1065,
												"src": "1227:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:1"
									},
									"scope": 1132,
									"src": "1170:72:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1066,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1843:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1835:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1067,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1835:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1070,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1857:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1849:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1069,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1849:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1072,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1869:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1861:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1071,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1861:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1893:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1077,
												"src": "1878:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1073,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1878:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:64:1"
									},
									"returnParameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:1"
									},
									"scope": 1132,
									"src": "1809:99:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "1914:687:1",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1087,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2615:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2640:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "2632:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1079,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2632:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2654:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "2646:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1081,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2646:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1084,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2666:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1087,
												"src": "2658:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1083,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2658:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2631:43:1"
									},
									"returnParameters": {
										"id": 1086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2683:0:1"
									},
									"scope": 1132,
									"src": "2606:78:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1088,
										"nodeType": "StructuredDocumentation",
										"src": "2690:732:1",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1097,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3436:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3457:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "3449:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3471:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "3463:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3463:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3483:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1097,
												"src": "3475:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3475:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3448:43:1"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3500:0:1"
									},
									"scope": 1132,
									"src": "3427:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1098,
										"nodeType": "StructuredDocumentation",
										"src": "3507:452:1",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1105,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3973:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3989:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "3981:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3981:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4001:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1105,
												"src": "3993:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1101,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3980:29:1"
									},
									"returnParameters": {
										"id": 1104,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4018:0:1"
									},
									"scope": 1132,
									"src": "3964:55:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1106,
										"nodeType": "StructuredDocumentation",
										"src": "4025:309:1",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4348:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4374:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "4366:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4366:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4389:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "4384:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1109,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4384:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:33:1"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4407:0:1"
									},
									"scope": 1132,
									"src": "4339:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "4414:139:1",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4567:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4587:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "4579:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1115,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4579:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4578:17:1"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4627:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "4619:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1118,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4619:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4618:18:1"
									},
									"scope": 1132,
									"src": "4558:79:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1122,
										"nodeType": "StructuredDocumentation",
										"src": "4643:138:1",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1131,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4795:16:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4820:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "4812:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4835:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "4827:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4811:33:1"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1131,
												"src": "4868:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1128,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4868:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4867:6:1"
									},
									"scope": 1132,
									"src": "4786:88:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1133,
							"src": "250:4626:1",
							"usedErrors": []
						}
					],
					"src": "108:4769:1"
				},
				"id": 1
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1150
						]
					},
					"id": 1151,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1134,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "116:23:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1135,
								"nodeType": "StructuredDocumentation",
								"src": "141:152:2",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1150,
							"linearizedBaseContracts": [
								1150
							],
							"name": "IERC721Receiver",
							"nameLocation": "304:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1136,
										"nodeType": "StructuredDocumentation",
										"src": "326:493:2",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1149,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "833:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "867:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "859:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1137,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "893:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "885:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "885:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "915:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "907:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1144,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "947:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "932:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1143,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "932:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:108:2"
									},
									"returnParameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "976:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1146,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "976:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "975:8:2"
									},
									"scope": 1150,
									"src": "824:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1151,
							"src": "294:692:2",
							"usedErrors": []
						}
					],
					"src": "116:871:2"
				},
				"id": 2
			},
			".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC165": [
							1794
						],
						"IERC721": [
							1132
						],
						"IERC721Metadata": [
							1177
						]
					},
					"id": 1178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1152,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1133,
							"src": "137:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1155,
										"name": "IERC721",
										"nameLocations": [
											"326:7:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1132,
										"src": "326:7:3"
									},
									"id": 1156,
									"nodeType": "InheritanceSpecifier",
									"src": "326:7:3"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1154,
								"nodeType": "StructuredDocumentation",
								"src": "163:133:3",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1177,
							"linearizedBaseContracts": [
								1177,
								1132,
								1794
							],
							"name": "IERC721Metadata",
							"nameLocation": "307:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "340:58:3",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "412:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:2:3"
									},
									"returnParameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "442:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1159,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "442:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "441:15:3"
									},
									"scope": 1177,
									"src": "403:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "463:60:3",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "537:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "543:2:3"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1168,
												"src": "569:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1165,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "569:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "568:15:3"
									},
									"scope": 1177,
									"src": "528:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "590:90:3",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1176,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "694:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "711:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "703:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "703:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "702:17:3"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "743:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1173,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "743:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "742:15:3"
									},
									"scope": 1177,
									"src": "685:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1178,
							"src": "297:463:3",
							"usedErrors": []
						}
					],
					"src": "112:649:3"
				},
				"id": 3
			},
			".deps/npm/@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1507
						]
					},
					"id": 1508,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1180,
								"nodeType": "StructuredDocumentation",
								"src": "126:67:4",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1507,
							"linearizedBaseContracts": [
								1507
							],
							"name": "Address",
							"nameLocation": "202:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1194,
										"nodeType": "Block",
										"src": "1478:254:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1192,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1188,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "1702:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1710:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "1702:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1715:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1702:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1724:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1702:23:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1187,
												"id": 1193,
												"nodeType": "Return",
												"src": "1695:30:4"
											}
										]
									},
									"documentation": {
										"id": 1181,
										"nodeType": "StructuredDocumentation",
										"src": "216:1191:4",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 1195,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "1421:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1440:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1432:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1432:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1431:17:4"
									},
									"returnParameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1195,
												"src": "1472:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1185,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1472:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1471:6:4"
									},
									"scope": 1507,
									"src": "1412:320:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "2718:241:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1206,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2744:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1507",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1507",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1205,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2736:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1204,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2736:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2736:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2750:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "2736:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1209,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "2761:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2736:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2769:31:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 1203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2728:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2728:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1213,
												"nodeType": "ExpressionStatement",
												"src": "2728:73:4"
											},
											{
												"assignments": [
													1215,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1215,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "2818:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1228,
														"src": "2813:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1214,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2813:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1222,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2861:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1216,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "2831:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2841:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "2831:14:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1218,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "2853:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2831:29:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2831:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2812:52:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1224,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1215,
															"src": "2882:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2891:60:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 1223,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2874:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2874:78:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1227,
												"nodeType": "ExpressionStatement",
												"src": "2874:78:4"
											}
										]
									},
									"documentation": {
										"id": 1196,
										"nodeType": "StructuredDocumentation",
										"src": "1738:904:4",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "2656:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2682:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "2666:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2666:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2701:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "2693:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2665:43:4"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2718:0:4"
									},
									"scope": 1507,
									"src": "2647:312:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "3790:96:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1240,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1232,
															"src": "3829:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1241,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1234,
															"src": "3837:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3843:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1243,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3846:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 1239,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1287,
															1331
														],
														"referencedDeclaration": 1331,
														"src": "3807:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3807:72:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1238,
												"id": 1245,
												"nodeType": "Return",
												"src": "3800:79:4"
											}
										]
									},
									"documentation": {
										"id": 1230,
										"nodeType": "StructuredDocumentation",
										"src": "2965:731:4",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "3710:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3731:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "3723:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3723:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3752:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "3739:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1233,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3739:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3722:35:4"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "3776:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1236,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3776:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3775:14:4"
									},
									"scope": 1507,
									"src": "3701:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1266,
										"nodeType": "Block",
										"src": "4255:76:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1260,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1250,
															"src": "4294:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1261,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1252,
															"src": "4302:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4308:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 1263,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1254,
															"src": "4311:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1259,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1287,
															1331
														],
														"referencedDeclaration": 1331,
														"src": "4272:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4272:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1258,
												"id": 1265,
												"nodeType": "Return",
												"src": "4265:59:4"
											}
										]
									},
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "3892:211:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "4117:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4147:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "4139:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4139:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4176:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "4163:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1251,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4163:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "4204:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "4190:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1253,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4190:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4129:93:4"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "4241:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4241:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4240:14:4"
									},
									"scope": 1507,
									"src": "4108:223:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "4806:111:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1280,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "4845:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1281,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1272,
															"src": "4853:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1282,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1274,
															"src": "4859:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4866:43:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 1279,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1287,
															1331
														],
														"referencedDeclaration": 1331,
														"src": "4823:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4823:87:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1285,
												"nodeType": "Return",
												"src": "4816:94:4"
											}
										]
									},
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "4337:351:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 1287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "4702:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4732:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "4724:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4753:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "4740:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1271,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4740:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4767:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "4759:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1273,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4759:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4723:50:4"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "4792:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1276,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4792:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4791:14:4"
									},
									"scope": 1507,
									"src": "4693:224:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "5344:267:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1304,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5370:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$1507",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$1507",
																				"typeString": "library Address"
																			}
																		],
																		"id": 1303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5362:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1302,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5362:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5362:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:7:4",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "5362:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1307,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "5387:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5362:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 1309,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5394:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 1301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5354:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5354:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "5354:81:4"
											},
											{
												"assignments": [
													1313,
													1315
												],
												"declarations": [
													{
														"constant": false,
														"id": 1313,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5451:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1330,
														"src": "5446:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1312,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5446:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1315,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5473:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1330,
														"src": "5460:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1314,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5460:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1322,
												"initialValue": {
													"arguments": [
														{
															"id": 1320,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1292,
															"src": "5513:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1316,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1290,
																"src": "5487:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5494:4:4",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "5487:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1318,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1294,
																"src": "5506:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "5487:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5487:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5445:73:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1324,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1290,
															"src": "5562:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1325,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1313,
															"src": "5570:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1326,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1315,
															"src": "5579:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1327,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1296,
															"src": "5591:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1323,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "5535:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5535:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1300,
												"id": 1329,
												"nodeType": "Return",
												"src": "5528:76:4"
											}
										]
									},
									"documentation": {
										"id": 1288,
										"nodeType": "StructuredDocumentation",
										"src": "4923:237:4",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "5174:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5213:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "5205:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5205:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5242:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "5229:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1291,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5229:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1294,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5264:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "5256:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1293,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "5293:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "5279:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5279:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:116:4"
									},
									"returnParameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "5330:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1298,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5330:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5329:14:4"
									},
									"scope": 1507,
									"src": "5165:446:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1347,
										"nodeType": "Block",
										"src": "5888:97:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1342,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "5924:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1343,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "5932:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 1344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5938:39:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 1341,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1348,
															1377
														],
														"referencedDeclaration": 1377,
														"src": "5905:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5905:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1340,
												"id": 1346,
												"nodeType": "Return",
												"src": "5898:80:4"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "5617:166:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "5797:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "5824:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "5816:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5816:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5845:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "5832:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1335,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5832:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5815:35:4"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "5874:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1338,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5874:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5873:14:4"
									},
									"scope": 1507,
									"src": "5788:197:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1376,
										"nodeType": "Block",
										"src": "6327:168:4",
										"statements": [
											{
												"assignments": [
													1361,
													1363
												],
												"declarations": [
													{
														"constant": false,
														"id": 1361,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "6343:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "6338:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1360,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "6338:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1363,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "6365:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1376,
														"src": "6352:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1362,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "6352:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1368,
												"initialValue": {
													"arguments": [
														{
															"id": 1366,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1353,
															"src": "6397:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1364,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "6379:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6386:10:4",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "6379:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6379:23:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6337:65:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1370,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1351,
															"src": "6446:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1371,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "6454:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1372,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1363,
															"src": "6463:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1373,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1355,
															"src": "6475:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1369,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "6419:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1374,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6419:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1359,
												"id": 1375,
												"nodeType": "Return",
												"src": "6412:76:4"
											}
										]
									},
									"documentation": {
										"id": 1349,
										"nodeType": "StructuredDocumentation",
										"src": "5991:173:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 1377,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "6178:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6214:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "6206:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6206:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1353,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6243:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "6230:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1352,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6230:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1355,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "6271:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "6257:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1354,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6257:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6196:93:4"
									},
									"returnParameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1377,
												"src": "6313:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1357,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6313:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6312:14:4"
									},
									"scope": 1507,
									"src": "6169:326:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1393,
										"nodeType": "Block",
										"src": "6771:101:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1388,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "6809:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1389,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "6817:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6823:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 1387,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1394,
															1423
														],
														"referencedDeclaration": 1423,
														"src": "6788:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6788:77:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1386,
												"id": 1392,
												"nodeType": "Return",
												"src": "6781:84:4"
											}
										]
									},
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "6501:168:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "6683:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "6712:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "6704:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1379,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6704:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6733:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "6720:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1381,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6720:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6703:35:4"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "6757:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1384,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6757:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6756:14:4"
									},
									"scope": 1507,
									"src": "6674:198:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1422,
										"nodeType": "Block",
										"src": "7213:170:4",
										"statements": [
											{
												"assignments": [
													1407,
													1409
												],
												"declarations": [
													{
														"constant": false,
														"id": 1407,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "7229:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 1422,
														"src": "7224:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1406,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "7224:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1409,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "7251:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 1422,
														"src": "7238:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1408,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "7238:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1414,
												"initialValue": {
													"arguments": [
														{
															"id": 1412,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1399,
															"src": "7285:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1410,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "7265:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7272:12:4",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "7265:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7265:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7223:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1416,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1397,
															"src": "7334:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1417,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "7342:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1418,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1409,
															"src": "7351:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 1419,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "7363:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1415,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1462,
														"src": "7307:26:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 1420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7307:69:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1405,
												"id": 1421,
												"nodeType": "Return",
												"src": "7300:76:4"
											}
										]
									},
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "6878:175:4",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 1423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "7067:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7105:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "7097:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7097:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1399,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7134:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "7121:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7121:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7162:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "7148:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1400,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7148:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7087:93:4"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1423,
												"src": "7199:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7199:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7198:14:4"
									},
									"scope": 1507,
									"src": "7058:325:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "7865:434:4",
										"statements": [
											{
												"condition": {
													"id": 1437,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1428,
													"src": "7879:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1459,
													"nodeType": "Block",
													"src": "8235:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1455,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1430,
																		"src": "8257:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1456,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1432,
																		"src": "8269:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1454,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "8249:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8249:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1458,
															"nodeType": "ExpressionStatement",
															"src": "8249:33:4"
														}
													]
												},
												"id": 1460,
												"nodeType": "IfStatement",
												"src": "7875:418:4",
												"trueBody": {
													"id": 1453,
													"nodeType": "Block",
													"src": "7888:341:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1438,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1430,
																		"src": "7906:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7917:6:4",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "7906:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1440,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7927:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "7906:22:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1450,
															"nodeType": "IfStatement",
															"src": "7902:286:4",
															"trueBody": {
																"id": 1449,
																"nodeType": "Block",
																"src": "7930:258:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 1444,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1426,
																							"src": "8132:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1443,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1195,
																						"src": "8121:10:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 1445,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "8121:18:4",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 1446,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "8141:31:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 1442,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "8113:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 1447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8113:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1448,
																		"nodeType": "ExpressionStatement",
																		"src": "8113:60:4"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1451,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1430,
																"src": "8208:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1436,
															"id": 1452,
															"nodeType": "Return",
															"src": "8201:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1424,
										"nodeType": "StructuredDocumentation",
										"src": "7389:277:4",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "7680:26:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "7724:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "7716:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7716:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "7745:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "7740:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1427,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7740:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "7775:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "7762:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1429,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7762:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1432,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "7809:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "7795:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1431,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7795:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7706:121:4"
									},
									"returnParameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1435,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "7851:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1434,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7851:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:14:4"
									},
									"scope": 1507,
									"src": "7671:628:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "8680:135:4",
										"statements": [
											{
												"condition": {
													"id": 1474,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1465,
													"src": "8694:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1483,
													"nodeType": "Block",
													"src": "8751:58:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1479,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1467,
																		"src": "8773:10:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 1480,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1469,
																		"src": "8785:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1478,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "8765:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 1481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8765:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1482,
															"nodeType": "ExpressionStatement",
															"src": "8765:33:4"
														}
													]
												},
												"id": 1484,
												"nodeType": "IfStatement",
												"src": "8690:119:4",
												"trueBody": {
													"id": 1477,
													"nodeType": "Block",
													"src": "8703:42:4",
													"statements": [
														{
															"expression": {
																"id": 1475,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "8724:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1473,
															"id": 1476,
															"nodeType": "Return",
															"src": "8717:17:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1463,
										"nodeType": "StructuredDocumentation",
										"src": "8305:210:4",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 1486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "8529:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "8560:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "8555:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1464,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8555:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8590:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "8577:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1466,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8577:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8624:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "8610:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1468,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8610:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8545:97:4"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "8666:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1471,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8666:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8665:14:4"
									},
									"scope": 1507,
									"src": "8520:295:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1505,
										"nodeType": "Block",
										"src": "8904:457:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1493,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "8980:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8991:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "8980:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9000:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8980:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1503,
													"nodeType": "Block",
													"src": "9310:45:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1500,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1490,
																		"src": "9331:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1499,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "9324:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9324:20:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1502,
															"nodeType": "ExpressionStatement",
															"src": "9324:20:4"
														}
													]
												},
												"id": 1504,
												"nodeType": "IfStatement",
												"src": "8976:379:4",
												"trueBody": {
													"id": 1498,
													"nodeType": "Block",
													"src": "9003:301:4",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "9161:133:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "9179:40:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "9208:10:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "9202:5:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:17:4"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "9183:15:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "9247:2:4",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "9251:10:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9243:3:4"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9243:19:4"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "9264:15:4"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9236:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9236:44:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9236:44:4"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 1488,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9208:10:4",
																	"valueSize": 1
																},
																{
																	"declaration": 1488,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "9251:10:4",
																	"valueSize": 1
																}
															],
															"id": 1497,
															"nodeType": "InlineAssembly",
															"src": "9152:142:4"
														}
													]
												}
											}
										]
									},
									"id": 1506,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "8830:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "8851:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "8838:23:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1487,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8838:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "8877:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1506,
												"src": "8863:26:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1489,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8863:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8837:53:4"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8904:0:4"
									},
									"scope": 1507,
									"src": "8821:540:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1508,
							"src": "194:9169:4",
							"usedErrors": []
						}
					],
					"src": "101:9263:4"
				},
				"id": 4
			},
			".deps/npm/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1529
						]
					},
					"id": 1530,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1509,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1510,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1529,
							"linearizedBaseContracts": [
								1529
							],
							"name": "Context",
							"nameLocation": "626:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "702:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1515,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "723:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1514,
												"id": 1517,
												"nodeType": "Return",
												"src": "712:17:5"
											}
										]
									},
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:5"
									},
									"returnParameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "693:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:5"
									},
									"scope": 1529,
									"src": "640:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1527,
										"nodeType": "Block",
										"src": "809:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1524,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "830:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1523,
												"id": 1526,
												"nodeType": "Return",
												"src": "819:15:5"
											}
										]
									},
									"id": 1528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:5"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1528,
												"src": "793:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1521,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:5"
									},
									"scope": 1529,
									"src": "742:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1530,
							"src": "608:235:5",
							"usedErrors": []
						}
					],
					"src": "86:758:5"
				},
				"id": 5
			},
			".deps/npm/@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2660
						],
						"SignedMath": [
							2765
						],
						"Strings": [
							1758
						]
					},
					"id": 1759,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1531,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:6"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1532,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1759,
							"sourceUnit": 2661,
							"src": "126:25:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1533,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1759,
							"sourceUnit": 2766,
							"src": "152:31:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1534,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:6",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1758,
							"linearizedBaseContracts": [
								1758
							],
							"name": "Strings",
							"nameLocation": "228:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1537,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 1758,
									"src": "242:54:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1535,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1536,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:6",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1540,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1758,
									"src": "302:43:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1538,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1539,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1587,
										"nodeType": "Block",
										"src": "518:625:6",
										"statements": [
											{
												"id": 1586,
												"nodeType": "UncheckedBlock",
												"src": "528:609:6",
												"statements": [
													{
														"assignments": [
															1549
														],
														"declarations": [
															{
																"constant": false,
																"id": 1549,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1586,
																"src": "552:14:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1548,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1556,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1552,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1543,
																		"src": "580:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1550,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2660,
																		"src": "569:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2660_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:6",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2497,
																	"src": "569:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:6"
													},
													{
														"assignments": [
															1558
														],
														"declarations": [
															{
																"constant": false,
																"id": 1558,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:6",
																"nodeType": "VariableDeclaration",
																"scope": 1586,
																"src": "604:20:6",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1557,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1563,
														"initialValue": {
															"arguments": [
																{
																	"id": 1561,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1549,
																	"src": "638:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1560,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1559,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:6"
													},
													{
														"assignments": [
															1565
														],
														"declarations": [
															{
																"constant": false,
																"id": 1565,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:6",
																"nodeType": "VariableDeclaration",
																"scope": 1586,
																"src": "659:11:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1564,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1566,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:6"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "740:67:6",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "758:35:6",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "781:2:6",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:6"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:6"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:6"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:6"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1558,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1549,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:6",
																"valueSize": 1
															},
															{
																"declaration": 1565,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:6",
																"valueSize": 1
															}
														],
														"id": 1567,
														"nodeType": "InlineAssembly",
														"src": "731:76:6"
													},
													{
														"body": {
															"id": 1582,
															"nodeType": "Block",
															"src": "833:267:6",
															"statements": [
																{
																	"expression": {
																		"id": 1570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:6",
																		"subExpression": {
																			"id": 1569,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1565,
																			"src": "851:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1571,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:6"
																},
																{
																	"AST": {
																		"nodeType": "YulBlock",
																		"src": "934:84:6",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:6"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "985:2:6",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:6"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:6"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:6"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:6"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:6"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:6"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:6"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:6"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "paris",
																	"externalReferences": [
																		{
																			"declaration": 1537,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1565,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:6",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1543,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:6",
																			"valueSize": 1
																		}
																	],
																	"id": 1572,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:6"
																},
																{
																	"expression": {
																		"id": 1575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1573,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1543,
																			"src": "1035:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1576,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:6"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1577,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1543,
																			"src": "1068:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1578,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1581,
																	"nodeType": "IfStatement",
																	"src": "1064:21:6",
																	"trueBody": {
																		"id": 1580,
																		"nodeType": "Break",
																		"src": "1080:5:6"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1583,
														"nodeType": "WhileStatement",
														"src": "820:280:6"
													},
													{
														"expression": {
															"id": 1584,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1558,
															"src": "1120:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1547,
														"id": 1585,
														"nodeType": "Return",
														"src": "1113:13:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1588,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "465:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:6"
									},
									"returnParameters": {
										"id": 1547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1546,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1588,
												"src": "503:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1545,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:6"
									},
									"scope": 1758,
									"src": "447:696:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1615,
										"nodeType": "Block",
										"src": "1313:103:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1602,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1600,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1591,
																			"src": "1354:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:6",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 1603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1609,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1591,
																					"src": "1400:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 1607,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2765,
																					"src": "1385:10:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$2765_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 1608,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:6",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2764,
																				"src": "1385:14:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 1610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1606,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1588,
																			1616
																		],
																		"referencedDeclaration": 1588,
																		"src": "1376:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 1611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 1598,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1599,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:6",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1596,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1595,
												"id": 1614,
												"nodeType": "Return",
												"src": "1323:86:6"
											}
										]
									},
									"documentation": {
										"id": 1589,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:6",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1261:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1590,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:6"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1616,
												"src": "1298:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1593,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:6"
									},
									"scope": 1758,
									"src": "1243:173:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1635,
										"nodeType": "Block",
										"src": "1595:100:6",
										"statements": [
											{
												"id": 1634,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:6",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1625,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "1648:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1628,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1619,
																				"src": "1667:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1626,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2660,
																				"src": "1655:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2660_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:6",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2620,
																			"src": "1655:11:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1624,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1636,
																	1712,
																	1732
																],
																"referencedDeclaration": 1712,
																"src": "1636:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1623,
														"id": 1633,
														"nodeType": "Return",
														"src": "1629:49:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1617,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1636,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "1542:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:6"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1622,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1636,
												"src": "1580:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1621,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:6"
									},
									"scope": 1758,
									"src": "1521:174:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1711,
										"nodeType": "Block",
										"src": "1908:347:6",
										"statements": [
											{
												"assignments": [
													1647
												],
												"declarations": [
													{
														"constant": false,
														"id": 1647,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:6",
														"nodeType": "VariableDeclaration",
														"scope": 1711,
														"src": "1918:19:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1646,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1656,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1651,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1641,
																	"src": "1954:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1648,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:6"
											},
											{
												"expression": {
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1657,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "1975:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1659,
														"indexExpression": {
															"hexValue": "30",
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1660,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1662,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:6"
											},
											{
												"expression": {
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1663,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "2000:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1665,
														"indexExpression": {
															"hexValue": "31",
															"id": 1664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1668,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:6"
											},
											{
												"body": {
													"id": 1697,
													"nodeType": "Block",
													"src": "2070:83:6",
													"statements": [
														{
															"expression": {
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1683,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1647,
																		"src": "2084:6:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1685,
																	"indexExpression": {
																		"id": 1684,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1670,
																		"src": "2091:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1686,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1537,
																		"src": "2096:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1690,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1689,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1687,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1639,
																			"src": "2105:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1692,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:6"
														},
														{
															"expression": {
																"id": 1695,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1693,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1639,
																	"src": "2131:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1694,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1696,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:6"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1677,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1670,
														"src": "2058:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1698,
												"initializationExpression": {
													"assignments": [
														1670
													],
													"declarations": [
														{
															"constant": false,
															"id": 1670,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:6",
															"nodeType": "VariableDeclaration",
															"scope": 1698,
															"src": "2030:9:6",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1669,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1676,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1672,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1641,
																"src": "2046:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:6"
												},
												"loopExpression": {
													"expression": {
														"id": 1681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:6",
														"subExpression": {
															"id": 1680,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "2067:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1682,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:6"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1702,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1700,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1639,
																"src": "2170:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1701,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 1699,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1708,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "2241:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1706,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:6",
															"typeDescriptions": {}
														}
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1645,
												"id": 1710,
												"nodeType": "Return",
												"src": "2227:21:6"
											}
										]
									},
									"documentation": {
										"id": 1637,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:6",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1712,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "1839:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "1854:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1640,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:6"
									},
									"returnParameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1712,
												"src": "1893:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1643,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:6"
									},
									"scope": 1758,
									"src": "1818:437:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1731,
										"nodeType": "Block",
										"src": "2480:76:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1725,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1715,
																			"src": "2525:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1723,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1721,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1728,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "2533:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1720,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1636,
															1712,
															1732
														],
														"referencedDeclaration": 1712,
														"src": "2497:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1719,
												"id": 1730,
												"nodeType": "Return",
												"src": "2490:59:6"
											}
										]
									},
									"documentation": {
										"id": 1713,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:6",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 1732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1715,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "2428:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:6"
									},
									"returnParameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1732,
												"src": "2465:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1717,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:6"
									},
									"scope": 1758,
									"src": "2407:149:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1756,
										"nodeType": "Block",
										"src": "2711:66:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1745,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "2744:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1743,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1742,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1751,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1737,
																		"src": "2767:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1749,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1748,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 1753,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1741,
												"id": 1755,
												"nodeType": "Return",
												"src": "2721:49:6"
											}
										]
									},
									"documentation": {
										"id": 1733,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:6",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "2648:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1734,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "2665:15:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1736,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:6"
									},
									"returnParameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "2705:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1739,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:6"
									},
									"scope": 1758,
									"src": "2633:144:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1759,
							"src": "220:2559:6",
							"usedErrors": []
						}
					],
					"src": "101:2679:6"
				},
				"id": 6
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1782
						],
						"IERC165": [
							1794
						]
					},
					"id": 1783,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1760,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:7"
						},
						{
							"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1761,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1783,
							"sourceUnit": 1795,
							"src": "124:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1763,
										"name": "IERC165",
										"nameLocations": [
											"754:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1794,
										"src": "754:7:7"
									},
									"id": 1764,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:7"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1762,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 1782,
							"linearizedBaseContracts": [
								1782,
								1794
							],
							"name": "ERC165",
							"nameLocation": "744:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1793
									],
									"body": {
										"id": 1780,
										"nodeType": "Block",
										"src": "920:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1773,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "937:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1775,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1794,
																	"src": "957:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1794_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1794_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1774,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1776,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1794",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1777,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1772,
												"id": 1779,
												"nodeType": "Return",
												"src": "930:47:7"
											}
										]
									},
									"documentation": {
										"id": 1765,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1769,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:7"
									},
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "856:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1766,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:7"
									},
									"returnParameters": {
										"id": 1772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1771,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1781,
												"src": "914:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1770,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:7"
									},
									"scope": 1782,
									"src": "829:155:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1783,
							"src": "726:260:7",
							"usedErrors": []
						}
					],
					"src": "99:888:7"
				},
				"id": 7
			},
			".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1794
						]
					},
					"id": 1795,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1784,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1785,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1794,
							"linearizedBaseContracts": [
								1794
							],
							"name": "IERC165",
							"nameLocation": "415:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1793,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "801:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1787,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:8"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "844:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:8"
									},
									"scope": 1794,
									"src": "774:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1795,
							"src": "405:447:8",
							"usedErrors": []
						}
					],
					"src": "100:753:8"
				},
				"id": 8
			},
			".deps/npm/@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2660
						]
					},
					"id": 2661,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1796,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1797,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:9",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2660,
							"linearizedBaseContracts": [
								2660
							],
							"name": "Math",
							"nameLocation": "210:4:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 1801,
									"members": [
										{
											"id": 1798,
											"name": "Down",
											"nameLocation": "245:4:9",
											"nodeType": "EnumValue",
											"src": "245:4:9"
										},
										{
											"id": 1799,
											"name": "Up",
											"nameLocation": "287:2:9",
											"nodeType": "EnumValue",
											"src": "287:2:9"
										},
										{
											"id": 1800,
											"name": "Zero",
											"nameLocation": "318:4:9",
											"nodeType": "EnumValue",
											"src": "318:4:9"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:9",
									"nodeType": "EnumDefinition",
									"src": "221:122:9"
								},
								{
									"body": {
										"id": 1818,
										"nodeType": "Block",
										"src": "480:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1813,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1811,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1804,
															"src": "497:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1812,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "501:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1815,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1806,
														"src": "509:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:9",
													"trueExpression": {
														"id": 1814,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "505:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1810,
												"id": 1817,
												"nodeType": "Return",
												"src": "490:20:9"
											}
										]
									},
									"documentation": {
										"id": 1802,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:9",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "426:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "437:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:9"
									},
									"returnParameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1819,
												"src": "471:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1808,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:9"
									},
									"scope": 2660,
									"src": "413:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1836,
										"nodeType": "Block",
										"src": "655:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1829,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1822,
															"src": "672:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1830,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1824,
															"src": "676:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1833,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1824,
														"src": "684:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:9",
													"trueExpression": {
														"id": 1832,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1822,
														"src": "680:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1828,
												"id": 1835,
												"nodeType": "Return",
												"src": "665:20:9"
											}
										]
									},
									"documentation": {
										"id": 1820,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:9",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "601:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "612:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:9"
									},
									"returnParameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "646:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:9"
									},
									"scope": 2660,
									"src": "588:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1859,
										"nodeType": "Block",
										"src": "876:82:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1849,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1847,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1840,
																	"src": "931:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1848,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1842,
																	"src": "935:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1850,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1851,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1840,
																		"src": "941:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1852,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1842,
																		"src": "945:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1854,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1846,
												"id": 1858,
												"nodeType": "Return",
												"src": "923:28:9"
											}
										]
									},
									"documentation": {
										"id": 1838,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:9",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1860,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "822:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "833:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:9"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1860,
												"src": "867:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:9"
									},
									"scope": 2660,
									"src": "805:153:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1884,
										"nodeType": "Block",
										"src": "1228:123:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1872,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1870,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1863,
															"src": "1316:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1879,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1874,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1863,
																			"src": "1330:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1877,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1878,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1865,
																"src": "1339:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:9",
													"trueExpression": {
														"hexValue": "30",
														"id": 1873,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1869,
												"id": 1883,
												"nodeType": "Return",
												"src": "1309:35:9"
											}
										]
									},
									"documentation": {
										"id": 1861,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:9",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 1885,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "1174:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1865,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "1185:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:9"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1885,
												"src": "1219:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:9"
									},
									"scope": 2660,
									"src": "1157:194:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2007,
										"nodeType": "Block",
										"src": "1765:4115:9",
										"statements": [
											{
												"id": 2006,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:9",
												"statements": [
													{
														"assignments": [
															1898
														],
														"declarations": [
															{
																"constant": false,
																"id": 1898,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 2006,
																"src": "2096:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1897,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1899,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:9"
													},
													{
														"assignments": [
															1901
														],
														"declarations": [
															{
																"constant": false,
																"id": 1901,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 2006,
																"src": "2168:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1900,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1902,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:9"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "2248:157:9",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:9"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:9"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2313:18:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:9"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:9"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2348:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:9"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:9"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:9"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:9"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1901,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1888,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1888,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1890,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1890,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:9",
																"valueSize": 1
															}
														],
														"id": 1903,
														"nodeType": "InlineAssembly",
														"src": "2239:166:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1904,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1901,
																"src": "2486:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1912,
														"nodeType": "IfStatement",
														"src": "2482:368:9",
														"trueBody": {
															"id": 1911,
															"nodeType": "Block",
															"src": "2498:352:9",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1909,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1907,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1898,
																			"src": "2816:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1908,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1892,
																			"src": "2824:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1896,
																	"id": 1910,
																	"nodeType": "Return",
																	"src": "2809:26:9"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1916,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1914,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1892,
																		"src": "2960:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 1915,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1901,
																		"src": "2974:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 1917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 1913,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1918,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1919,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:9"
													},
													{
														"assignments": [
															1921
														],
														"declarations": [
															{
																"constant": false,
																"id": 1921,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:9",
																"nodeType": "VariableDeclaration",
																"scope": 2006,
																"src": "3261:17:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1920,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1922,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:9"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3301:291:9",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "3370:38:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:9"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:9"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:9"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3490:41:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:9"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:9"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3548:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:9"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1892,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1901,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1901,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1921,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1921,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1921,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1888,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1890,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:9",
																"valueSize": 1
															}
														],
														"id": 1923,
														"nodeType": "InlineAssembly",
														"src": "3292:300:9"
													},
													{
														"assignments": [
															1925
														],
														"declarations": [
															{
																"constant": false,
																"id": 1925,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:9",
																"nodeType": "VariableDeclaration",
																"scope": 2006,
																"src": "3899:12:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1924,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1933,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1926,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1892,
																"src": "3914:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1928,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:9",
																			"subExpression": {
																				"id": 1927,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1892,
																				"src": "3930:11:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1929,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1931,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:9"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "3969:362:9",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "4034:37:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:9"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:9"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4138:25:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:9"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:9"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4278:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:9",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:9"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:9"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:9"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:9"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:9"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:9"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:9"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "paris",
														"externalReferences": [
															{
																"declaration": 1892,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1892,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1898,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1925,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1925,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1925,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1925,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1925,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:9",
																"valueSize": 1
															}
														],
														"id": 1934,
														"nodeType": "InlineAssembly",
														"src": "3960:371:9"
													},
													{
														"expression": {
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1935,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "4397:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1936,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1901,
																	"src": "4406:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1937,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1925,
																	"src": "4414:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1940,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:9"
													},
													{
														"assignments": [
															1942
														],
														"declarations": [
															{
																"constant": false,
																"id": 1942,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 2006,
																"src": "4736:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1941,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1949,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1948,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1945,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1943,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1944,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1892,
																			"src": "4759:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1946,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1947,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:9"
													},
													{
														"expression": {
															"id": 1956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1950,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "4992:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1955,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1954,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1952,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1892,
																		"src": "5007:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1953,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "5021:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1957,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:9"
													},
													{
														"expression": {
															"id": 1964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1958,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "5061:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1963,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1962,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1960,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1892,
																		"src": "5076:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1961,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "5090:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1965,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:9"
													},
													{
														"expression": {
															"id": 1972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1966,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "5131:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1971,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1968,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1892,
																		"src": "5146:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1969,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "5160:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1973,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:9"
													},
													{
														"expression": {
															"id": 1980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1974,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "5201:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1976,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1892,
																		"src": "5216:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1977,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "5230:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1981,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:9"
													},
													{
														"expression": {
															"id": 1988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1982,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "5271:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1984,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1892,
																		"src": "5286:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1985,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "5300:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1989,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:9"
													},
													{
														"expression": {
															"id": 1996,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1990,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1942,
																"src": "5342:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1995,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1991,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1992,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1892,
																		"src": "5357:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1993,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1942,
																		"src": "5371:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1997,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:9"
													},
													{
														"expression": {
															"id": 2002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1998,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1895,
																"src": "5812:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1999,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1898,
																	"src": "5821:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2000,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1942,
																	"src": "5829:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2003,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:9"
													},
													{
														"expression": {
															"id": 2004,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "5857:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1896,
														"id": 2005,
														"nodeType": "Return",
														"src": "5850:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1886,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:9",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 2008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1683:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1890,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1694:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1705:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:9"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 2008,
												"src": "1749:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1894,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:9"
									},
									"scope": 2660,
									"src": "1667:4213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2051,
										"nodeType": "Block",
										"src": "6122:189:9",
										"statements": [
											{
												"assignments": [
													2024
												],
												"declarations": [
													{
														"constant": false,
														"id": 2024,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2051,
														"src": "6132:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2023,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2030,
												"initialValue": {
													"arguments": [
														{
															"id": 2026,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2011,
															"src": "6156:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2027,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2013,
															"src": "6159:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2028,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2015,
															"src": "6162:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2025,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2008,
															2052
														],
														"referencedDeclaration": 2008,
														"src": "6149:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2029,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$1801",
															"typeString": "enum Math.Rounding"
														},
														"id": 2034,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2031,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "6188:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1801",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 2032,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "6200:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$1801_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 2033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:9",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1799,
															"src": "6200:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$1801",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2036,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2011,
																	"src": "6222:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2037,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2013,
																	"src": "6225:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2038,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2015,
																	"src": "6228:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2035,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2040,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2048,
												"nodeType": "IfStatement",
												"src": "6184:98:9",
												"trueBody": {
													"id": 2047,
													"nodeType": "Block",
													"src": "6246:36:9",
													"statements": [
														{
															"expression": {
																"id": 2045,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2043,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2024,
																	"src": "6260:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2046,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2049,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2024,
													"src": "6298:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2022,
												"id": 2050,
												"nodeType": "Return",
												"src": "6291:13:9"
											}
										]
									},
									"documentation": {
										"id": 2009,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:9",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2011,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "6028:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2013,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "6039:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2012,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "6050:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "6071:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1801",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2017,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2016,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1801,
														"src": "6071:8:9"
													},
													"referencedDeclaration": 1801,
													"src": "6071:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1801",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:9"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "6113:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:9"
									},
									"scope": 2660,
									"src": "6012:299:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2163,
										"nodeType": "Block",
										"src": "6587:1585:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2060,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2055,
														"src": "6601:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2061,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2066,
												"nodeType": "IfStatement",
												"src": "6597:45:9",
												"trueBody": {
													"id": 2065,
													"nodeType": "Block",
													"src": "6609:33:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2063,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2059,
															"id": 2064,
															"nodeType": "Return",
															"src": "6623:8:9"
														}
													]
												}
											},
											{
												"assignments": [
													2068
												],
												"declarations": [
													{
														"constant": false,
														"id": 2068,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2163,
														"src": "7321:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2067,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2077,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2069,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2071,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2055,
																			"src": "7349:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2070,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2332,
																			2368
																		],
																		"referencedDeclaration": 2332,
																		"src": "7344:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2073,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2075,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:9"
											},
											{
												"id": 2162,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:9",
												"statements": [
													{
														"expression": {
															"id": 2087,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2078,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "7782:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2079,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "7792:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2082,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2080,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "7801:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2081,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2068,
																					"src": "7805:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2084,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2085,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2088,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:9"
													},
													{
														"expression": {
															"id": 2098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2089,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "7831:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2090,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "7841:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2093,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2091,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "7850:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2092,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2068,
																					"src": "7854:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2095,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2096,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2099,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:9"
													},
													{
														"expression": {
															"id": 2109,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2100,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "7880:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2108,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2101,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "7890:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2104,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2102,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "7899:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2103,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2068,
																					"src": "7903:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2106,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2107,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2110,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:9"
													},
													{
														"expression": {
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2111,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "7929:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2112,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "7939:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2113,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "7948:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2114,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2068,
																					"src": "7952:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2117,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2121,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:9"
													},
													{
														"expression": {
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2122,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "7978:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2127,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2123,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "7988:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2126,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2124,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "7997:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2125,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2068,
																					"src": "8001:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2128,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2132,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:9"
													},
													{
														"expression": {
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2133,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "8027:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2141,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2134,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "8037:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2135,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "8046:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2136,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2068,
																					"src": "8050:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2139,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2143,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:9"
													},
													{
														"expression": {
															"id": 2153,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2144,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "8076:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2152,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2149,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2145,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2068,
																				"src": "8086:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2148,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2146,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2055,
																					"src": "8095:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2147,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2068,
																					"src": "8099:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2150,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2151,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2154,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2156,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2068,
																	"src": "8136:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2157,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2055,
																		"src": "8144:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2158,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2068,
																		"src": "8148:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2155,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1837,
																"src": "8132:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2160,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2059,
														"id": 2161,
														"nodeType": "Return",
														"src": "8125:30:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2053,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:9",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2164,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "6544:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2054,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:9"
									},
									"returnParameters": {
										"id": 2059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2058,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "6578:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:9"
									},
									"scope": 2660,
									"src": "6530:1642:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "8348:161:9",
										"statements": [
											{
												"id": 2198,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:9",
												"statements": [
													{
														"assignments": [
															2176
														],
														"declarations": [
															{
																"constant": false,
																"id": 2176,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2198,
																"src": "8382:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2175,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2180,
														"initialValue": {
															"arguments": [
																{
																	"id": 2178,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2167,
																	"src": "8404:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2177,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2164,
																	2200
																],
																"referencedDeclaration": 2164,
																"src": "8399:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2181,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "8427:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2191,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1801",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2185,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2182,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2170,
																					"src": "8437:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1801",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2183,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1801,
																						"src": "8449:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1801_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2184,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1799,
																					"src": "8449:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1801",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2190,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2188,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2186,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2176,
																						"src": "8464:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2187,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2176,
																						"src": "8473:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2189,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2167,
																					"src": "8482:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2193,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2194,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2192,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2195,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2174,
														"id": 2197,
														"nodeType": "Return",
														"src": "8420:72:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2165,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:9",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2167,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "8286:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2170,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "8297:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1801",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2169,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2168,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1801,
														"src": "8297:8:9"
													},
													"referencedDeclaration": 1801,
													"src": "8297:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1801",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:9"
									},
									"returnParameters": {
										"id": 2174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2173,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "8339:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:9"
									},
									"scope": 2660,
									"src": "8272:237:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2331,
										"nodeType": "Block",
										"src": "8694:922:9",
										"statements": [
											{
												"assignments": [
													2209
												],
												"declarations": [
													{
														"constant": false,
														"id": 2209,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2331,
														"src": "8704:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2208,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2211,
												"initialValue": {
													"hexValue": "30",
													"id": 2210,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:9"
											},
											{
												"id": 2328,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2212,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2203,
																	"src": "8760:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2213,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2226,
														"nodeType": "IfStatement",
														"src": "8756:99:9",
														"trueBody": {
															"id": 2225,
															"nodeType": "Block",
															"src": "8778:77:9",
															"statements": [
																{
																	"expression": {
																		"id": 2219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2217,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2203,
																			"src": "8796:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2220,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:9"
																},
																{
																	"expression": {
																		"id": 2223,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2221,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "8827:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2222,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2224,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2231,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2227,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2203,
																	"src": "8872:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2241,
														"nodeType": "IfStatement",
														"src": "8868:96:9",
														"trueBody": {
															"id": 2240,
															"nodeType": "Block",
															"src": "8889:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2232,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2203,
																			"src": "8907:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2235,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:9"
																},
																{
																	"expression": {
																		"id": 2238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2236,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "8937:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2239,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2246,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2242,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2203,
																	"src": "8981:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2245,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2256,
														"nodeType": "IfStatement",
														"src": "8977:96:9",
														"trueBody": {
															"id": 2255,
															"nodeType": "Block",
															"src": "8998:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2249,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2247,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2203,
																			"src": "9016:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2248,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2250,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:9"
																},
																{
																	"expression": {
																		"id": 2253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2251,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "9046:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2254,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2257,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2203,
																	"src": "9090:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2260,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2271,
														"nodeType": "IfStatement",
														"src": "9086:96:9",
														"trueBody": {
															"id": 2270,
															"nodeType": "Block",
															"src": "9107:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 2264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2262,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2203,
																			"src": "9125:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2265,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:9"
																},
																{
																	"expression": {
																		"id": 2268,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2266,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "9155:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2267,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2269,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2272,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2203,
																	"src": "9199:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2275,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2286,
														"nodeType": "IfStatement",
														"src": "9195:93:9",
														"trueBody": {
															"id": 2285,
															"nodeType": "Block",
															"src": "9215:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2277,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2203,
																			"src": "9233:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2280,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:9"
																},
																{
																	"expression": {
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2281,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "9262:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2284,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2287,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2203,
																	"src": "9305:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2288,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2290,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2301,
														"nodeType": "IfStatement",
														"src": "9301:93:9",
														"trueBody": {
															"id": 2300,
															"nodeType": "Block",
															"src": "9321:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2294,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2292,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2203,
																			"src": "9339:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2295,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:9"
																},
																{
																	"expression": {
																		"id": 2298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2296,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "9368:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2299,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2302,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2203,
																	"src": "9411:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2316,
														"nodeType": "IfStatement",
														"src": "9407:93:9",
														"trueBody": {
															"id": 2315,
															"nodeType": "Block",
															"src": "9427:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 2309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2307,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2203,
																			"src": "9445:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2308,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2310,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:9"
																},
																{
																	"expression": {
																		"id": 2313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2311,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "9474:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2312,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2314,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2317,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2203,
																	"src": "9517:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2327,
														"nodeType": "IfStatement",
														"src": "9513:64:9",
														"trueBody": {
															"id": 2326,
															"nodeType": "Block",
															"src": "9533:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2322,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2209,
																			"src": "9551:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2323,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2325,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2329,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2209,
													"src": "9603:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2207,
												"id": 2330,
												"nodeType": "Return",
												"src": "9596:13:9"
											}
										]
									},
									"documentation": {
										"id": 2201,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:9",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "8647:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:9"
									},
									"returnParameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2332,
												"src": "8685:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:9"
									},
									"scope": 2660,
									"src": "8633:983:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2367,
										"nodeType": "Block",
										"src": "9849:165:9",
										"statements": [
											{
												"id": 2366,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:9",
												"statements": [
													{
														"assignments": [
															2344
														],
														"declarations": [
															{
																"constant": false,
																"id": 2344,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2366,
																"src": "9883:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2343,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2348,
														"initialValue": {
															"arguments": [
																{
																	"id": 2346,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2335,
																	"src": "9905:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2345,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2332,
																	2368
																],
																"referencedDeclaration": 2332,
																"src": "9900:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2349,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2344,
																"src": "9932:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2359,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1801",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2353,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2350,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2338,
																					"src": "9942:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1801",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2351,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1801,
																						"src": "9954:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1801_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2352,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1799,
																					"src": "9954:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1801",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2358,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2356,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2354,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2355,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2344,
																						"src": "9974:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2357,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2335,
																					"src": "9983:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2363,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2342,
														"id": 2365,
														"nodeType": "Return",
														"src": "9925:72:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2333,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:9",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2335,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "9783:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2338,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "9798:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1801",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2337,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2336,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1801,
														"src": "9798:8:9"
													},
													"referencedDeclaration": 1801,
													"src": "9798:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1801",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:9"
									},
									"returnParameters": {
										"id": 2342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "9840:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:9"
									},
									"scope": 2660,
									"src": "9769:245:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2496,
										"nodeType": "Block",
										"src": "10201:854:9",
										"statements": [
											{
												"assignments": [
													2377
												],
												"declarations": [
													{
														"constant": false,
														"id": 2377,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2496,
														"src": "10211:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2376,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2379,
												"initialValue": {
													"hexValue": "30",
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:9"
											},
											{
												"id": 2493,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2380,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2371,
																"src": "10267:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2383,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2382,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2396,
														"nodeType": "IfStatement",
														"src": "10263:103:9",
														"trueBody": {
															"id": 2395,
															"nodeType": "Block",
															"src": "10286:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2385,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2371,
																			"src": "10304:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2386,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2387,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2390,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:9"
																},
																{
																	"expression": {
																		"id": 2393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2391,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "10339:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2394,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2397,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2371,
																"src": "10383:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2399,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2413,
														"nodeType": "IfStatement",
														"src": "10379:103:9",
														"trueBody": {
															"id": 2412,
															"nodeType": "Block",
															"src": "10402:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2406,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2402,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2371,
																			"src": "10420:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2405,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2403,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2404,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2407,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:9"
																},
																{
																	"expression": {
																		"id": 2410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2408,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "10455:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2411,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2414,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2371,
																"src": "10499:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2417,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2430,
														"nodeType": "IfStatement",
														"src": "10495:103:9",
														"trueBody": {
															"id": 2429,
															"nodeType": "Block",
															"src": "10518:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 2423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2371,
																			"src": "10536:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2422,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2420,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2421,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2424,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:9"
																},
																{
																	"expression": {
																		"id": 2427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2425,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "10571:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2426,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2428,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2431,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2371,
																"src": "10615:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2447,
														"nodeType": "IfStatement",
														"src": "10611:100:9",
														"trueBody": {
															"id": 2446,
															"nodeType": "Block",
															"src": "10633:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2436,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2371,
																			"src": "10651:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2437,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2441,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:9"
																},
																{
																	"expression": {
																		"id": 2444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2442,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "10685:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2445,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2452,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2448,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2371,
																"src": "10728:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2449,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2464,
														"nodeType": "IfStatement",
														"src": "10724:100:9",
														"trueBody": {
															"id": 2463,
															"nodeType": "Block",
															"src": "10746:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2457,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2453,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2371,
																			"src": "10764:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2454,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2455,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2458,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:9"
																},
																{
																	"expression": {
																		"id": 2461,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2459,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "10798:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2462,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2465,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2371,
																"src": "10841:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2467,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2481,
														"nodeType": "IfStatement",
														"src": "10837:100:9",
														"trueBody": {
															"id": 2480,
															"nodeType": "Block",
															"src": "10859:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 2474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2470,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2371,
																			"src": "10877:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2472,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2475,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:9"
																},
																{
																	"expression": {
																		"id": 2478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2476,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "10911:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2479,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2482,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2371,
																"src": "10954:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2492,
														"nodeType": "IfStatement",
														"src": "10950:66:9",
														"trueBody": {
															"id": 2491,
															"nodeType": "Block",
															"src": "10972:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2487,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2377,
																			"src": "10990:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2490,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2494,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2377,
													"src": "11042:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2375,
												"id": 2495,
												"nodeType": "Return",
												"src": "11035:13:9"
											}
										]
									},
									"documentation": {
										"id": 2369,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:9",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "10154:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:9"
									},
									"returnParameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2374,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "10192:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:9"
									},
									"scope": 2660,
									"src": "10139:916:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2532,
										"nodeType": "Block",
										"src": "11290:167:9",
										"statements": [
											{
												"id": 2531,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:9",
												"statements": [
													{
														"assignments": [
															2509
														],
														"declarations": [
															{
																"constant": false,
																"id": 2509,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2531,
																"src": "11324:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2508,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2513,
														"initialValue": {
															"arguments": [
																{
																	"id": 2511,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2500,
																	"src": "11347:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2510,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2497,
																	2533
																],
																"referencedDeclaration": 2497,
																"src": "11341:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2514,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2509,
																"src": "11374:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1801",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2515,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2503,
																					"src": "11384:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1801",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2516,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1801,
																						"src": "11396:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1801_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2517,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1799,
																					"src": "11396:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1801",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2523,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2521,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2519,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2520,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2509,
																						"src": "11417:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2522,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2500,
																					"src": "11426:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2526,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2528,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2507,
														"id": 2530,
														"nodeType": "Return",
														"src": "11367:73:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2498,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:9",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "11224:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "11239:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1801",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2502,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2501,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1801,
														"src": "11239:8:9"
													},
													"referencedDeclaration": 1801,
													"src": "11239:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1801",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:9"
									},
									"returnParameters": {
										"id": 2507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2533,
												"src": "11281:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:9"
									},
									"scope": 2660,
									"src": "11209:248:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2619,
										"nodeType": "Block",
										"src": "11771:600:9",
										"statements": [
											{
												"assignments": [
													2542
												],
												"declarations": [
													{
														"constant": false,
														"id": 2542,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2619,
														"src": "11781:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2541,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2544,
												"initialValue": {
													"hexValue": "30",
													"id": 2543,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:9"
											},
											{
												"id": 2616,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2547,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2545,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2536,
																	"src": "11837:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2559,
														"nodeType": "IfStatement",
														"src": "11833:98:9",
														"trueBody": {
															"id": 2558,
															"nodeType": "Block",
															"src": "11855:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 2552,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2550,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2536,
																			"src": "11873:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2551,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2553,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:9"
																},
																{
																	"expression": {
																		"id": 2556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2554,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2542,
																			"src": "11904:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2555,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2557,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2562,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2560,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2536,
																	"src": "11948:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2561,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2563,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2574,
														"nodeType": "IfStatement",
														"src": "11944:95:9",
														"trueBody": {
															"id": 2573,
															"nodeType": "Block",
															"src": "11965:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2536,
																			"src": "11983:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2566,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2568,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:9"
																},
																{
																	"expression": {
																		"id": 2571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2569,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2542,
																			"src": "12013:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2572,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2575,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2536,
																	"src": "12056:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2589,
														"nodeType": "IfStatement",
														"src": "12052:95:9",
														"trueBody": {
															"id": 2588,
															"nodeType": "Block",
															"src": "12073:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2582,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2580,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2536,
																			"src": "12091:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2583,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:9"
																},
																{
																	"expression": {
																		"id": 2586,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2584,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2542,
																			"src": "12121:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2585,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2587,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2590,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2536,
																	"src": "12164:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2591,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2604,
														"nodeType": "IfStatement",
														"src": "12160:95:9",
														"trueBody": {
															"id": 2603,
															"nodeType": "Block",
															"src": "12181:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2595,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2536,
																			"src": "12199:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2596,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2598,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:9"
																},
																{
																	"expression": {
																		"id": 2601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2599,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2542,
																			"src": "12229:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2600,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2602,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2605,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2536,
																	"src": "12272:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2608,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2615,
														"nodeType": "IfStatement",
														"src": "12268:64:9",
														"trueBody": {
															"id": 2614,
															"nodeType": "Block",
															"src": "12288:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2610,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2542,
																			"src": "12306:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2613,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2617,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2542,
													"src": "12358:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2540,
												"id": 2618,
												"nodeType": "Return",
												"src": "12351:13:9"
											}
										]
									},
									"documentation": {
										"id": 2534,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:9",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "11724:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:9"
									},
									"returnParameters": {
										"id": 2540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2620,
												"src": "11762:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:9"
									},
									"scope": 2660,
									"src": "11708:663:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2658,
										"nodeType": "Block",
										"src": "12608:174:9",
										"statements": [
											{
												"id": 2657,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:9",
												"statements": [
													{
														"assignments": [
															2632
														],
														"declarations": [
															{
																"constant": false,
																"id": 2632,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2657,
																"src": "12642:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2631,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2636,
														"initialValue": {
															"arguments": [
																{
																	"id": 2634,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2623,
																	"src": "12666:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2633,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2620,
																	2659
																],
																"referencedDeclaration": 2620,
																"src": "12659:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2637,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2632,
																"src": "12693:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$1801",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 2641,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2638,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2626,
																					"src": "12703:8:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1801",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 2639,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1801,
																						"src": "12715:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$1801_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 2640,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:9",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1799,
																					"src": "12715:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$1801",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2649,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2647,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2642,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2645,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2643,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2632,
																									"src": "12736:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2644,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2646,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2648,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2623,
																					"src": "12751:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2651,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2654,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2630,
														"id": 2656,
														"nodeType": "Return",
														"src": "12686:79:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2621,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:9",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "12542:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2626,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "12557:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1801",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2625,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2624,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1801,
														"src": "12557:8:9"
													},
													"referencedDeclaration": 1801,
													"src": "12557:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1801",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:9"
									},
									"returnParameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "12599:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:9"
									},
									"scope": 2660,
									"src": "12526:256:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2661,
							"src": "202:12582:9",
							"usedErrors": []
						}
					],
					"src": "103:12682:9"
				},
				"id": 9
			},
			".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2765
						]
					},
					"id": 2766,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2662,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2663,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:10",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2765,
							"linearizedBaseContracts": [
								2765
							],
							"name": "SignedMath",
							"nameLocation": "223:10:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2680,
										"nodeType": "Block",
										"src": "375:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2675,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2673,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2666,
															"src": "392:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2674,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2668,
															"src": "396:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2677,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2668,
														"src": "404:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:10",
													"trueExpression": {
														"id": 2676,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2666,
														"src": "400:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2672,
												"id": 2679,
												"nodeType": "Return",
												"src": "385:20:10"
											}
										]
									},
									"documentation": {
										"id": 2664,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:10",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2666,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2681,
												"src": "324:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2665,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2681,
												"src": "334:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2667,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:10"
									},
									"returnParameters": {
										"id": 2672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2681,
												"src": "367:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2670,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:10"
									},
									"scope": 2765,
									"src": "311:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2698,
										"nodeType": "Block",
										"src": "554:37:10",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2693,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2691,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2684,
															"src": "571:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2692,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2686,
															"src": "575:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2695,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2686,
														"src": "583:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:10",
													"trueExpression": {
														"id": 2694,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2684,
														"src": "579:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2690,
												"id": 2697,
												"nodeType": "Return",
												"src": "564:20:10"
											}
										]
									},
									"documentation": {
										"id": 2682,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:10",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2684,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "503:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2683,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2686,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "513:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2685,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:10"
									},
									"returnParameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2699,
												"src": "546:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2688,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:10"
									},
									"scope": 2765,
									"src": "490:101:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2742,
										"nodeType": "Block",
										"src": "796:162:10",
										"statements": [
											{
												"assignments": [
													2710
												],
												"declarations": [
													{
														"constant": false,
														"id": 2710,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:10",
														"nodeType": "VariableDeclaration",
														"scope": 2742,
														"src": "858:8:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2709,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2723,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2711,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2702,
																	"src": "870:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2712,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2704,
																	"src": "874:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2714,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2715,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2702,
																				"src": "881:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2716,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2704,
																				"src": "885:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2718,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2721,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:10"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2724,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2710,
														"src": "910:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2738,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2729,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2710,
																						"src": "930:1:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2728,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2727,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2730,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2731,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2726,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2725,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2733,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2734,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2702,
																				"src": "944:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2735,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2704,
																				"src": "948:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2737,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2739,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2708,
												"id": 2741,
												"nodeType": "Return",
												"src": "903:48:10"
											}
										]
									},
									"documentation": {
										"id": 2700,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:10",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2702,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "745:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2701,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2704,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "755:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2703,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:10"
									},
									"returnParameters": {
										"id": 2708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "788:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2706,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:10"
									},
									"scope": 2765,
									"src": "728:230:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2763,
										"nodeType": "Block",
										"src": "1102:158:10",
										"statements": [
											{
												"id": 2762,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2755,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2753,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2746,
																			"src": "1227:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2758,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:10",
																		"subExpression": {
																			"id": 2757,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2746,
																			"src": "1241:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2759,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:10",
																	"trueExpression": {
																		"id": 2756,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2746,
																		"src": "1236:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2751,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 2760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2750,
														"id": 2761,
														"nodeType": "Return",
														"src": "1212:31:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2744,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:10",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2764,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 2764,
												"src": "1060:8:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2745,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:10"
									},
									"returnParameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2764,
												"src": "1093:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:10"
									},
									"scope": 2765,
									"src": "1047:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2766,
							"src": "215:1047:10",
							"usedErrors": []
						}
					],
					"src": "109:1154:10"
				},
				"id": 10
			}
		}
	}
}